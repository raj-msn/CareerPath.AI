{"ast":null,"code":"import { layout } from \"dagre-d3-es/src/dagre/index.js\";\nimport * as graphlibJson from \"dagre-d3-es/src/graphlib/json.js\";\nimport { c as createLabel, g as getSubGraphTitleMargins, i as intersectRect, a as insertMarkers, b as clear$2, d as clear$3, u as updateNodeBounds, s as setNodeElem, e as insertNode, f as insertEdgeLabel, p as positionNode, h as insertEdge, j as positionEdgeLabel } from \"./edges-e0da2a9e.js\";\nimport { l as log, c as getConfig, m as evaluate } from \"./mermaid-b5860b54.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { a as createText } from \"./createText-2e5e7dd3.js\";\nimport { select } from \"d3\";\nlet clusterDb = {};\nlet descendants = {};\nlet parents = {};\nconst clear$1 = () => {\n  descendants = {};\n  parents = {};\n  clusterDb = {};\n};\nconst isDescendant = (id, ancestorId) => {\n  log.trace(\"In isDescendant\", ancestorId, \" \", id, \" = \", descendants[ancestorId].includes(id));\n  if (descendants[ancestorId].includes(id)) {\n    return true;\n  }\n  return false;\n};\nconst edgeInCluster = (edge, clusterId) => {\n  log.info(\"Descendants of \", clusterId, \" is \", descendants[clusterId]);\n  log.info(\"Edge is \", edge);\n  if (edge.v === clusterId) {\n    return false;\n  }\n  if (edge.w === clusterId) {\n    return false;\n  }\n  if (!descendants[clusterId]) {\n    log.debug(\"Tilt, \", clusterId, \",not in descendants\");\n    return false;\n  }\n  return descendants[clusterId].includes(edge.v) || isDescendant(edge.v, clusterId) || isDescendant(edge.w, clusterId) || descendants[clusterId].includes(edge.w);\n};\nconst copy = (clusterId, graph, newGraph, rootId) => {\n  log.warn(\"Copying children of \", clusterId, \"root\", rootId, \"data\", graph.node(clusterId), rootId);\n  const nodes = graph.children(clusterId) || [];\n  if (clusterId !== rootId) {\n    nodes.push(clusterId);\n  }\n  log.warn(\"Copying (nodes) clusterId\", clusterId, \"nodes\", nodes);\n  nodes.forEach(node => {\n    if (graph.children(node).length > 0) {\n      copy(node, graph, newGraph, rootId);\n    } else {\n      const data = graph.node(node);\n      log.info(\"cp \", node, \" to \", rootId, \" with parent \", clusterId);\n      newGraph.setNode(node, data);\n      if (rootId !== graph.parent(node)) {\n        log.warn(\"Setting parent\", node, graph.parent(node));\n        newGraph.setParent(node, graph.parent(node));\n      }\n      if (clusterId !== rootId && node !== clusterId) {\n        log.debug(\"Setting parent\", node, clusterId);\n        newGraph.setParent(node, clusterId);\n      } else {\n        log.info(\"In copy \", clusterId, \"root\", rootId, \"data\", graph.node(clusterId), rootId);\n        log.debug(\"Not Setting parent for node=\", node, \"cluster!==rootId\", clusterId !== rootId, \"node!==clusterId\", node !== clusterId);\n      }\n      const edges = graph.edges(node);\n      log.debug(\"Copying Edges\", edges);\n      edges.forEach(edge => {\n        log.info(\"Edge\", edge);\n        const data2 = graph.edge(edge.v, edge.w, edge.name);\n        log.info(\"Edge data\", data2, rootId);\n        try {\n          if (edgeInCluster(edge, rootId)) {\n            log.info(\"Copying as \", edge.v, edge.w, data2, edge.name);\n            newGraph.setEdge(edge.v, edge.w, data2, edge.name);\n            log.info(\"newGraph edges \", newGraph.edges(), newGraph.edge(newGraph.edges()[0]));\n          } else {\n            log.info(\"Skipping copy of edge \", edge.v, \"-->\", edge.w, \" rootId: \", rootId, \" clusterId:\", clusterId);\n          }\n        } catch (e) {\n          log.error(e);\n        }\n      });\n    }\n    log.debug(\"Removing node\", node);\n    graph.removeNode(node);\n  });\n};\nconst extractDescendants = (id, graph) => {\n  const children = graph.children(id);\n  let res = [...children];\n  for (const child of children) {\n    parents[child] = id;\n    res = [...res, ...extractDescendants(child, graph)];\n  }\n  return res;\n};\nconst findNonClusterChild = (id, graph) => {\n  log.trace(\"Searching\", id);\n  const children = graph.children(id);\n  log.trace(\"Searching children of id \", id, children);\n  if (children.length < 1) {\n    log.trace(\"This is a valid node\", id);\n    return id;\n  }\n  for (const child of children) {\n    const _id = findNonClusterChild(child, graph);\n    if (_id) {\n      log.trace(\"Found replacement for\", id, \" => \", _id);\n      return _id;\n    }\n  }\n};\nconst getAnchorId = id => {\n  if (!clusterDb[id]) {\n    return id;\n  }\n  if (!clusterDb[id].externalConnections) {\n    return id;\n  }\n  if (clusterDb[id]) {\n    return clusterDb[id].id;\n  }\n  return id;\n};\nconst adjustClustersAndEdges = (graph, depth) => {\n  if (!graph || depth > 10) {\n    log.debug(\"Opting out, no graph \");\n    return;\n  } else {\n    log.debug(\"Opting in, graph \");\n  }\n  graph.nodes().forEach(function (id) {\n    const children = graph.children(id);\n    if (children.length > 0) {\n      log.warn(\"Cluster identified\", id, \" Replacement id in edges: \", findNonClusterChild(id, graph));\n      descendants[id] = extractDescendants(id, graph);\n      clusterDb[id] = {\n        id: findNonClusterChild(id, graph),\n        clusterData: graph.node(id)\n      };\n    }\n  });\n  graph.nodes().forEach(function (id) {\n    const children = graph.children(id);\n    const edges = graph.edges();\n    if (children.length > 0) {\n      log.debug(\"Cluster identified\", id, descendants);\n      edges.forEach(edge => {\n        if (edge.v !== id && edge.w !== id) {\n          const d1 = isDescendant(edge.v, id);\n          const d2 = isDescendant(edge.w, id);\n          if (d1 ^ d2) {\n            log.warn(\"Edge: \", edge, \" leaves cluster \", id);\n            log.warn(\"Descendants of XXX \", id, \": \", descendants[id]);\n            clusterDb[id].externalConnections = true;\n          }\n        }\n      });\n    } else {\n      log.debug(\"Not a cluster \", id, descendants);\n    }\n  });\n  for (let id of Object.keys(clusterDb)) {\n    const nonClusterChild = clusterDb[id].id;\n    const parent = graph.parent(nonClusterChild);\n    if (parent !== id && clusterDb[parent] && !clusterDb[parent].externalConnections) {\n      clusterDb[id].id = parent;\n    }\n  }\n  graph.edges().forEach(function (e) {\n    const edge = graph.edge(e);\n    log.warn(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n    log.warn(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(graph.edge(e)));\n    let v = e.v;\n    let w = e.w;\n    log.warn(\"Fix XXX\", clusterDb, \"ids:\", e.v, e.w, \"Translating: \", clusterDb[e.v], \" --- \", clusterDb[e.w]);\n    if (clusterDb[e.v] && clusterDb[e.w] && clusterDb[e.v] === clusterDb[e.w]) {\n      log.warn(\"Fixing and trixing link to self - removing XXX\", e.v, e.w, e.name);\n      log.warn(\"Fixing and trixing - removing XXX\", e.v, e.w, e.name);\n      v = getAnchorId(e.v);\n      w = getAnchorId(e.w);\n      graph.removeEdge(e.v, e.w, e.name);\n      const specialId = e.w + \"---\" + e.v;\n      graph.setNode(specialId, {\n        domId: specialId,\n        id: specialId,\n        labelStyle: \"\",\n        labelText: edge.label,\n        padding: 0,\n        shape: \"labelRect\",\n        style: \"\"\n      });\n      const edge1 = structuredClone(edge);\n      const edge2 = structuredClone(edge);\n      edge1.label = \"\";\n      edge1.arrowTypeEnd = \"none\";\n      edge2.label = \"\";\n      edge1.fromCluster = e.v;\n      edge2.toCluster = e.v;\n      graph.setEdge(v, specialId, edge1, e.name + \"-cyclic-special\");\n      graph.setEdge(specialId, w, edge2, e.name + \"-cyclic-special\");\n    } else if (clusterDb[e.v] || clusterDb[e.w]) {\n      log.warn(\"Fixing and trixing - removing XXX\", e.v, e.w, e.name);\n      v = getAnchorId(e.v);\n      w = getAnchorId(e.w);\n      graph.removeEdge(e.v, e.w, e.name);\n      if (v !== e.v) {\n        const parent = graph.parent(v);\n        clusterDb[parent].externalConnections = true;\n        edge.fromCluster = e.v;\n      }\n      if (w !== e.w) {\n        const parent = graph.parent(w);\n        clusterDb[parent].externalConnections = true;\n        edge.toCluster = e.w;\n      }\n      log.warn(\"Fix Replacing with XXX\", v, w, e.name);\n      graph.setEdge(v, w, edge, e.name);\n    }\n  });\n  log.warn(\"Adjusted Graph\", graphlibJson.write(graph));\n  extractor(graph, 0);\n  log.trace(clusterDb);\n};\nconst extractor = (graph, depth) => {\n  log.warn(\"extractor - \", depth, graphlibJson.write(graph), graph.children(\"D\"));\n  if (depth > 10) {\n    log.error(\"Bailing out\");\n    return;\n  }\n  let nodes = graph.nodes();\n  let hasChildren = false;\n  for (const node of nodes) {\n    const children = graph.children(node);\n    hasChildren = hasChildren || children.length > 0;\n  }\n  if (!hasChildren) {\n    log.debug(\"Done, no node has children\", graph.nodes());\n    return;\n  }\n  log.debug(\"Nodes = \", nodes, depth);\n  for (const node of nodes) {\n    log.debug(\"Extracting node\", node, clusterDb, clusterDb[node] && !clusterDb[node].externalConnections, !graph.parent(node), graph.node(node), graph.children(\"D\"), \" Depth \", depth);\n    if (!clusterDb[node]) {\n      log.debug(\"Not a cluster\", node, depth);\n    } else if (!clusterDb[node].externalConnections &&\n    // !graph.parent(node) &&\n    graph.children(node) && graph.children(node).length > 0) {\n      log.warn(\"Cluster without external connections, without a parent and with children\", node, depth);\n      const graphSettings = graph.graph();\n      let dir = graphSettings.rankdir === \"TB\" ? \"LR\" : \"TB\";\n      if (clusterDb[node] && clusterDb[node].clusterData && clusterDb[node].clusterData.dir) {\n        dir = clusterDb[node].clusterData.dir;\n        log.warn(\"Fixing dir\", clusterDb[node].clusterData.dir, dir);\n      }\n      const clusterGraph = new graphlib.Graph({\n        multigraph: true,\n        compound: true\n      }).setGraph({\n        rankdir: dir,\n        // Todo: set proper spacing\n        nodesep: 50,\n        ranksep: 50,\n        marginx: 8,\n        marginy: 8\n      }).setDefaultEdgeLabel(function () {\n        return {};\n      });\n      log.warn(\"Old graph before copy\", graphlibJson.write(graph));\n      copy(node, graph, clusterGraph, node);\n      graph.setNode(node, {\n        clusterNode: true,\n        id: node,\n        clusterData: clusterDb[node].clusterData,\n        labelText: clusterDb[node].labelText,\n        graph: clusterGraph\n      });\n      log.warn(\"New graph after copy node: (\", node, \")\", graphlibJson.write(clusterGraph));\n      log.debug(\"Old graph after copy\", graphlibJson.write(graph));\n    } else {\n      log.warn(\"Cluster ** \", node, \" **not meeting the criteria !externalConnections:\", !clusterDb[node].externalConnections, \" no parent: \", !graph.parent(node), \" children \", graph.children(node) && graph.children(node).length > 0, graph.children(\"D\"), depth);\n      log.debug(clusterDb);\n    }\n  }\n  nodes = graph.nodes();\n  log.warn(\"New list of nodes\", nodes);\n  for (const node of nodes) {\n    const data = graph.node(node);\n    log.warn(\" Now next level\", node, data);\n    if (data.clusterNode) {\n      extractor(data.graph, depth + 1);\n    }\n  }\n};\nconst sorter = (graph, nodes) => {\n  if (nodes.length === 0) {\n    return [];\n  }\n  let result = Object.assign(nodes);\n  nodes.forEach(node => {\n    const children = graph.children(node);\n    const sorted = sorter(graph, children);\n    result = [...result, ...sorted];\n  });\n  return result;\n};\nconst sortNodesByHierarchy = graph => sorter(graph, graph.children());\nconst rect = (parent, node) => {\n  log.info(\"Creating subgraph rect for \", node.id, node);\n  const siteConfig = getConfig();\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"cluster\" + (node.class ? \" \" + node.class : \"\")).attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const useHtmlLabels = evaluate(siteConfig.flowchart.htmlLabels);\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"cluster-label\");\n  const text = node.labelType === \"markdown\" ? createText(label, node.labelText, {\n    style: node.labelStyle,\n    useHtmlLabels\n  }) : label.node().appendChild(createLabel(node.labelText, node.labelStyle, void 0, true));\n  let bbox = text.getBBox();\n  if (evaluate(siteConfig.flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  const width = node.width <= bbox.width + padding ? bbox.width + padding : node.width;\n  if (node.width <= bbox.width + padding) {\n    node.diff = (bbox.width - node.width) / 2 - node.padding / 2;\n  } else {\n    node.diff = -node.padding / 2;\n  }\n  log.trace(\"Data \", node, JSON.stringify(node));\n  rect2.attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", node.x - width / 2).attr(\"y\", node.y - node.height / 2 - halfPadding).attr(\"width\", width).attr(\"height\", node.height + padding);\n  const {\n    subGraphTitleTopMargin\n  } = getSubGraphTitleMargins(siteConfig);\n  if (useHtmlLabels) {\n    label.attr(\"transform\",\n    // This puts the label on top of the box instead of inside it\n    `translate(${node.x - bbox.width / 2}, ${node.y - node.height / 2 + subGraphTitleTopMargin})`);\n  } else {\n    label.attr(\"transform\",\n    // This puts the label on top of the box instead of inside it\n    `translate(${node.x}, ${node.y - node.height / 2 + subGraphTitleTopMargin})`);\n  }\n  const rectBox = rect2.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.intersect = function (point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n};\nconst noteGroup = (parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"note-cluster\").attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  rect2.attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", node.x - node.width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2 - halfPadding).attr(\"width\", node.width + padding).attr(\"height\", node.height + padding).attr(\"fill\", \"none\");\n  const rectBox = rect2.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.intersect = function (point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n};\nconst roundedWithTitle = (parent, node) => {\n  const siteConfig = getConfig();\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", node.classes).attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"cluster-label\");\n  const innerRect = shapeSvg.append(\"rect\");\n  const text = label.node().appendChild(createLabel(node.labelText, node.labelStyle, void 0, true));\n  let bbox = text.getBBox();\n  if (evaluate(siteConfig.flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  bbox = text.getBBox();\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  const width = node.width <= bbox.width + node.padding ? bbox.width + node.padding : node.width;\n  if (node.width <= bbox.width + node.padding) {\n    node.diff = (bbox.width + node.padding * 0 - node.width) / 2;\n  } else {\n    node.diff = -node.padding / 2;\n  }\n  rect2.attr(\"class\", \"outer\").attr(\"x\", node.x - width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2 - halfPadding).attr(\"width\", width + padding).attr(\"height\", node.height + padding);\n  innerRect.attr(\"class\", \"inner\").attr(\"x\", node.x - width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2 - halfPadding + bbox.height - 1).attr(\"width\", width + padding).attr(\"height\", node.height + padding - bbox.height - 3);\n  const {\n    subGraphTitleTopMargin\n  } = getSubGraphTitleMargins(siteConfig);\n  label.attr(\"transform\", `translate(${node.x - bbox.width / 2}, ${node.y - node.height / 2 - node.padding / 3 + (evaluate(siteConfig.flowchart.htmlLabels) ? 5 : 3) + subGraphTitleTopMargin})`);\n  const rectBox = rect2.node().getBBox();\n  node.height = rectBox.height;\n  node.intersect = function (point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n};\nconst divider = (parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", node.classes).attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  rect2.attr(\"class\", \"divider\").attr(\"x\", node.x - node.width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2).attr(\"width\", node.width + padding).attr(\"height\", node.height + padding);\n  const rectBox = rect2.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.diff = -node.padding / 2;\n  node.intersect = function (point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n};\nconst shapes = {\n  rect,\n  roundedWithTitle,\n  noteGroup,\n  divider\n};\nlet clusterElems = {};\nconst insertCluster = (elem, node) => {\n  log.trace(\"Inserting cluster\");\n  const shape = node.shape || \"rect\";\n  clusterElems[node.id] = shapes[shape](elem, node);\n};\nconst clear = () => {\n  clusterElems = {};\n};\nconst recursiveRender = async (_elem, graph, diagramType, id, parentCluster, siteConfig) => {\n  log.info(\"Graph in recursive render: XXX\", graphlibJson.write(graph), parentCluster);\n  const dir = graph.graph().rankdir;\n  log.trace(\"Dir in recursive render - dir:\", dir);\n  const elem = _elem.insert(\"g\").attr(\"class\", \"root\");\n  if (!graph.nodes()) {\n    log.info(\"No nodes found for\", graph);\n  } else {\n    log.info(\"Recursive render XXX\", graph.nodes());\n  }\n  if (graph.edges().length > 0) {\n    log.trace(\"Recursive edges\", graph.edge(graph.edges()[0]));\n  }\n  const clusters = elem.insert(\"g\").attr(\"class\", \"clusters\");\n  const edgePaths = elem.insert(\"g\").attr(\"class\", \"edgePaths\");\n  const edgeLabels = elem.insert(\"g\").attr(\"class\", \"edgeLabels\");\n  const nodes = elem.insert(\"g\").attr(\"class\", \"nodes\");\n  await Promise.all(graph.nodes().map(async function (v) {\n    const node = graph.node(v);\n    if (parentCluster !== void 0) {\n      const data = JSON.parse(JSON.stringify(parentCluster.clusterData));\n      log.info(\"Setting data for cluster XXX (\", v, \") \", data, parentCluster);\n      graph.setNode(parentCluster.id, data);\n      if (!graph.parent(v)) {\n        log.trace(\"Setting parent\", v, parentCluster.id);\n        graph.setParent(v, parentCluster.id, data);\n      }\n    }\n    log.info(\"(Insert) Node XXX\" + v + \": \" + JSON.stringify(graph.node(v)));\n    if (node && node.clusterNode) {\n      log.info(\"Cluster identified\", v, node.width, graph.node(v));\n      const o = await recursiveRender(nodes, node.graph, diagramType, id, graph.node(v), siteConfig);\n      const newEl = o.elem;\n      updateNodeBounds(node, newEl);\n      node.diff = o.diff || 0;\n      log.info(\"Node bounds (abc123)\", v, node, node.width, node.x, node.y);\n      setNodeElem(newEl, node);\n      log.warn(\"Recursive render complete \", newEl, node);\n    } else {\n      if (graph.children(v).length > 0) {\n        log.info(\"Cluster - the non recursive path XXX\", v, node.id, node, graph);\n        log.info(findNonClusterChild(node.id, graph));\n        clusterDb[node.id] = {\n          id: findNonClusterChild(node.id, graph),\n          node\n        };\n      } else {\n        log.info(\"Node - the non recursive path\", v, node.id, node);\n        await insertNode(nodes, graph.node(v), dir);\n      }\n    }\n  }));\n  graph.edges().forEach(function (e) {\n    const edge = graph.edge(e.v, e.w, e.name);\n    log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n    log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \", e, \" \", JSON.stringify(graph.edge(e)));\n    log.info(\"Fix\", clusterDb, \"ids:\", e.v, e.w, \"Translating: \", clusterDb[e.v], clusterDb[e.w]);\n    insertEdgeLabel(edgeLabels, edge);\n  });\n  graph.edges().forEach(function (e) {\n    log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n  });\n  log.info(\"#############################################\");\n  log.info(\"###                Layout                 ###\");\n  log.info(\"#############################################\");\n  log.info(graph);\n  layout(graph);\n  log.info(\"Graph after layout:\", graphlibJson.write(graph));\n  let diff = 0;\n  const {\n    subGraphTitleTotalMargin\n  } = getSubGraphTitleMargins(siteConfig);\n  sortNodesByHierarchy(graph).forEach(function (v) {\n    const node = graph.node(v);\n    log.info(\"Position \" + v + \": \" + JSON.stringify(graph.node(v)));\n    log.info(\"Position \" + v + \": (\" + node.x, \",\" + node.y, \") width: \", node.width, \" height: \", node.height);\n    if (node && node.clusterNode) {\n      node.y += subGraphTitleTotalMargin;\n      positionNode(node);\n    } else {\n      if (graph.children(v).length > 0) {\n        node.height += subGraphTitleTotalMargin;\n        insertCluster(clusters, node);\n        clusterDb[node.id].node = node;\n      } else {\n        node.y += subGraphTitleTotalMargin / 2;\n        positionNode(node);\n      }\n    }\n  });\n  graph.edges().forEach(function (e) {\n    const edge = graph.edge(e);\n    log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(edge), edge);\n    edge.points.forEach(point => point.y += subGraphTitleTotalMargin / 2);\n    const paths = insertEdge(edgePaths, e, edge, clusterDb, diagramType, graph, id);\n    positionEdgeLabel(edge, paths);\n  });\n  graph.nodes().forEach(function (v) {\n    const n = graph.node(v);\n    log.info(v, n.type, n.diff);\n    if (n.type === \"group\") {\n      diff = n.diff;\n    }\n  });\n  return {\n    elem,\n    diff\n  };\n};\nconst render = async (elem, graph, markers, diagramType, id) => {\n  insertMarkers(elem, markers, diagramType, id);\n  clear$2();\n  clear$3();\n  clear();\n  clear$1();\n  log.warn(\"Graph at first:\", JSON.stringify(graphlibJson.write(graph)));\n  adjustClustersAndEdges(graph);\n  log.warn(\"Graph after:\", JSON.stringify(graphlibJson.write(graph)));\n  const siteConfig = getConfig();\n  await recursiveRender(elem, graph, diagramType, id, void 0, siteConfig);\n};\nexport { render as r };","map":{"version":3,"names":["layout","graphlibJson","c","createLabel","g","getSubGraphTitleMargins","i","intersectRect","a","insertMarkers","b","clear$2","d","clear$3","u","updateNodeBounds","s","setNodeElem","e","insertNode","f","insertEdgeLabel","p","positionNode","h","insertEdge","j","positionEdgeLabel","l","log","getConfig","m","evaluate","graphlib","createText","select","clusterDb","descendants","parents","clear$1","isDescendant","id","ancestorId","trace","includes","edgeInCluster","edge","clusterId","info","v","w","debug","copy","graph","newGraph","rootId","warn","node","nodes","children","push","forEach","length","data","setNode","parent","setParent","edges","data2","name","setEdge","error","removeNode","extractDescendants","res","child","findNonClusterChild","_id","getAnchorId","externalConnections","adjustClustersAndEdges","depth","clusterData","d1","d2","Object","keys","nonClusterChild","JSON","stringify","removeEdge","specialId","domId","labelStyle","labelText","label","padding","shape","style","edge1","structuredClone","edge2","arrowTypeEnd","fromCluster","toCluster","write","extractor","hasChildren","graphSettings","dir","rankdir","clusterGraph","Graph","multigraph","compound","setGraph","nodesep","ranksep","marginx","marginy","setDefaultEdgeLabel","clusterNode","sorter","result","assign","sorted","sortNodesByHierarchy","rect","siteConfig","shapeSvg","insert","attr","class","rect2","useHtmlLabels","flowchart","htmlLabels","text","labelType","appendChild","bbox","getBBox","div","dv","getBoundingClientRect","width","height","halfPadding","diff","rx","ry","x","y","subGraphTitleTopMargin","rectBox","intersect","point","noteGroup","roundedWithTitle","classes","innerRect","append","divider","shapes","clusterElems","insertCluster","elem","clear","recursiveRender","_elem","diagramType","parentCluster","clusters","edgePaths","edgeLabels","Promise","all","map","parse","o","newEl","subGraphTitleTotalMargin","points","paths","n","type","render","markers","r"],"sources":["/Users/anasshaik/Desktop/Projects/CareerPath.AI/frontend/node_modules/mermaid/dist/index-3862675e.js"],"sourcesContent":["import { layout } from \"dagre-d3-es/src/dagre/index.js\";\nimport * as graphlibJson from \"dagre-d3-es/src/graphlib/json.js\";\nimport { c as createLabel, g as getSubGraphTitleMargins, i as intersectRect, a as insertMarkers, b as clear$2, d as clear$3, u as updateNodeBounds, s as setNodeElem, e as insertNode, f as insertEdgeLabel, p as positionNode, h as insertEdge, j as positionEdgeLabel } from \"./edges-e0da2a9e.js\";\nimport { l as log, c as getConfig, m as evaluate } from \"./mermaid-b5860b54.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { a as createText } from \"./createText-2e5e7dd3.js\";\nimport { select } from \"d3\";\nlet clusterDb = {};\nlet descendants = {};\nlet parents = {};\nconst clear$1 = () => {\n  descendants = {};\n  parents = {};\n  clusterDb = {};\n};\nconst isDescendant = (id, ancestorId) => {\n  log.trace(\"In isDescendant\", ancestorId, \" \", id, \" = \", descendants[ancestorId].includes(id));\n  if (descendants[ancestorId].includes(id)) {\n    return true;\n  }\n  return false;\n};\nconst edgeInCluster = (edge, clusterId) => {\n  log.info(\"Descendants of \", clusterId, \" is \", descendants[clusterId]);\n  log.info(\"Edge is \", edge);\n  if (edge.v === clusterId) {\n    return false;\n  }\n  if (edge.w === clusterId) {\n    return false;\n  }\n  if (!descendants[clusterId]) {\n    log.debug(\"Tilt, \", clusterId, \",not in descendants\");\n    return false;\n  }\n  return descendants[clusterId].includes(edge.v) || isDescendant(edge.v, clusterId) || isDescendant(edge.w, clusterId) || descendants[clusterId].includes(edge.w);\n};\nconst copy = (clusterId, graph, newGraph, rootId) => {\n  log.warn(\n    \"Copying children of \",\n    clusterId,\n    \"root\",\n    rootId,\n    \"data\",\n    graph.node(clusterId),\n    rootId\n  );\n  const nodes = graph.children(clusterId) || [];\n  if (clusterId !== rootId) {\n    nodes.push(clusterId);\n  }\n  log.warn(\"Copying (nodes) clusterId\", clusterId, \"nodes\", nodes);\n  nodes.forEach((node) => {\n    if (graph.children(node).length > 0) {\n      copy(node, graph, newGraph, rootId);\n    } else {\n      const data = graph.node(node);\n      log.info(\"cp \", node, \" to \", rootId, \" with parent \", clusterId);\n      newGraph.setNode(node, data);\n      if (rootId !== graph.parent(node)) {\n        log.warn(\"Setting parent\", node, graph.parent(node));\n        newGraph.setParent(node, graph.parent(node));\n      }\n      if (clusterId !== rootId && node !== clusterId) {\n        log.debug(\"Setting parent\", node, clusterId);\n        newGraph.setParent(node, clusterId);\n      } else {\n        log.info(\"In copy \", clusterId, \"root\", rootId, \"data\", graph.node(clusterId), rootId);\n        log.debug(\n          \"Not Setting parent for node=\",\n          node,\n          \"cluster!==rootId\",\n          clusterId !== rootId,\n          \"node!==clusterId\",\n          node !== clusterId\n        );\n      }\n      const edges = graph.edges(node);\n      log.debug(\"Copying Edges\", edges);\n      edges.forEach((edge) => {\n        log.info(\"Edge\", edge);\n        const data2 = graph.edge(edge.v, edge.w, edge.name);\n        log.info(\"Edge data\", data2, rootId);\n        try {\n          if (edgeInCluster(edge, rootId)) {\n            log.info(\"Copying as \", edge.v, edge.w, data2, edge.name);\n            newGraph.setEdge(edge.v, edge.w, data2, edge.name);\n            log.info(\"newGraph edges \", newGraph.edges(), newGraph.edge(newGraph.edges()[0]));\n          } else {\n            log.info(\n              \"Skipping copy of edge \",\n              edge.v,\n              \"-->\",\n              edge.w,\n              \" rootId: \",\n              rootId,\n              \" clusterId:\",\n              clusterId\n            );\n          }\n        } catch (e) {\n          log.error(e);\n        }\n      });\n    }\n    log.debug(\"Removing node\", node);\n    graph.removeNode(node);\n  });\n};\nconst extractDescendants = (id, graph) => {\n  const children = graph.children(id);\n  let res = [...children];\n  for (const child of children) {\n    parents[child] = id;\n    res = [...res, ...extractDescendants(child, graph)];\n  }\n  return res;\n};\nconst findNonClusterChild = (id, graph) => {\n  log.trace(\"Searching\", id);\n  const children = graph.children(id);\n  log.trace(\"Searching children of id \", id, children);\n  if (children.length < 1) {\n    log.trace(\"This is a valid node\", id);\n    return id;\n  }\n  for (const child of children) {\n    const _id = findNonClusterChild(child, graph);\n    if (_id) {\n      log.trace(\"Found replacement for\", id, \" => \", _id);\n      return _id;\n    }\n  }\n};\nconst getAnchorId = (id) => {\n  if (!clusterDb[id]) {\n    return id;\n  }\n  if (!clusterDb[id].externalConnections) {\n    return id;\n  }\n  if (clusterDb[id]) {\n    return clusterDb[id].id;\n  }\n  return id;\n};\nconst adjustClustersAndEdges = (graph, depth) => {\n  if (!graph || depth > 10) {\n    log.debug(\"Opting out, no graph \");\n    return;\n  } else {\n    log.debug(\"Opting in, graph \");\n  }\n  graph.nodes().forEach(function(id) {\n    const children = graph.children(id);\n    if (children.length > 0) {\n      log.warn(\n        \"Cluster identified\",\n        id,\n        \" Replacement id in edges: \",\n        findNonClusterChild(id, graph)\n      );\n      descendants[id] = extractDescendants(id, graph);\n      clusterDb[id] = { id: findNonClusterChild(id, graph), clusterData: graph.node(id) };\n    }\n  });\n  graph.nodes().forEach(function(id) {\n    const children = graph.children(id);\n    const edges = graph.edges();\n    if (children.length > 0) {\n      log.debug(\"Cluster identified\", id, descendants);\n      edges.forEach((edge) => {\n        if (edge.v !== id && edge.w !== id) {\n          const d1 = isDescendant(edge.v, id);\n          const d2 = isDescendant(edge.w, id);\n          if (d1 ^ d2) {\n            log.warn(\"Edge: \", edge, \" leaves cluster \", id);\n            log.warn(\"Descendants of XXX \", id, \": \", descendants[id]);\n            clusterDb[id].externalConnections = true;\n          }\n        }\n      });\n    } else {\n      log.debug(\"Not a cluster \", id, descendants);\n    }\n  });\n  for (let id of Object.keys(clusterDb)) {\n    const nonClusterChild = clusterDb[id].id;\n    const parent = graph.parent(nonClusterChild);\n    if (parent !== id && clusterDb[parent] && !clusterDb[parent].externalConnections) {\n      clusterDb[id].id = parent;\n    }\n  }\n  graph.edges().forEach(function(e) {\n    const edge = graph.edge(e);\n    log.warn(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n    log.warn(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(graph.edge(e)));\n    let v = e.v;\n    let w = e.w;\n    log.warn(\n      \"Fix XXX\",\n      clusterDb,\n      \"ids:\",\n      e.v,\n      e.w,\n      \"Translating: \",\n      clusterDb[e.v],\n      \" --- \",\n      clusterDb[e.w]\n    );\n    if (clusterDb[e.v] && clusterDb[e.w] && clusterDb[e.v] === clusterDb[e.w]) {\n      log.warn(\"Fixing and trixing link to self - removing XXX\", e.v, e.w, e.name);\n      log.warn(\"Fixing and trixing - removing XXX\", e.v, e.w, e.name);\n      v = getAnchorId(e.v);\n      w = getAnchorId(e.w);\n      graph.removeEdge(e.v, e.w, e.name);\n      const specialId = e.w + \"---\" + e.v;\n      graph.setNode(specialId, {\n        domId: specialId,\n        id: specialId,\n        labelStyle: \"\",\n        labelText: edge.label,\n        padding: 0,\n        shape: \"labelRect\",\n        style: \"\"\n      });\n      const edge1 = structuredClone(edge);\n      const edge2 = structuredClone(edge);\n      edge1.label = \"\";\n      edge1.arrowTypeEnd = \"none\";\n      edge2.label = \"\";\n      edge1.fromCluster = e.v;\n      edge2.toCluster = e.v;\n      graph.setEdge(v, specialId, edge1, e.name + \"-cyclic-special\");\n      graph.setEdge(specialId, w, edge2, e.name + \"-cyclic-special\");\n    } else if (clusterDb[e.v] || clusterDb[e.w]) {\n      log.warn(\"Fixing and trixing - removing XXX\", e.v, e.w, e.name);\n      v = getAnchorId(e.v);\n      w = getAnchorId(e.w);\n      graph.removeEdge(e.v, e.w, e.name);\n      if (v !== e.v) {\n        const parent = graph.parent(v);\n        clusterDb[parent].externalConnections = true;\n        edge.fromCluster = e.v;\n      }\n      if (w !== e.w) {\n        const parent = graph.parent(w);\n        clusterDb[parent].externalConnections = true;\n        edge.toCluster = e.w;\n      }\n      log.warn(\"Fix Replacing with XXX\", v, w, e.name);\n      graph.setEdge(v, w, edge, e.name);\n    }\n  });\n  log.warn(\"Adjusted Graph\", graphlibJson.write(graph));\n  extractor(graph, 0);\n  log.trace(clusterDb);\n};\nconst extractor = (graph, depth) => {\n  log.warn(\"extractor - \", depth, graphlibJson.write(graph), graph.children(\"D\"));\n  if (depth > 10) {\n    log.error(\"Bailing out\");\n    return;\n  }\n  let nodes = graph.nodes();\n  let hasChildren = false;\n  for (const node of nodes) {\n    const children = graph.children(node);\n    hasChildren = hasChildren || children.length > 0;\n  }\n  if (!hasChildren) {\n    log.debug(\"Done, no node has children\", graph.nodes());\n    return;\n  }\n  log.debug(\"Nodes = \", nodes, depth);\n  for (const node of nodes) {\n    log.debug(\n      \"Extracting node\",\n      node,\n      clusterDb,\n      clusterDb[node] && !clusterDb[node].externalConnections,\n      !graph.parent(node),\n      graph.node(node),\n      graph.children(\"D\"),\n      \" Depth \",\n      depth\n    );\n    if (!clusterDb[node]) {\n      log.debug(\"Not a cluster\", node, depth);\n    } else if (!clusterDb[node].externalConnections && // !graph.parent(node) &&\n    graph.children(node) && graph.children(node).length > 0) {\n      log.warn(\n        \"Cluster without external connections, without a parent and with children\",\n        node,\n        depth\n      );\n      const graphSettings = graph.graph();\n      let dir = graphSettings.rankdir === \"TB\" ? \"LR\" : \"TB\";\n      if (clusterDb[node] && clusterDb[node].clusterData && clusterDb[node].clusterData.dir) {\n        dir = clusterDb[node].clusterData.dir;\n        log.warn(\"Fixing dir\", clusterDb[node].clusterData.dir, dir);\n      }\n      const clusterGraph = new graphlib.Graph({\n        multigraph: true,\n        compound: true\n      }).setGraph({\n        rankdir: dir,\n        // Todo: set proper spacing\n        nodesep: 50,\n        ranksep: 50,\n        marginx: 8,\n        marginy: 8\n      }).setDefaultEdgeLabel(function() {\n        return {};\n      });\n      log.warn(\"Old graph before copy\", graphlibJson.write(graph));\n      copy(node, graph, clusterGraph, node);\n      graph.setNode(node, {\n        clusterNode: true,\n        id: node,\n        clusterData: clusterDb[node].clusterData,\n        labelText: clusterDb[node].labelText,\n        graph: clusterGraph\n      });\n      log.warn(\"New graph after copy node: (\", node, \")\", graphlibJson.write(clusterGraph));\n      log.debug(\"Old graph after copy\", graphlibJson.write(graph));\n    } else {\n      log.warn(\n        \"Cluster ** \",\n        node,\n        \" **not meeting the criteria !externalConnections:\",\n        !clusterDb[node].externalConnections,\n        \" no parent: \",\n        !graph.parent(node),\n        \" children \",\n        graph.children(node) && graph.children(node).length > 0,\n        graph.children(\"D\"),\n        depth\n      );\n      log.debug(clusterDb);\n    }\n  }\n  nodes = graph.nodes();\n  log.warn(\"New list of nodes\", nodes);\n  for (const node of nodes) {\n    const data = graph.node(node);\n    log.warn(\" Now next level\", node, data);\n    if (data.clusterNode) {\n      extractor(data.graph, depth + 1);\n    }\n  }\n};\nconst sorter = (graph, nodes) => {\n  if (nodes.length === 0) {\n    return [];\n  }\n  let result = Object.assign(nodes);\n  nodes.forEach((node) => {\n    const children = graph.children(node);\n    const sorted = sorter(graph, children);\n    result = [...result, ...sorted];\n  });\n  return result;\n};\nconst sortNodesByHierarchy = (graph) => sorter(graph, graph.children());\nconst rect = (parent, node) => {\n  log.info(\"Creating subgraph rect for \", node.id, node);\n  const siteConfig = getConfig();\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"cluster\" + (node.class ? \" \" + node.class : \"\")).attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const useHtmlLabels = evaluate(siteConfig.flowchart.htmlLabels);\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"cluster-label\");\n  const text = node.labelType === \"markdown\" ? createText(label, node.labelText, { style: node.labelStyle, useHtmlLabels }) : label.node().appendChild(createLabel(node.labelText, node.labelStyle, void 0, true));\n  let bbox = text.getBBox();\n  if (evaluate(siteConfig.flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  const width = node.width <= bbox.width + padding ? bbox.width + padding : node.width;\n  if (node.width <= bbox.width + padding) {\n    node.diff = (bbox.width - node.width) / 2 - node.padding / 2;\n  } else {\n    node.diff = -node.padding / 2;\n  }\n  log.trace(\"Data \", node, JSON.stringify(node));\n  rect2.attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", node.x - width / 2).attr(\"y\", node.y - node.height / 2 - halfPadding).attr(\"width\", width).attr(\"height\", node.height + padding);\n  const { subGraphTitleTopMargin } = getSubGraphTitleMargins(siteConfig);\n  if (useHtmlLabels) {\n    label.attr(\n      \"transform\",\n      // This puts the label on top of the box instead of inside it\n      `translate(${node.x - bbox.width / 2}, ${node.y - node.height / 2 + subGraphTitleTopMargin})`\n    );\n  } else {\n    label.attr(\n      \"transform\",\n      // This puts the label on top of the box instead of inside it\n      `translate(${node.x}, ${node.y - node.height / 2 + subGraphTitleTopMargin})`\n    );\n  }\n  const rectBox = rect2.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n};\nconst noteGroup = (parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"note-cluster\").attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  rect2.attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", node.x - node.width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2 - halfPadding).attr(\"width\", node.width + padding).attr(\"height\", node.height + padding).attr(\"fill\", \"none\");\n  const rectBox = rect2.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n};\nconst roundedWithTitle = (parent, node) => {\n  const siteConfig = getConfig();\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", node.classes).attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"cluster-label\");\n  const innerRect = shapeSvg.append(\"rect\");\n  const text = label.node().appendChild(createLabel(node.labelText, node.labelStyle, void 0, true));\n  let bbox = text.getBBox();\n  if (evaluate(siteConfig.flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  bbox = text.getBBox();\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  const width = node.width <= bbox.width + node.padding ? bbox.width + node.padding : node.width;\n  if (node.width <= bbox.width + node.padding) {\n    node.diff = (bbox.width + node.padding * 0 - node.width) / 2;\n  } else {\n    node.diff = -node.padding / 2;\n  }\n  rect2.attr(\"class\", \"outer\").attr(\"x\", node.x - width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2 - halfPadding).attr(\"width\", width + padding).attr(\"height\", node.height + padding);\n  innerRect.attr(\"class\", \"inner\").attr(\"x\", node.x - width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2 - halfPadding + bbox.height - 1).attr(\"width\", width + padding).attr(\"height\", node.height + padding - bbox.height - 3);\n  const { subGraphTitleTopMargin } = getSubGraphTitleMargins(siteConfig);\n  label.attr(\n    \"transform\",\n    `translate(${node.x - bbox.width / 2}, ${node.y - node.height / 2 - node.padding / 3 + (evaluate(siteConfig.flowchart.htmlLabels) ? 5 : 3) + subGraphTitleTopMargin})`\n  );\n  const rectBox = rect2.node().getBBox();\n  node.height = rectBox.height;\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n};\nconst divider = (parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", node.classes).attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  rect2.attr(\"class\", \"divider\").attr(\"x\", node.x - node.width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2).attr(\"width\", node.width + padding).attr(\"height\", node.height + padding);\n  const rectBox = rect2.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.diff = -node.padding / 2;\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n};\nconst shapes = { rect, roundedWithTitle, noteGroup, divider };\nlet clusterElems = {};\nconst insertCluster = (elem, node) => {\n  log.trace(\"Inserting cluster\");\n  const shape = node.shape || \"rect\";\n  clusterElems[node.id] = shapes[shape](elem, node);\n};\nconst clear = () => {\n  clusterElems = {};\n};\nconst recursiveRender = async (_elem, graph, diagramType, id, parentCluster, siteConfig) => {\n  log.info(\"Graph in recursive render: XXX\", graphlibJson.write(graph), parentCluster);\n  const dir = graph.graph().rankdir;\n  log.trace(\"Dir in recursive render - dir:\", dir);\n  const elem = _elem.insert(\"g\").attr(\"class\", \"root\");\n  if (!graph.nodes()) {\n    log.info(\"No nodes found for\", graph);\n  } else {\n    log.info(\"Recursive render XXX\", graph.nodes());\n  }\n  if (graph.edges().length > 0) {\n    log.trace(\"Recursive edges\", graph.edge(graph.edges()[0]));\n  }\n  const clusters = elem.insert(\"g\").attr(\"class\", \"clusters\");\n  const edgePaths = elem.insert(\"g\").attr(\"class\", \"edgePaths\");\n  const edgeLabels = elem.insert(\"g\").attr(\"class\", \"edgeLabels\");\n  const nodes = elem.insert(\"g\").attr(\"class\", \"nodes\");\n  await Promise.all(\n    graph.nodes().map(async function(v) {\n      const node = graph.node(v);\n      if (parentCluster !== void 0) {\n        const data = JSON.parse(JSON.stringify(parentCluster.clusterData));\n        log.info(\"Setting data for cluster XXX (\", v, \") \", data, parentCluster);\n        graph.setNode(parentCluster.id, data);\n        if (!graph.parent(v)) {\n          log.trace(\"Setting parent\", v, parentCluster.id);\n          graph.setParent(v, parentCluster.id, data);\n        }\n      }\n      log.info(\"(Insert) Node XXX\" + v + \": \" + JSON.stringify(graph.node(v)));\n      if (node && node.clusterNode) {\n        log.info(\"Cluster identified\", v, node.width, graph.node(v));\n        const o = await recursiveRender(\n          nodes,\n          node.graph,\n          diagramType,\n          id,\n          graph.node(v),\n          siteConfig\n        );\n        const newEl = o.elem;\n        updateNodeBounds(node, newEl);\n        node.diff = o.diff || 0;\n        log.info(\"Node bounds (abc123)\", v, node, node.width, node.x, node.y);\n        setNodeElem(newEl, node);\n        log.warn(\"Recursive render complete \", newEl, node);\n      } else {\n        if (graph.children(v).length > 0) {\n          log.info(\"Cluster - the non recursive path XXX\", v, node.id, node, graph);\n          log.info(findNonClusterChild(node.id, graph));\n          clusterDb[node.id] = { id: findNonClusterChild(node.id, graph), node };\n        } else {\n          log.info(\"Node - the non recursive path\", v, node.id, node);\n          await insertNode(nodes, graph.node(v), dir);\n        }\n      }\n    })\n  );\n  graph.edges().forEach(function(e) {\n    const edge = graph.edge(e.v, e.w, e.name);\n    log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n    log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \", e, \" \", JSON.stringify(graph.edge(e)));\n    log.info(\"Fix\", clusterDb, \"ids:\", e.v, e.w, \"Translating: \", clusterDb[e.v], clusterDb[e.w]);\n    insertEdgeLabel(edgeLabels, edge);\n  });\n  graph.edges().forEach(function(e) {\n    log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n  });\n  log.info(\"#############################################\");\n  log.info(\"###                Layout                 ###\");\n  log.info(\"#############################################\");\n  log.info(graph);\n  layout(graph);\n  log.info(\"Graph after layout:\", graphlibJson.write(graph));\n  let diff = 0;\n  const { subGraphTitleTotalMargin } = getSubGraphTitleMargins(siteConfig);\n  sortNodesByHierarchy(graph).forEach(function(v) {\n    const node = graph.node(v);\n    log.info(\"Position \" + v + \": \" + JSON.stringify(graph.node(v)));\n    log.info(\n      \"Position \" + v + \": (\" + node.x,\n      \",\" + node.y,\n      \") width: \",\n      node.width,\n      \" height: \",\n      node.height\n    );\n    if (node && node.clusterNode) {\n      node.y += subGraphTitleTotalMargin;\n      positionNode(node);\n    } else {\n      if (graph.children(v).length > 0) {\n        node.height += subGraphTitleTotalMargin;\n        insertCluster(clusters, node);\n        clusterDb[node.id].node = node;\n      } else {\n        node.y += subGraphTitleTotalMargin / 2;\n        positionNode(node);\n      }\n    }\n  });\n  graph.edges().forEach(function(e) {\n    const edge = graph.edge(e);\n    log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(edge), edge);\n    edge.points.forEach((point) => point.y += subGraphTitleTotalMargin / 2);\n    const paths = insertEdge(edgePaths, e, edge, clusterDb, diagramType, graph, id);\n    positionEdgeLabel(edge, paths);\n  });\n  graph.nodes().forEach(function(v) {\n    const n = graph.node(v);\n    log.info(v, n.type, n.diff);\n    if (n.type === \"group\") {\n      diff = n.diff;\n    }\n  });\n  return { elem, diff };\n};\nconst render = async (elem, graph, markers, diagramType, id) => {\n  insertMarkers(elem, markers, diagramType, id);\n  clear$2();\n  clear$3();\n  clear();\n  clear$1();\n  log.warn(\"Graph at first:\", JSON.stringify(graphlibJson.write(graph)));\n  adjustClustersAndEdges(graph);\n  log.warn(\"Graph after:\", JSON.stringify(graphlibJson.write(graph)));\n  const siteConfig = getConfig();\n  await recursiveRender(elem, graph, diagramType, id, void 0, siteConfig);\n};\nexport {\n  render as r\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}