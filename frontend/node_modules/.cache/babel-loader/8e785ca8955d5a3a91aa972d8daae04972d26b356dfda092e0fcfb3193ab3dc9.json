{"ast":null,"code":"var _jsxFileName = \"/Users/anasshaik/Desktop/Projects/CareerPath.AI/frontend/src/components/CareerRoadmapFlow.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { ReactFlow, MiniMap, Controls, Background, useNodesState, useEdgesState, addEdge, Handle, Position, MarkerType } from 'reactflow';\nimport 'reactflow/dist/style.css';\n\n// Custom node types for different phases\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PhaseNode = ({\n  data,\n  selected\n}) => {\n  const isStartNode = data.type === 'start';\n  const isEndNode = data.type === 'end';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!isStartNode && /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: Position.Top,\n      className: \"!w-2 !h-2 !bg-gray-400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `px-4 py-3 shadow-lg rounded-lg border-2 transition-all duration-200 min-w-48 max-w-64 ${selected ? 'border-primary-500 shadow-primary-200' : 'border-gray-300 hover:border-primary-300'} ${isStartNode ? 'bg-green-50 border-green-300' : isEndNode ? 'bg-blue-50 border-blue-300' : 'bg-white'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg\",\n          children: data.emoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-semibold text-sm text-gray-800\",\n            children: data.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), data.duration && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-500\",\n            children: data.duration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), data.description && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 pt-2 border-t border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-600\",\n          children: data.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), data.skills && data.skills.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 pt-2 border-t border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-600\",\n          children: [data.skills.slice(0, 3).map((skill, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inline-block bg-gray-100 px-2 py-1 rounded mr-1 mb-1 text-xs\",\n            children: skill\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)), data.skills.length > 3 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-400 text-xs\",\n            children: [\"+\", data.skills.length - 3, \" more\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), !isEndNode && /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: Position.Bottom,\n      className: \"!w-2 !h-2 !bg-gray-400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n// Custom edge with progress indicator\n_c = PhaseNode;\nconst nodeTypes = {\n  phaseNode: PhaseNode\n};\nconst CareerRoadmapFlow = ({\n  learningPath,\n  className = ''\n}) => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const defaultEdgeOptions = {\n    animated: true,\n    style: {\n      strokeWidth: 2\n    },\n    markerEnd: {\n      type: MarkerType.ArrowClosed,\n      width: 20,\n      height: 20\n    }\n  };\n\n  // Convert learning path data to React Flow nodes and edges\n  useEffect(() => {\n    if (!learningPath || !learningPath.learning_phases) {\n      // Default roadmap when no data\n      const defaultNodes = [{\n        id: 'start',\n        type: 'phaseNode',\n        position: {\n          x: 50,\n          y: 50\n        },\n        data: {\n          label: 'Start Your Journey',\n          emoji: '🚀',\n          type: 'start'\n        }\n      }, {\n        id: 'end',\n        type: 'phaseNode',\n        position: {\n          x: 50,\n          y: 200\n        },\n        data: {\n          label: 'Achieve Your Goal',\n          emoji: '🎯',\n          type: 'end'\n        }\n      }];\n      const defaultEdges = [{\n        id: 'start-end',\n        source: 'start',\n        target: 'end',\n        animated: true,\n        style: {\n          stroke: '#3b82f6',\n          strokeWidth: 2\n        },\n        markerEnd: {\n          type: MarkerType.ArrowClosed,\n          width: 25,\n          height: 25,\n          color: '#3b82f6'\n        }\n      }];\n      setNodes(defaultNodes);\n      setEdges(defaultEdges);\n      return;\n    }\n\n    // Generate nodes from learning phases\n    const phaseNodes = [];\n    const phaseEdges = [];\n    const phases = learningPath.learning_phases;\n    console.log('🎨 REACT FLOW: Generating nodes from learning path:', {\n      phases_count: phases.length,\n      timeline: learningPath.timeline,\n      has_changes: !!learningPath.changes_made\n    });\n\n    // Start node\n    phaseNodes.push({\n      id: 'start',\n      type: 'phaseNode',\n      position: {\n        x: 50,\n        y: 50\n      },\n      data: {\n        label: 'Current Role',\n        emoji: '👨‍💻',\n        type: 'start'\n      }\n    });\n\n    // Phase nodes - with improved positioning\n    const nodeSpacing = 180; // Increased spacing for better readability\n    phases.forEach((phase, index) => {\n      phaseNodes.push({\n        id: `phase-${index}`,\n        type: 'phaseNode',\n        position: {\n          x: 50,\n          y: 150 + index * nodeSpacing\n        },\n        data: {\n          label: phase.phase || `Phase ${index + 1}`,\n          duration: phase.duration,\n          skills: phase.skills || [],\n          description: phase.description,\n          emoji: ['📚', '🎓', '🏆', '⭐', '🚀', '💡'][index % 6]\n        }\n      });\n\n      // Edge from previous node - Blue arrows show learning progression\n      const sourceId = index === 0 ? 'start' : `phase-${index - 1}`;\n      phaseEdges.push({\n        id: `edge-${index}`,\n        source: sourceId,\n        target: `phase-${index}`,\n        style: {\n          stroke: '#3b82f6'\n        },\n        markerEnd: {\n          color: '#3b82f6'\n        }\n      });\n    });\n\n    // End node\n    phaseNodes.push({\n      id: 'end',\n      type: 'phaseNode',\n      position: {\n        x: 50,\n        y: 150 + phases.length * nodeSpacing\n      },\n      data: {\n        label: 'Target Role',\n        emoji: '🎯',\n        type: 'end'\n      }\n    });\n\n    // Final edge - Green arrow shows goal achievement\n    phaseEdges.push({\n      id: `edge-final`,\n      source: phases.length > 0 ? `phase-${phases.length - 1}` : 'start',\n      target: 'end',\n      style: {\n        stroke: '#10b981',\n        strokeWidth: 3\n      },\n      markerEnd: {\n        width: 25,\n        height: 25,\n        color: '#10b981'\n      }\n    });\n\n    // Update with smooth transitions\n    setNodes(prevNodes => {\n      // If this is an update and we have previous nodes, try to preserve positions\n      if (prevNodes.length > 2) {\n        // More than just start/end\n        const nodeMap = new Map(prevNodes.map(node => [node.id, node]));\n        return phaseNodes.map(newNode => {\n          const existingNode = nodeMap.get(newNode.id);\n          if (existingNode) {\n            // Preserve position and any user interactions\n            return {\n              ...newNode,\n              position: existingNode.position\n            };\n          }\n          return newNode;\n        });\n      }\n      return phaseNodes;\n    });\n    setEdges(phaseEdges);\n\n    // Log the update for debugging\n    console.log('🎨 REACT FLOW: Updated with', phaseNodes.length, 'nodes and', phaseEdges.length, 'edges');\n  }, [learningPath]);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  const onNodeClick = useCallback((event, node) => {\n    setSelectedNode(node);\n  }, []);\n  if (!learningPath) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex items-center justify-center p-8 text-gray-500 ${className}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-4xl mb-2\",\n          children: \"\\uD83D\\uDDFA\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg font-medium\",\n          children: \"Interactive Career Roadmap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm\",\n          children: \"Start a conversation to generate your personalized path!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `w-full h-full ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      onNodeClick: onNodeClick,\n      nodeTypes: nodeTypes,\n      defaultEdgeOptions: defaultEdgeOptions,\n      fitView: true,\n      fitViewOptions: {\n        padding: 0.2\n      },\n      attributionPosition: \"bottom-left\",\n      children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {\n        nodeStrokeColor: n => n.type === 'input' ? '#10b981' : '#3b82f6',\n        nodeColor: n => n.data.type === 'start' ? '#dcfce7' : n.data.type === 'end' ? '#dbeafe' : '#f9fafb',\n        nodeBorderRadius: 8,\n        className: \"!bg-gray-50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        variant: \"dots\",\n        gap: 12,\n        size: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 right-4 w-64 bg-white rounded-lg shadow-lg border p-4 z-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-start mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold text-gray-800\",\n          children: selectedNode.data.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedNode(null),\n          className: \"text-gray-400 hover:text-gray-600\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this), selectedNode.data.duration && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Duration:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 15\n        }, this), \" \", selectedNode.data.duration]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }, this), selectedNode.data.skills && selectedNode.data.skills.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm font-medium text-gray-700 mb-2\",\n          children: \"Skills to develop:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-1\",\n          children: selectedNode.data.skills.map((skill, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inline-block bg-primary-100 text-primary-800 px-2 py-1 rounded text-xs mr-1\",\n            children: skill\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n};\n_s(CareerRoadmapFlow, \"UFIIiIZTel7Vgnd4zrLdJ9SGkG0=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c2 = CareerRoadmapFlow;\nexport default CareerRoadmapFlow;\nvar _c, _c2;\n$RefreshReg$(_c, \"PhaseNode\");\n$RefreshReg$(_c2, \"CareerRoadmapFlow\");","map":{"version":3,"names":["React","useCallback","useState","useEffect","ReactFlow","MiniMap","Controls","Background","useNodesState","useEdgesState","addEdge","Handle","Position","MarkerType","jsxDEV","_jsxDEV","Fragment","_Fragment","PhaseNode","data","selected","isStartNode","type","isEndNode","children","position","Top","className","fileName","_jsxFileName","lineNumber","columnNumber","emoji","label","duration","description","skills","length","slice","map","skill","idx","Bottom","_c","nodeTypes","phaseNode","CareerRoadmapFlow","learningPath","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","selectedNode","setSelectedNode","defaultEdgeOptions","animated","style","strokeWidth","markerEnd","ArrowClosed","width","height","learning_phases","defaultNodes","id","x","y","defaultEdges","source","target","stroke","color","phaseNodes","phaseEdges","phases","console","log","phases_count","timeline","has_changes","changes_made","push","nodeSpacing","forEach","phase","index","sourceId","prevNodes","nodeMap","Map","node","newNode","existingNode","get","onConnect","params","eds","onNodeClick","event","fitView","fitViewOptions","padding","attributionPosition","nodeStrokeColor","n","nodeColor","nodeBorderRadius","variant","gap","size","onClick","_c2","$RefreshReg$"],"sources":["/Users/anasshaik/Desktop/Projects/CareerPath.AI/frontend/src/components/CareerRoadmapFlow.js"],"sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\nimport {\n  ReactFlow,\n  MiniMap,\n  Controls,\n  Background,\n  useNodesState,\n  useEdgesState,\n  addEdge,\n  Handle,\n  Position,\n  MarkerType,\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\n\n// Custom node types for different phases\nconst PhaseNode = ({ data, selected }) => {\n  const isStartNode = data.type === 'start';\n  const isEndNode = data.type === 'end';\n\n  return (\n    <>\n      {/* Target handle (top) - not on start node */}\n      {!isStartNode && (\n        <Handle\n          type=\"target\"\n          position={Position.Top}\n          className=\"!w-2 !h-2 !bg-gray-400\"\n        />\n      )}\n\n      {/* Node content */}\n      <div className={`px-4 py-3 shadow-lg rounded-lg border-2 transition-all duration-200 min-w-48 max-w-64 ${\n        selected \n          ? 'border-primary-500 shadow-primary-200' \n          : 'border-gray-300 hover:border-primary-300'\n      } ${isStartNode ? 'bg-green-50 border-green-300' : \n           isEndNode ? 'bg-blue-50 border-blue-300' : \n           'bg-white'}`}>\n      \n        <div className=\"flex items-center space-x-2\">\n          <div className=\"text-lg\">{data.emoji}</div>\n          <div className=\"flex-1\">\n            <div className=\"font-semibold text-sm text-gray-800\">{data.label}</div>\n            {data.duration && (\n              <div className=\"text-xs text-gray-500\">{data.duration}</div>\n            )}\n          </div>\n        </div>\n        \n        {data.description && (\n          <div className=\"mt-2 pt-2 border-t border-gray-200\">\n            <div className=\"text-xs text-gray-600\">{data.description}</div>\n          </div>\n        )}\n        \n        {data.skills && data.skills.length > 0 && (\n          <div className=\"mt-2 pt-2 border-t border-gray-200\">\n            <div className=\"text-xs text-gray-600\">\n              {data.skills.slice(0, 3).map((skill, idx) => (\n                <span key={idx} className=\"inline-block bg-gray-100 px-2 py-1 rounded mr-1 mb-1 text-xs\">\n                  {skill}\n                </span>\n              ))}\n              {data.skills.length > 3 && (\n                <span className=\"text-gray-400 text-xs\">+{data.skills.length - 3} more</span>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Source handle (bottom) - not on end node */}\n      {!isEndNode && (\n        <Handle\n          type=\"source\"\n          position={Position.Bottom}\n          className=\"!w-2 !h-2 !bg-gray-400\"\n        />\n      )}\n    </>\n  );\n};\n\n// Custom edge with progress indicator\nconst nodeTypes = {\n  phaseNode: PhaseNode,\n};\n\nconst CareerRoadmapFlow = ({ learningPath, className = '' }) => {\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [selectedNode, setSelectedNode] = useState(null);\n\n  const defaultEdgeOptions = {\n    animated: true,\n    style: {\n      strokeWidth: 2,\n    },\n    markerEnd: {\n      type: MarkerType.ArrowClosed,\n      width: 20,\n      height: 20,\n    },\n  };\n\n  // Convert learning path data to React Flow nodes and edges\n  useEffect(() => {\n    if (!learningPath || !learningPath.learning_phases) {\n      // Default roadmap when no data\n      const defaultNodes = [\n        {\n          id: 'start',\n          type: 'phaseNode',\n          position: { x: 50, y: 50 },\n          data: { \n            label: 'Start Your Journey', \n            emoji: '🚀',\n            type: 'start'\n          },\n        },\n        {\n          id: 'end',\n          type: 'phaseNode', \n          position: { x: 50, y: 200 },\n          data: { \n            label: 'Achieve Your Goal', \n            emoji: '🎯',\n            type: 'end'\n          },\n        },\n      ];\n\n      const defaultEdges = [\n        {\n          id: 'start-end',\n          source: 'start',\n          target: 'end',\n          animated: true,\n          style: { stroke: '#3b82f6', strokeWidth: 2 },\n          markerEnd: {\n            type: MarkerType.ArrowClosed,\n            width: 25,\n            height: 25,\n            color: '#3b82f6',\n          },\n        },\n      ];\n\n      setNodes(defaultNodes);\n      setEdges(defaultEdges);\n      return;\n    }\n\n    // Generate nodes from learning phases\n    const phaseNodes = [];\n    const phaseEdges = [];\n    const phases = learningPath.learning_phases;\n    \n    console.log('🎨 REACT FLOW: Generating nodes from learning path:', {\n      phases_count: phases.length,\n      timeline: learningPath.timeline,\n      has_changes: !!learningPath.changes_made\n    });\n    \n    // Start node\n    phaseNodes.push({\n      id: 'start',\n      type: 'phaseNode',\n      position: { x: 50, y: 50 },\n      data: { \n        label: 'Current Role', \n        emoji: '👨‍💻',\n        type: 'start'\n      },\n    });\n\n    // Phase nodes - with improved positioning\n    const nodeSpacing = 180; // Increased spacing for better readability\n    phases.forEach((phase, index) => {\n      phaseNodes.push({\n        id: `phase-${index}`,\n        type: 'phaseNode',\n        position: { x: 50, y: 150 + (index * nodeSpacing) },\n        data: {\n          label: phase.phase || `Phase ${index + 1}`,\n          duration: phase.duration,\n          skills: phase.skills || [],\n          description: phase.description,\n          emoji: ['📚', '🎓', '🏆', '⭐', '🚀', '💡'][index % 6],\n        },\n      });\n\n      // Edge from previous node - Blue arrows show learning progression\n      const sourceId = index === 0 ? 'start' : `phase-${index - 1}`;\n      phaseEdges.push({\n        id: `edge-${index}`,\n        source: sourceId,\n        target: `phase-${index}`,\n        style: { stroke: '#3b82f6' },\n        markerEnd: { color: '#3b82f6' },\n      });\n    });\n\n    // End node\n    phaseNodes.push({\n      id: 'end',\n      type: 'phaseNode',\n      position: { x: 50, y: 150 + (phases.length * nodeSpacing) },\n      data: { \n        label: 'Target Role', \n        emoji: '🎯',\n        type: 'end'\n      },\n    });\n\n    // Final edge - Green arrow shows goal achievement\n    phaseEdges.push({\n      id: `edge-final`,\n      source: phases.length > 0 ? `phase-${phases.length - 1}` : 'start',\n      target: 'end',\n      style: { stroke: '#10b981', strokeWidth: 3 },\n      markerEnd: {\n        width: 25,\n        height: 25,\n        color: '#10b981',\n      },\n    });\n\n    // Update with smooth transitions\n    setNodes((prevNodes) => {\n      // If this is an update and we have previous nodes, try to preserve positions\n      if (prevNodes.length > 2) { // More than just start/end\n        const nodeMap = new Map(prevNodes.map(node => [node.id, node]));\n        return phaseNodes.map(newNode => {\n          const existingNode = nodeMap.get(newNode.id);\n          if (existingNode) {\n            // Preserve position and any user interactions\n            return {\n              ...newNode,\n              position: existingNode.position,\n            };\n          }\n          return newNode;\n        });\n      }\n      return phaseNodes;\n    });\n    \n    setEdges(phaseEdges);\n    \n    // Log the update for debugging\n    console.log('🎨 REACT FLOW: Updated with', phaseNodes.length, 'nodes and', phaseEdges.length, 'edges');\n    \n  }, [learningPath]);\n\n  const onConnect = useCallback(\n    (params) => setEdges((eds) => addEdge(params, eds)),\n    [setEdges]\n  );\n\n  const onNodeClick = useCallback((event, node) => {\n    setSelectedNode(node);\n  }, []);\n\n  if (!learningPath) {\n    return (\n      <div className={`flex items-center justify-center p-8 text-gray-500 ${className}`}>\n        <div className=\"text-center\">\n          <div className=\"text-4xl mb-2\">🗺️</div>\n          <p className=\"text-lg font-medium\">Interactive Career Roadmap</p>\n          <p className=\"text-sm\">Start a conversation to generate your personalized path!</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`w-full h-full ${className}`}>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        onNodeClick={onNodeClick}\n        nodeTypes={nodeTypes}\n        defaultEdgeOptions={defaultEdgeOptions}\n        fitView\n        fitViewOptions={{ padding: 0.2 }}\n        attributionPosition=\"bottom-left\"\n      >\n        <Controls />\n        <MiniMap \n          nodeStrokeColor={(n) => n.type === 'input' ? '#10b981' : '#3b82f6'}\n          nodeColor={(n) => n.data.type === 'start' ? '#dcfce7' : \n                           n.data.type === 'end' ? '#dbeafe' : '#f9fafb'}\n          nodeBorderRadius={8}\n          className=\"!bg-gray-50\"\n        />\n        <Background variant=\"dots\" gap={12} size={1} />\n      </ReactFlow>\n\n      {/* Side panel for selected node details */}\n      {selectedNode && (\n        <div className=\"absolute top-4 right-4 w-64 bg-white rounded-lg shadow-lg border p-4 z-10\">\n          <div className=\"flex justify-between items-start mb-3\">\n            <h3 className=\"font-semibold text-gray-800\">{selectedNode.data.label}</h3>\n            <button \n              onClick={() => setSelectedNode(null)}\n              className=\"text-gray-400 hover:text-gray-600\"\n            >\n              ×\n            </button>\n          </div>\n          \n          {selectedNode.data.duration && (\n            <p className=\"text-sm text-gray-600 mb-2\">\n              <strong>Duration:</strong> {selectedNode.data.duration}\n            </p>\n          )}\n          \n          {selectedNode.data.skills && selectedNode.data.skills.length > 0 && (\n            <div>\n              <p className=\"text-sm font-medium text-gray-700 mb-2\">Skills to develop:</p>\n              <div className=\"space-y-1\">\n                {selectedNode.data.skills.map((skill, idx) => (\n                  <span key={idx} className=\"inline-block bg-primary-100 text-primary-800 px-2 py-1 rounded text-xs mr-1\">\n                    {skill}\n                  </span>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CareerRoadmapFlow; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}