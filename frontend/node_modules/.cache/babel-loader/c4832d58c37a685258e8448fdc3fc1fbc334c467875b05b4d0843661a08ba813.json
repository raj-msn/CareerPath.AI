{"ast":null,"code":"import { p as parser, f as flowDb } from \"./flowDb-956e92f1.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { select, curveLinear, selectAll } from \"d3\";\nimport { k as getStylesFromArray, m as evaluate, c as getConfig, r as renderKatex, e as common, l as log, n as interpolateToCurve, o as setupGraphViewbox } from \"./mermaid-b5860b54.js\";\nimport { render } from \"dagre-d3-es\";\nimport { applyStyle } from \"dagre-d3-es/src/dagre-js/util.js\";\nimport { addHtmlLabel } from \"dagre-d3-es/src/dagre-js/label/add-html-label.js\";\nimport { intersectPolygon } from \"dagre-d3-es/src/dagre-js/intersect/intersect-polygon.js\";\nimport { intersectRect } from \"dagre-d3-es/src/dagre-js/intersect/intersect-rect.js\";\nimport { f as flowRendererV2, a as flowStyles } from \"./styles-c10674c1.js\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nimport \"./index-3862675e.js\";\nimport \"dagre-d3-es/src/dagre/index.js\";\nimport \"dagre-d3-es/src/graphlib/json.js\";\nimport \"./edges-e0da2a9e.js\";\nimport \"./createText-2e5e7dd3.js\";\nimport \"mdast-util-from-markdown\";\nfunction question(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const s = (w + h) * 0.9;\n  const points = [{\n    x: s / 2,\n    y: 0\n  }, {\n    x: s,\n    y: -s / 2\n  }, {\n    x: s / 2,\n    y: -s\n  }, {\n    x: 0,\n    y: -s / 2\n  }];\n  const shapeSvg = insertPolygonShape(parent, s, s, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction hexagon(parent, bbox, node) {\n  const f = 4;\n  const h = bbox.height;\n  const m = h / f;\n  const w = bbox.width + 2 * m;\n  const points = [{\n    x: m,\n    y: 0\n  }, {\n    x: w - m,\n    y: 0\n  }, {\n    x: w,\n    y: -h / 2\n  }, {\n    x: w - m,\n    y: -h\n  }, {\n    x: m,\n    y: -h\n  }, {\n    x: 0,\n    y: -h / 2\n  }];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction rect_left_inv_arrow(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [{\n    x: -h / 2,\n    y: 0\n  }, {\n    x: w,\n    y: 0\n  }, {\n    x: w,\n    y: -h\n  }, {\n    x: -h / 2,\n    y: -h\n  }, {\n    x: 0,\n    y: -h / 2\n  }];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction lean_right(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [{\n    x: -2 * h / 6,\n    y: 0\n  }, {\n    x: w - h / 6,\n    y: 0\n  }, {\n    x: w + 2 * h / 6,\n    y: -h\n  }, {\n    x: h / 6,\n    y: -h\n  }];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction lean_left(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [{\n    x: 2 * h / 6,\n    y: 0\n  }, {\n    x: w + h / 6,\n    y: 0\n  }, {\n    x: w - 2 * h / 6,\n    y: -h\n  }, {\n    x: -h / 6,\n    y: -h\n  }];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction trapezoid(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [{\n    x: -2 * h / 6,\n    y: 0\n  }, {\n    x: w + 2 * h / 6,\n    y: 0\n  }, {\n    x: w - h / 6,\n    y: -h\n  }, {\n    x: h / 6,\n    y: -h\n  }];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction inv_trapezoid(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [{\n    x: h / 6,\n    y: 0\n  }, {\n    x: w - h / 6,\n    y: 0\n  }, {\n    x: w + 2 * h / 6,\n    y: -h\n  }, {\n    x: -2 * h / 6,\n    y: -h\n  }];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction rect_right_inv_arrow(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [{\n    x: 0,\n    y: 0\n  }, {\n    x: w + h / 2,\n    y: 0\n  }, {\n    x: w,\n    y: -h / 2\n  }, {\n    x: w + h / 2,\n    y: -h\n  }, {\n    x: 0,\n    y: -h\n  }];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction stadium(parent, bbox, node) {\n  const h = bbox.height;\n  const w = bbox.width + h / 4;\n  const shapeSvg = parent.insert(\"rect\", \":first-child\").attr(\"rx\", h / 2).attr(\"ry\", h / 2).attr(\"x\", -w / 2).attr(\"y\", -h / 2).attr(\"width\", w).attr(\"height\", h);\n  node.intersect = function (point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n}\nfunction subroutine(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [{\n    x: 0,\n    y: 0\n  }, {\n    x: w,\n    y: 0\n  }, {\n    x: w,\n    y: -h\n  }, {\n    x: 0,\n    y: -h\n  }, {\n    x: 0,\n    y: 0\n  }, {\n    x: -8,\n    y: 0\n  }, {\n    x: w + 8,\n    y: 0\n  }, {\n    x: w + 8,\n    y: -h\n  }, {\n    x: -8,\n    y: -h\n  }, {\n    x: -8,\n    y: 0\n  }];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction cylinder(parent, bbox, node) {\n  const w = bbox.width;\n  const rx = w / 2;\n  const ry = rx / (2.5 + w / 50);\n  const h = bbox.height + ry;\n  const shape = \"M 0,\" + ry + \" a \" + rx + \",\" + ry + \" 0,0,0 \" + w + \" 0 a \" + rx + \",\" + ry + \" 0,0,0 \" + -w + \" 0 l 0,\" + h + \" a \" + rx + \",\" + ry + \" 0,0,0 \" + w + \" 0 l 0,\" + -h;\n  const shapeSvg = parent.attr(\"label-offset-y\", ry).insert(\"path\", \":first-child\").attr(\"d\", shape).attr(\"transform\", \"translate(\" + -w / 2 + \",\" + -(h / 2 + ry) + \")\");\n  node.intersect = function (point) {\n    const pos = intersectRect(node, point);\n    const x = pos.x - node.x;\n    if (rx != 0 && (Math.abs(x) < node.width / 2 || Math.abs(x) == node.width / 2 && Math.abs(pos.y - node.y) > node.height / 2 - ry)) {\n      let y = ry * ry * (1 - x * x / (rx * rx));\n      if (y != 0) {\n        y = Math.sqrt(y);\n      }\n      y = ry - y;\n      if (point.y - node.y > 0) {\n        y = -y;\n      }\n      pos.y += y;\n    }\n    return pos;\n  };\n  return shapeSvg;\n}\nfunction addToRender(render2) {\n  render2.shapes().question = question;\n  render2.shapes().hexagon = hexagon;\n  render2.shapes().stadium = stadium;\n  render2.shapes().subroutine = subroutine;\n  render2.shapes().cylinder = cylinder;\n  render2.shapes().rect_left_inv_arrow = rect_left_inv_arrow;\n  render2.shapes().lean_right = lean_right;\n  render2.shapes().lean_left = lean_left;\n  render2.shapes().trapezoid = trapezoid;\n  render2.shapes().inv_trapezoid = inv_trapezoid;\n  render2.shapes().rect_right_inv_arrow = rect_right_inv_arrow;\n}\nfunction addToRenderV2(addShape) {\n  addShape({\n    question\n  });\n  addShape({\n    hexagon\n  });\n  addShape({\n    stadium\n  });\n  addShape({\n    subroutine\n  });\n  addShape({\n    cylinder\n  });\n  addShape({\n    rect_left_inv_arrow\n  });\n  addShape({\n    lean_right\n  });\n  addShape({\n    lean_left\n  });\n  addShape({\n    trapezoid\n  });\n  addShape({\n    inv_trapezoid\n  });\n  addShape({\n    rect_right_inv_arrow\n  });\n}\nfunction insertPolygonShape(parent, w, h, points) {\n  return parent.insert(\"polygon\", \":first-child\").attr(\"points\", points.map(function (d) {\n    return d.x + \",\" + d.y;\n  }).join(\" \")).attr(\"transform\", \"translate(\" + -w / 2 + \",\" + h / 2 + \")\");\n}\nconst flowChartShapes = {\n  addToRender,\n  addToRenderV2\n};\nconst conf = {};\nconst setConf = function (cnf) {\n  const keys = Object.keys(cnf);\n  for (const key of keys) {\n    conf[key] = cnf[key];\n  }\n};\nconst addVertices = async function (vert, g, svgId, root, _doc, diagObj) {\n  const svg = !root ? select(`[id=\"${svgId}\"]`) : root.select(`[id=\"${svgId}\"]`);\n  const doc = !_doc ? document : _doc;\n  const keys = Object.keys(vert);\n  for (const id of keys) {\n    const vertex = vert[id];\n    let classStr = \"default\";\n    if (vertex.classes.length > 0) {\n      classStr = vertex.classes.join(\" \");\n    }\n    const styles = getStylesFromArray(vertex.styles);\n    let vertexText = vertex.text !== void 0 ? vertex.text : vertex.id;\n    let vertexNode;\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      const node = {\n        label: await renderKatex(vertexText.replace(/fa[blrs]?:fa-[\\w-]+/g,\n        // cspell:disable-line\n        s => `<i class='${s.replace(\":\", \" \")}'></i>`), getConfig())\n      };\n      vertexNode = addHtmlLabel(svg, node).node();\n      vertexNode.parentNode.removeChild(vertexNode);\n    } else {\n      const svgLabel = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n      svgLabel.setAttribute(\"style\", styles.labelStyle.replace(\"color:\", \"fill:\"));\n      const rows = vertexText.split(common.lineBreakRegex);\n      for (const row of rows) {\n        const tspan = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\n        tspan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n        tspan.setAttribute(\"dy\", \"1em\");\n        tspan.setAttribute(\"x\", \"1\");\n        tspan.textContent = row;\n        svgLabel.appendChild(tspan);\n      }\n      vertexNode = svgLabel;\n    }\n    let radius = 0;\n    let _shape = \"\";\n    switch (vertex.type) {\n      case \"round\":\n        radius = 5;\n        _shape = \"rect\";\n        break;\n      case \"square\":\n        _shape = \"rect\";\n        break;\n      case \"diamond\":\n        _shape = \"question\";\n        break;\n      case \"hexagon\":\n        _shape = \"hexagon\";\n        break;\n      case \"odd\":\n        _shape = \"rect_left_inv_arrow\";\n        break;\n      case \"lean_right\":\n        _shape = \"lean_right\";\n        break;\n      case \"lean_left\":\n        _shape = \"lean_left\";\n        break;\n      case \"trapezoid\":\n        _shape = \"trapezoid\";\n        break;\n      case \"inv_trapezoid\":\n        _shape = \"inv_trapezoid\";\n        break;\n      case \"odd_right\":\n        _shape = \"rect_left_inv_arrow\";\n        break;\n      case \"circle\":\n        _shape = \"circle\";\n        break;\n      case \"ellipse\":\n        _shape = \"ellipse\";\n        break;\n      case \"stadium\":\n        _shape = \"stadium\";\n        break;\n      case \"subroutine\":\n        _shape = \"subroutine\";\n        break;\n      case \"cylinder\":\n        _shape = \"cylinder\";\n        break;\n      case \"group\":\n        _shape = \"rect\";\n        break;\n      default:\n        _shape = \"rect\";\n    }\n    log.warn(\"Adding node\", vertex.id, vertex.domId);\n    g.setNode(diagObj.db.lookUpDomId(vertex.id), {\n      labelType: \"svg\",\n      labelStyle: styles.labelStyle,\n      shape: _shape,\n      label: vertexNode,\n      rx: radius,\n      ry: radius,\n      class: classStr,\n      style: styles.style,\n      id: diagObj.db.lookUpDomId(vertex.id)\n    });\n  }\n};\nconst addEdges = async function (edges, g, diagObj) {\n  let cnt = 0;\n  let defaultStyle;\n  let defaultLabelStyle;\n  if (edges.defaultStyle !== void 0) {\n    const defaultStyles = getStylesFromArray(edges.defaultStyle);\n    defaultStyle = defaultStyles.style;\n    defaultLabelStyle = defaultStyles.labelStyle;\n  }\n  for (const edge of edges) {\n    cnt++;\n    const linkId = \"L-\" + edge.start + \"-\" + edge.end;\n    const linkNameStart = \"LS-\" + edge.start;\n    const linkNameEnd = \"LE-\" + edge.end;\n    const edgeData = {};\n    if (edge.type === \"arrow_open\") {\n      edgeData.arrowhead = \"none\";\n    } else {\n      edgeData.arrowhead = \"normal\";\n    }\n    let style = \"\";\n    let labelStyle = \"\";\n    if (edge.style !== void 0) {\n      const styles = getStylesFromArray(edge.style);\n      style = styles.style;\n      labelStyle = styles.labelStyle;\n    } else {\n      switch (edge.stroke) {\n        case \"normal\":\n          style = \"fill:none\";\n          if (defaultStyle !== void 0) {\n            style = defaultStyle;\n          }\n          if (defaultLabelStyle !== void 0) {\n            labelStyle = defaultLabelStyle;\n          }\n          break;\n        case \"dotted\":\n          style = \"fill:none;stroke-width:2px;stroke-dasharray:3;\";\n          break;\n        case \"thick\":\n          style = \" stroke-width: 3.5px;fill:none\";\n          break;\n      }\n    }\n    edgeData.style = style;\n    edgeData.labelStyle = labelStyle;\n    if (edge.interpolate !== void 0) {\n      edgeData.curve = interpolateToCurve(edge.interpolate, curveLinear);\n    } else if (edges.defaultInterpolate !== void 0) {\n      edgeData.curve = interpolateToCurve(edges.defaultInterpolate, curveLinear);\n    } else {\n      edgeData.curve = interpolateToCurve(conf.curve, curveLinear);\n    }\n    if (edge.text === void 0) {\n      if (edge.style !== void 0) {\n        edgeData.arrowheadStyle = \"fill: #333\";\n      }\n    } else {\n      edgeData.arrowheadStyle = \"fill: #333\";\n      edgeData.labelpos = \"c\";\n      if (evaluate(getConfig().flowchart.htmlLabels)) {\n        edgeData.labelType = \"html\";\n        edgeData.label = `<span id=\"L-${linkId}\" class=\"edgeLabel L-${linkNameStart}' L-${linkNameEnd}\" style=\"${edgeData.labelStyle}\">${await renderKatex(edge.text.replace(/fa[blrs]?:fa-[\\w-]+/g,\n        // cspell:disable-line\n        s => `<i class='${s.replace(\":\", \" \")}'></i>`), getConfig())}</span>`;\n      } else {\n        edgeData.labelType = \"text\";\n        edgeData.label = edge.text.replace(common.lineBreakRegex, \"\\n\");\n        if (edge.style === void 0) {\n          edgeData.style = edgeData.style || \"stroke: #333; stroke-width: 1.5px;fill:none\";\n        }\n        edgeData.labelStyle = edgeData.labelStyle.replace(\"color:\", \"fill:\");\n      }\n    }\n    edgeData.id = linkId;\n    edgeData.class = linkNameStart + \" \" + linkNameEnd;\n    edgeData.minlen = edge.length || 1;\n    g.setEdge(diagObj.db.lookUpDomId(edge.start), diagObj.db.lookUpDomId(edge.end), edgeData, cnt);\n  }\n};\nconst getClasses = function (text, diagObj) {\n  log.info(\"Extracting classes\");\n  return diagObj.db.getClasses();\n};\nconst draw = async function (text, id, _version, diagObj) {\n  log.info(\"Drawing flowchart\");\n  const {\n    securityLevel,\n    flowchart: conf2\n  } = getConfig();\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n  let dir = diagObj.db.getDirection();\n  if (dir === void 0) {\n    dir = \"TD\";\n  }\n  const nodeSpacing = conf2.nodeSpacing || 50;\n  const rankSpacing = conf2.rankSpacing || 50;\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true\n  }).setGraph({\n    rankdir: dir,\n    nodesep: nodeSpacing,\n    ranksep: rankSpacing,\n    marginx: 8,\n    marginy: 8\n  }).setDefaultEdgeLabel(function () {\n    return {};\n  });\n  let subG;\n  const subGraphs = diagObj.db.getSubGraphs();\n  for (let i2 = subGraphs.length - 1; i2 >= 0; i2--) {\n    subG = subGraphs[i2];\n    diagObj.db.addVertex(subG.id, subG.title, \"group\", void 0, subG.classes);\n  }\n  const vert = diagObj.db.getVertices();\n  log.warn(\"Get vertices\", vert);\n  const edges = diagObj.db.getEdges();\n  let i = 0;\n  for (i = subGraphs.length - 1; i >= 0; i--) {\n    subG = subGraphs[i];\n    selectAll(\"cluster\").append(\"text\");\n    for (let j = 0; j < subG.nodes.length; j++) {\n      log.warn(\"Setting subgraph\", subG.nodes[j], diagObj.db.lookUpDomId(subG.nodes[j]), diagObj.db.lookUpDomId(subG.id));\n      g.setParent(diagObj.db.lookUpDomId(subG.nodes[j]), diagObj.db.lookUpDomId(subG.id));\n    }\n  }\n  await addVertices(vert, g, id, root, doc, diagObj);\n  await addEdges(edges, g, diagObj);\n  const render$1 = new render();\n  flowChartShapes.addToRender(render$1);\n  render$1.arrows().none = function normal(parent, id2, edge, type) {\n    const marker = parent.append(\"marker\").attr(\"id\", id2).attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", 9).attr(\"refY\", 5).attr(\"markerUnits\", \"strokeWidth\").attr(\"markerWidth\", 8).attr(\"markerHeight\", 6).attr(\"orient\", \"auto\");\n    const path = marker.append(\"path\").attr(\"d\", \"M 0 0 L 0 0 L 0 0 z\");\n    applyStyle(path, edge[type + \"Style\"]);\n  };\n  render$1.arrows().normal = function normal(parent, id2) {\n    const marker = parent.append(\"marker\").attr(\"id\", id2).attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", 9).attr(\"refY\", 5).attr(\"markerUnits\", \"strokeWidth\").attr(\"markerWidth\", 8).attr(\"markerHeight\", 6).attr(\"orient\", \"auto\");\n    marker.append(\"path\").attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\").attr(\"class\", \"arrowheadPath\").style(\"stroke-width\", 1).style(\"stroke-dasharray\", \"1,0\");\n  };\n  const svg = root.select(`[id=\"${id}\"]`);\n  const element = root.select(\"#\" + id + \" g\");\n  render$1(element, g);\n  element.selectAll(\"g.node\").attr(\"title\", function () {\n    return diagObj.db.getTooltip(this.id);\n  });\n  diagObj.db.indexNodes(\"subGraph\" + i);\n  for (i = 0; i < subGraphs.length; i++) {\n    subG = subGraphs[i];\n    if (subG.title !== \"undefined\") {\n      const clusterRects = doc.querySelectorAll(\"#\" + id + ' [id=\"' + diagObj.db.lookUpDomId(subG.id) + '\"] rect');\n      const clusterEl = doc.querySelectorAll(\"#\" + id + ' [id=\"' + diagObj.db.lookUpDomId(subG.id) + '\"]');\n      const xPos = clusterRects[0].x.baseVal.value;\n      const yPos = clusterRects[0].y.baseVal.value;\n      const _width = clusterRects[0].width.baseVal.value;\n      const cluster = select(clusterEl[0]);\n      const te = cluster.select(\".label\");\n      te.attr(\"transform\", `translate(${xPos + _width / 2}, ${yPos + 14})`);\n      te.attr(\"id\", id + \"Text\");\n      for (let j = 0; j < subG.classes.length; j++) {\n        clusterEl[0].classList.add(subG.classes[j]);\n      }\n    }\n  }\n  if (!conf2.htmlLabels) {\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n    for (const label of labels) {\n      const dim = label.getBBox();\n      const rect = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n      rect.setAttribute(\"rx\", 0);\n      rect.setAttribute(\"ry\", 0);\n      rect.setAttribute(\"width\", dim.width);\n      rect.setAttribute(\"height\", dim.height);\n      label.insertBefore(rect, label.firstChild);\n    }\n  }\n  setupGraphViewbox(g, svg, conf2.diagramPadding, conf2.useMaxWidth);\n  const keys = Object.keys(vert);\n  keys.forEach(function (key) {\n    const vertex = vert[key];\n    if (vertex.link) {\n      const node = root.select(\"#\" + id + ' [id=\"' + diagObj.db.lookUpDomId(key) + '\"]');\n      if (node) {\n        const link = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"a\");\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"class\", vertex.classes.join(\" \"));\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"href\", vertex.link);\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"rel\", \"noopener\");\n        if (securityLevel === \"sandbox\") {\n          link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"target\", \"_top\");\n        } else if (vertex.linkTarget) {\n          link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"target\", vertex.linkTarget);\n        }\n        const linkNode = node.insert(function () {\n          return link;\n        }, \":first-child\");\n        const shape = node.select(\".label-container\");\n        if (shape) {\n          linkNode.append(function () {\n            return shape.node();\n          });\n        }\n        const label = node.select(\".label\");\n        if (label) {\n          linkNode.append(function () {\n            return label.node();\n          });\n        }\n      }\n    }\n  });\n};\nconst flowRenderer = {\n  setConf,\n  addVertices,\n  addEdges,\n  getClasses,\n  draw\n};\nconst diagram = {\n  parser,\n  db: flowDb,\n  renderer: flowRendererV2,\n  styles: flowStyles,\n  init: cnf => {\n    if (!cnf.flowchart) {\n      cnf.flowchart = {};\n    }\n    cnf.flowchart.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    flowRenderer.setConf(cnf.flowchart);\n    flowDb.clear();\n    flowDb.setGen(\"gen-1\");\n  }\n};\nexport { diagram };","map":{"version":3,"names":["p","parser","f","flowDb","graphlib","select","curveLinear","selectAll","k","getStylesFromArray","m","evaluate","c","getConfig","r","renderKatex","e","common","l","log","n","interpolateToCurve","o","setupGraphViewbox","render","applyStyle","addHtmlLabel","intersectPolygon","intersectRect","flowRendererV2","a","flowStyles","question","parent","bbox","node","w","width","h","height","s","points","x","y","shapeSvg","insertPolygonShape","intersect","point","hexagon","rect_left_inv_arrow","lean_right","lean_left","trapezoid","inv_trapezoid","rect_right_inv_arrow","stadium","insert","attr","subroutine","cylinder","rx","ry","shape","pos","Math","abs","sqrt","addToRender","render2","shapes","addToRenderV2","addShape","map","d","join","flowChartShapes","conf","setConf","cnf","keys","Object","key","addVertices","vert","g","svgId","root","_doc","diagObj","svg","doc","document","id","vertex","classStr","classes","length","styles","vertexText","text","vertexNode","flowchart","htmlLabels","label","replace","parentNode","removeChild","svgLabel","createElementNS","setAttribute","labelStyle","rows","split","lineBreakRegex","row","tspan","setAttributeNS","textContent","appendChild","radius","_shape","type","warn","domId","setNode","db","lookUpDomId","labelType","class","style","addEdges","edges","cnt","defaultStyle","defaultLabelStyle","defaultStyles","edge","linkId","start","end","linkNameStart","linkNameEnd","edgeData","arrowhead","stroke","interpolate","curve","defaultInterpolate","arrowheadStyle","labelpos","minlen","setEdge","getClasses","info","draw","_version","securityLevel","conf2","sandboxElement","nodes","contentDocument","body","dir","getDirection","nodeSpacing","rankSpacing","Graph","multigraph","compound","setGraph","rankdir","nodesep","ranksep","marginx","marginy","setDefaultEdgeLabel","subG","subGraphs","getSubGraphs","i2","addVertex","title","getVertices","getEdges","i","append","j","setParent","render$1","arrows","none","normal","id2","marker","path","element","getTooltip","indexNodes","clusterRects","querySelectorAll","clusterEl","xPos","baseVal","value","yPos","_width","cluster","te","classList","add","labels","dim","getBBox","rect","insertBefore","firstChild","diagramPadding","useMaxWidth","forEach","link","linkTarget","linkNode","flowRenderer","diagram","renderer","init","arrowMarkerAbsolute","clear","setGen"],"sources":["/Users/anasshaik/Desktop/Projects/CareerPath.AI/frontend/node_modules/mermaid/dist/flowDiagram-66a62f08.js"],"sourcesContent":["import { p as parser, f as flowDb } from \"./flowDb-956e92f1.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { select, curveLinear, selectAll } from \"d3\";\nimport { k as getStylesFromArray, m as evaluate, c as getConfig, r as renderKatex, e as common, l as log, n as interpolateToCurve, o as setupGraphViewbox } from \"./mermaid-b5860b54.js\";\nimport { render } from \"dagre-d3-es\";\nimport { applyStyle } from \"dagre-d3-es/src/dagre-js/util.js\";\nimport { addHtmlLabel } from \"dagre-d3-es/src/dagre-js/label/add-html-label.js\";\nimport { intersectPolygon } from \"dagre-d3-es/src/dagre-js/intersect/intersect-polygon.js\";\nimport { intersectRect } from \"dagre-d3-es/src/dagre-js/intersect/intersect-rect.js\";\nimport { f as flowRendererV2, a as flowStyles } from \"./styles-c10674c1.js\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nimport \"./index-3862675e.js\";\nimport \"dagre-d3-es/src/dagre/index.js\";\nimport \"dagre-d3-es/src/graphlib/json.js\";\nimport \"./edges-e0da2a9e.js\";\nimport \"./createText-2e5e7dd3.js\";\nimport \"mdast-util-from-markdown\";\nfunction question(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const s = (w + h) * 0.9;\n  const points = [\n    { x: s / 2, y: 0 },\n    { x: s, y: -s / 2 },\n    { x: s / 2, y: -s },\n    { x: 0, y: -s / 2 }\n  ];\n  const shapeSvg = insertPolygonShape(parent, s, s, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction hexagon(parent, bbox, node) {\n  const f = 4;\n  const h = bbox.height;\n  const m = h / f;\n  const w = bbox.width + 2 * m;\n  const points = [\n    { x: m, y: 0 },\n    { x: w - m, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w - m, y: -h },\n    { x: m, y: -h },\n    { x: 0, y: -h / 2 }\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction rect_left_inv_arrow(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: -h / 2, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: -h / 2, y: -h },\n    { x: 0, y: -h / 2 }\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction lean_right(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: -2 * h / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + 2 * h / 6, y: -h },\n    { x: h / 6, y: -h }\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction lean_left(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: 2 * h / 6, y: 0 },\n    { x: w + h / 6, y: 0 },\n    { x: w - 2 * h / 6, y: -h },\n    { x: -h / 6, y: -h }\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction trapezoid(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: -2 * h / 6, y: 0 },\n    { x: w + 2 * h / 6, y: 0 },\n    { x: w - h / 6, y: -h },\n    { x: h / 6, y: -h }\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction inv_trapezoid(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: h / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + 2 * h / 6, y: -h },\n    { x: -2 * h / 6, y: -h }\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction rect_right_inv_arrow(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w + h / 2, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w + h / 2, y: -h },\n    { x: 0, y: -h }\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction stadium(parent, bbox, node) {\n  const h = bbox.height;\n  const w = bbox.width + h / 4;\n  const shapeSvg = parent.insert(\"rect\", \":first-child\").attr(\"rx\", h / 2).attr(\"ry\", h / 2).attr(\"x\", -w / 2).attr(\"y\", -h / 2).attr(\"width\", w).attr(\"height\", h);\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n}\nfunction subroutine(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: 0, y: -h },\n    { x: 0, y: 0 },\n    { x: -8, y: 0 },\n    { x: w + 8, y: 0 },\n    { x: w + 8, y: -h },\n    { x: -8, y: -h },\n    { x: -8, y: 0 }\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function(point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\nfunction cylinder(parent, bbox, node) {\n  const w = bbox.width;\n  const rx = w / 2;\n  const ry = rx / (2.5 + w / 50);\n  const h = bbox.height + ry;\n  const shape = \"M 0,\" + ry + \" a \" + rx + \",\" + ry + \" 0,0,0 \" + w + \" 0 a \" + rx + \",\" + ry + \" 0,0,0 \" + -w + \" 0 l 0,\" + h + \" a \" + rx + \",\" + ry + \" 0,0,0 \" + w + \" 0 l 0,\" + -h;\n  const shapeSvg = parent.attr(\"label-offset-y\", ry).insert(\"path\", \":first-child\").attr(\"d\", shape).attr(\"transform\", \"translate(\" + -w / 2 + \",\" + -(h / 2 + ry) + \")\");\n  node.intersect = function(point) {\n    const pos = intersectRect(node, point);\n    const x = pos.x - node.x;\n    if (rx != 0 && (Math.abs(x) < node.width / 2 || Math.abs(x) == node.width / 2 && Math.abs(pos.y - node.y) > node.height / 2 - ry)) {\n      let y = ry * ry * (1 - x * x / (rx * rx));\n      if (y != 0) {\n        y = Math.sqrt(y);\n      }\n      y = ry - y;\n      if (point.y - node.y > 0) {\n        y = -y;\n      }\n      pos.y += y;\n    }\n    return pos;\n  };\n  return shapeSvg;\n}\nfunction addToRender(render2) {\n  render2.shapes().question = question;\n  render2.shapes().hexagon = hexagon;\n  render2.shapes().stadium = stadium;\n  render2.shapes().subroutine = subroutine;\n  render2.shapes().cylinder = cylinder;\n  render2.shapes().rect_left_inv_arrow = rect_left_inv_arrow;\n  render2.shapes().lean_right = lean_right;\n  render2.shapes().lean_left = lean_left;\n  render2.shapes().trapezoid = trapezoid;\n  render2.shapes().inv_trapezoid = inv_trapezoid;\n  render2.shapes().rect_right_inv_arrow = rect_right_inv_arrow;\n}\nfunction addToRenderV2(addShape) {\n  addShape({ question });\n  addShape({ hexagon });\n  addShape({ stadium });\n  addShape({ subroutine });\n  addShape({ cylinder });\n  addShape({ rect_left_inv_arrow });\n  addShape({ lean_right });\n  addShape({ lean_left });\n  addShape({ trapezoid });\n  addShape({ inv_trapezoid });\n  addShape({ rect_right_inv_arrow });\n}\nfunction insertPolygonShape(parent, w, h, points) {\n  return parent.insert(\"polygon\", \":first-child\").attr(\n    \"points\",\n    points.map(function(d) {\n      return d.x + \",\" + d.y;\n    }).join(\" \")\n  ).attr(\"transform\", \"translate(\" + -w / 2 + \",\" + h / 2 + \")\");\n}\nconst flowChartShapes = {\n  addToRender,\n  addToRenderV2\n};\nconst conf = {};\nconst setConf = function(cnf) {\n  const keys = Object.keys(cnf);\n  for (const key of keys) {\n    conf[key] = cnf[key];\n  }\n};\nconst addVertices = async function(vert, g, svgId, root, _doc, diagObj) {\n  const svg = !root ? select(`[id=\"${svgId}\"]`) : root.select(`[id=\"${svgId}\"]`);\n  const doc = !_doc ? document : _doc;\n  const keys = Object.keys(vert);\n  for (const id of keys) {\n    const vertex = vert[id];\n    let classStr = \"default\";\n    if (vertex.classes.length > 0) {\n      classStr = vertex.classes.join(\" \");\n    }\n    const styles = getStylesFromArray(vertex.styles);\n    let vertexText = vertex.text !== void 0 ? vertex.text : vertex.id;\n    let vertexNode;\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      const node = {\n        label: await renderKatex(\n          vertexText.replace(\n            /fa[blrs]?:fa-[\\w-]+/g,\n            // cspell:disable-line\n            (s) => `<i class='${s.replace(\":\", \" \")}'></i>`\n          ),\n          getConfig()\n        )\n      };\n      vertexNode = addHtmlLabel(svg, node).node();\n      vertexNode.parentNode.removeChild(vertexNode);\n    } else {\n      const svgLabel = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n      svgLabel.setAttribute(\"style\", styles.labelStyle.replace(\"color:\", \"fill:\"));\n      const rows = vertexText.split(common.lineBreakRegex);\n      for (const row of rows) {\n        const tspan = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\n        tspan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n        tspan.setAttribute(\"dy\", \"1em\");\n        tspan.setAttribute(\"x\", \"1\");\n        tspan.textContent = row;\n        svgLabel.appendChild(tspan);\n      }\n      vertexNode = svgLabel;\n    }\n    let radius = 0;\n    let _shape = \"\";\n    switch (vertex.type) {\n      case \"round\":\n        radius = 5;\n        _shape = \"rect\";\n        break;\n      case \"square\":\n        _shape = \"rect\";\n        break;\n      case \"diamond\":\n        _shape = \"question\";\n        break;\n      case \"hexagon\":\n        _shape = \"hexagon\";\n        break;\n      case \"odd\":\n        _shape = \"rect_left_inv_arrow\";\n        break;\n      case \"lean_right\":\n        _shape = \"lean_right\";\n        break;\n      case \"lean_left\":\n        _shape = \"lean_left\";\n        break;\n      case \"trapezoid\":\n        _shape = \"trapezoid\";\n        break;\n      case \"inv_trapezoid\":\n        _shape = \"inv_trapezoid\";\n        break;\n      case \"odd_right\":\n        _shape = \"rect_left_inv_arrow\";\n        break;\n      case \"circle\":\n        _shape = \"circle\";\n        break;\n      case \"ellipse\":\n        _shape = \"ellipse\";\n        break;\n      case \"stadium\":\n        _shape = \"stadium\";\n        break;\n      case \"subroutine\":\n        _shape = \"subroutine\";\n        break;\n      case \"cylinder\":\n        _shape = \"cylinder\";\n        break;\n      case \"group\":\n        _shape = \"rect\";\n        break;\n      default:\n        _shape = \"rect\";\n    }\n    log.warn(\"Adding node\", vertex.id, vertex.domId);\n    g.setNode(diagObj.db.lookUpDomId(vertex.id), {\n      labelType: \"svg\",\n      labelStyle: styles.labelStyle,\n      shape: _shape,\n      label: vertexNode,\n      rx: radius,\n      ry: radius,\n      class: classStr,\n      style: styles.style,\n      id: diagObj.db.lookUpDomId(vertex.id)\n    });\n  }\n};\nconst addEdges = async function(edges, g, diagObj) {\n  let cnt = 0;\n  let defaultStyle;\n  let defaultLabelStyle;\n  if (edges.defaultStyle !== void 0) {\n    const defaultStyles = getStylesFromArray(edges.defaultStyle);\n    defaultStyle = defaultStyles.style;\n    defaultLabelStyle = defaultStyles.labelStyle;\n  }\n  for (const edge of edges) {\n    cnt++;\n    const linkId = \"L-\" + edge.start + \"-\" + edge.end;\n    const linkNameStart = \"LS-\" + edge.start;\n    const linkNameEnd = \"LE-\" + edge.end;\n    const edgeData = {};\n    if (edge.type === \"arrow_open\") {\n      edgeData.arrowhead = \"none\";\n    } else {\n      edgeData.arrowhead = \"normal\";\n    }\n    let style = \"\";\n    let labelStyle = \"\";\n    if (edge.style !== void 0) {\n      const styles = getStylesFromArray(edge.style);\n      style = styles.style;\n      labelStyle = styles.labelStyle;\n    } else {\n      switch (edge.stroke) {\n        case \"normal\":\n          style = \"fill:none\";\n          if (defaultStyle !== void 0) {\n            style = defaultStyle;\n          }\n          if (defaultLabelStyle !== void 0) {\n            labelStyle = defaultLabelStyle;\n          }\n          break;\n        case \"dotted\":\n          style = \"fill:none;stroke-width:2px;stroke-dasharray:3;\";\n          break;\n        case \"thick\":\n          style = \" stroke-width: 3.5px;fill:none\";\n          break;\n      }\n    }\n    edgeData.style = style;\n    edgeData.labelStyle = labelStyle;\n    if (edge.interpolate !== void 0) {\n      edgeData.curve = interpolateToCurve(edge.interpolate, curveLinear);\n    } else if (edges.defaultInterpolate !== void 0) {\n      edgeData.curve = interpolateToCurve(edges.defaultInterpolate, curveLinear);\n    } else {\n      edgeData.curve = interpolateToCurve(conf.curve, curveLinear);\n    }\n    if (edge.text === void 0) {\n      if (edge.style !== void 0) {\n        edgeData.arrowheadStyle = \"fill: #333\";\n      }\n    } else {\n      edgeData.arrowheadStyle = \"fill: #333\";\n      edgeData.labelpos = \"c\";\n      if (evaluate(getConfig().flowchart.htmlLabels)) {\n        edgeData.labelType = \"html\";\n        edgeData.label = `<span id=\"L-${linkId}\" class=\"edgeLabel L-${linkNameStart}' L-${linkNameEnd}\" style=\"${edgeData.labelStyle}\">${await renderKatex(\n          edge.text.replace(\n            /fa[blrs]?:fa-[\\w-]+/g,\n            // cspell:disable-line\n            (s) => `<i class='${s.replace(\":\", \" \")}'></i>`\n          ),\n          getConfig()\n        )}</span>`;\n      } else {\n        edgeData.labelType = \"text\";\n        edgeData.label = edge.text.replace(common.lineBreakRegex, \"\\n\");\n        if (edge.style === void 0) {\n          edgeData.style = edgeData.style || \"stroke: #333; stroke-width: 1.5px;fill:none\";\n        }\n        edgeData.labelStyle = edgeData.labelStyle.replace(\"color:\", \"fill:\");\n      }\n    }\n    edgeData.id = linkId;\n    edgeData.class = linkNameStart + \" \" + linkNameEnd;\n    edgeData.minlen = edge.length || 1;\n    g.setEdge(diagObj.db.lookUpDomId(edge.start), diagObj.db.lookUpDomId(edge.end), edgeData, cnt);\n  }\n};\nconst getClasses = function(text, diagObj) {\n  log.info(\"Extracting classes\");\n  return diagObj.db.getClasses();\n};\nconst draw = async function(text, id, _version, diagObj) {\n  log.info(\"Drawing flowchart\");\n  const { securityLevel, flowchart: conf2 } = getConfig();\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n  let dir = diagObj.db.getDirection();\n  if (dir === void 0) {\n    dir = \"TD\";\n  }\n  const nodeSpacing = conf2.nodeSpacing || 50;\n  const rankSpacing = conf2.rankSpacing || 50;\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true\n  }).setGraph({\n    rankdir: dir,\n    nodesep: nodeSpacing,\n    ranksep: rankSpacing,\n    marginx: 8,\n    marginy: 8\n  }).setDefaultEdgeLabel(function() {\n    return {};\n  });\n  let subG;\n  const subGraphs = diagObj.db.getSubGraphs();\n  for (let i2 = subGraphs.length - 1; i2 >= 0; i2--) {\n    subG = subGraphs[i2];\n    diagObj.db.addVertex(subG.id, subG.title, \"group\", void 0, subG.classes);\n  }\n  const vert = diagObj.db.getVertices();\n  log.warn(\"Get vertices\", vert);\n  const edges = diagObj.db.getEdges();\n  let i = 0;\n  for (i = subGraphs.length - 1; i >= 0; i--) {\n    subG = subGraphs[i];\n    selectAll(\"cluster\").append(\"text\");\n    for (let j = 0; j < subG.nodes.length; j++) {\n      log.warn(\n        \"Setting subgraph\",\n        subG.nodes[j],\n        diagObj.db.lookUpDomId(subG.nodes[j]),\n        diagObj.db.lookUpDomId(subG.id)\n      );\n      g.setParent(diagObj.db.lookUpDomId(subG.nodes[j]), diagObj.db.lookUpDomId(subG.id));\n    }\n  }\n  await addVertices(vert, g, id, root, doc, diagObj);\n  await addEdges(edges, g, diagObj);\n  const render$1 = new render();\n  flowChartShapes.addToRender(render$1);\n  render$1.arrows().none = function normal(parent, id2, edge, type) {\n    const marker = parent.append(\"marker\").attr(\"id\", id2).attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", 9).attr(\"refY\", 5).attr(\"markerUnits\", \"strokeWidth\").attr(\"markerWidth\", 8).attr(\"markerHeight\", 6).attr(\"orient\", \"auto\");\n    const path = marker.append(\"path\").attr(\"d\", \"M 0 0 L 0 0 L 0 0 z\");\n    applyStyle(path, edge[type + \"Style\"]);\n  };\n  render$1.arrows().normal = function normal(parent, id2) {\n    const marker = parent.append(\"marker\").attr(\"id\", id2).attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", 9).attr(\"refY\", 5).attr(\"markerUnits\", \"strokeWidth\").attr(\"markerWidth\", 8).attr(\"markerHeight\", 6).attr(\"orient\", \"auto\");\n    marker.append(\"path\").attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\").attr(\"class\", \"arrowheadPath\").style(\"stroke-width\", 1).style(\"stroke-dasharray\", \"1,0\");\n  };\n  const svg = root.select(`[id=\"${id}\"]`);\n  const element = root.select(\"#\" + id + \" g\");\n  render$1(element, g);\n  element.selectAll(\"g.node\").attr(\"title\", function() {\n    return diagObj.db.getTooltip(this.id);\n  });\n  diagObj.db.indexNodes(\"subGraph\" + i);\n  for (i = 0; i < subGraphs.length; i++) {\n    subG = subGraphs[i];\n    if (subG.title !== \"undefined\") {\n      const clusterRects = doc.querySelectorAll(\n        \"#\" + id + ' [id=\"' + diagObj.db.lookUpDomId(subG.id) + '\"] rect'\n      );\n      const clusterEl = doc.querySelectorAll(\n        \"#\" + id + ' [id=\"' + diagObj.db.lookUpDomId(subG.id) + '\"]'\n      );\n      const xPos = clusterRects[0].x.baseVal.value;\n      const yPos = clusterRects[0].y.baseVal.value;\n      const _width = clusterRects[0].width.baseVal.value;\n      const cluster = select(clusterEl[0]);\n      const te = cluster.select(\".label\");\n      te.attr(\"transform\", `translate(${xPos + _width / 2}, ${yPos + 14})`);\n      te.attr(\"id\", id + \"Text\");\n      for (let j = 0; j < subG.classes.length; j++) {\n        clusterEl[0].classList.add(subG.classes[j]);\n      }\n    }\n  }\n  if (!conf2.htmlLabels) {\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n    for (const label of labels) {\n      const dim = label.getBBox();\n      const rect = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n      rect.setAttribute(\"rx\", 0);\n      rect.setAttribute(\"ry\", 0);\n      rect.setAttribute(\"width\", dim.width);\n      rect.setAttribute(\"height\", dim.height);\n      label.insertBefore(rect, label.firstChild);\n    }\n  }\n  setupGraphViewbox(g, svg, conf2.diagramPadding, conf2.useMaxWidth);\n  const keys = Object.keys(vert);\n  keys.forEach(function(key) {\n    const vertex = vert[key];\n    if (vertex.link) {\n      const node = root.select(\"#\" + id + ' [id=\"' + diagObj.db.lookUpDomId(key) + '\"]');\n      if (node) {\n        const link = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"a\");\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"class\", vertex.classes.join(\" \"));\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"href\", vertex.link);\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"rel\", \"noopener\");\n        if (securityLevel === \"sandbox\") {\n          link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"target\", \"_top\");\n        } else if (vertex.linkTarget) {\n          link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"target\", vertex.linkTarget);\n        }\n        const linkNode = node.insert(function() {\n          return link;\n        }, \":first-child\");\n        const shape = node.select(\".label-container\");\n        if (shape) {\n          linkNode.append(function() {\n            return shape.node();\n          });\n        }\n        const label = node.select(\".label\");\n        if (label) {\n          linkNode.append(function() {\n            return label.node();\n          });\n        }\n      }\n    }\n  });\n};\nconst flowRenderer = {\n  setConf,\n  addVertices,\n  addEdges,\n  getClasses,\n  draw\n};\nconst diagram = {\n  parser,\n  db: flowDb,\n  renderer: flowRendererV2,\n  styles: flowStyles,\n  init: (cnf) => {\n    if (!cnf.flowchart) {\n      cnf.flowchart = {};\n    }\n    cnf.flowchart.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    flowRenderer.setConf(cnf.flowchart);\n    flowDb.clear();\n    flowDb.setGen(\"gen-1\");\n  }\n};\nexport {\n  diagram\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}