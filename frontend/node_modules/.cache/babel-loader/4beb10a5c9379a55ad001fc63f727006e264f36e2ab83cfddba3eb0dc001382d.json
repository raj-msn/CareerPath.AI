{"ast":null,"code":"import { l as log, c as getConfig, B as defaultConfig, d as sanitizeText, D as parseFontSize, A as selectSvgElement, o as setupGraphViewbox } from \"./mermaid-b5860b54.js\";\nimport cytoscape from \"cytoscape\";\nimport coseBilkent from \"cytoscape-cose-bilkent\";\nimport { select } from \"d3\";\nimport { a as createText } from \"./createText-2e5e7dd3.js\";\nimport { isDark, lighten, darken } from \"khroma\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nimport \"mdast-util-from-markdown\";\nvar parser = function () {\n  var o = function (k, v, o2, l) {\n      for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v);\n      return o2;\n    },\n    $V0 = [1, 4],\n    $V1 = [1, 13],\n    $V2 = [1, 12],\n    $V3 = [1, 15],\n    $V4 = [1, 16],\n    $V5 = [1, 20],\n    $V6 = [1, 19],\n    $V7 = [6, 7, 8],\n    $V8 = [1, 26],\n    $V9 = [1, 24],\n    $Va = [1, 25],\n    $Vb = [6, 7, 11],\n    $Vc = [1, 6, 13, 15, 16, 19, 22],\n    $Vd = [1, 33],\n    $Ve = [1, 34],\n    $Vf = [1, 6, 7, 11, 13, 15, 16, 19, 22];\n  var parser2 = {\n    trace: function trace() {},\n    yy: {},\n    symbols_: {\n      \"error\": 2,\n      \"start\": 3,\n      \"mindMap\": 4,\n      \"spaceLines\": 5,\n      \"SPACELINE\": 6,\n      \"NL\": 7,\n      \"MINDMAP\": 8,\n      \"document\": 9,\n      \"stop\": 10,\n      \"EOF\": 11,\n      \"statement\": 12,\n      \"SPACELIST\": 13,\n      \"node\": 14,\n      \"ICON\": 15,\n      \"CLASS\": 16,\n      \"nodeWithId\": 17,\n      \"nodeWithoutId\": 18,\n      \"NODE_DSTART\": 19,\n      \"NODE_DESCR\": 20,\n      \"NODE_DEND\": 21,\n      \"NODE_ID\": 22,\n      \"$accept\": 0,\n      \"$end\": 1\n    },\n    terminals_: {\n      2: \"error\",\n      6: \"SPACELINE\",\n      7: \"NL\",\n      8: \"MINDMAP\",\n      11: \"EOF\",\n      13: \"SPACELIST\",\n      15: \"ICON\",\n      16: \"CLASS\",\n      19: \"NODE_DSTART\",\n      20: \"NODE_DESCR\",\n      21: \"NODE_DEND\",\n      22: \"NODE_ID\"\n    },\n    productions_: [0, [3, 1], [3, 2], [5, 1], [5, 2], [5, 2], [4, 2], [4, 3], [10, 1], [10, 1], [10, 1], [10, 2], [10, 2], [9, 3], [9, 2], [12, 2], [12, 2], [12, 2], [12, 1], [12, 1], [12, 1], [12, 1], [12, 1], [14, 1], [14, 1], [18, 3], [17, 1], [17, 4]],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n      var $0 = $$.length - 1;\n      switch (yystate) {\n        case 6:\n        case 7:\n          return yy;\n        case 8:\n          yy.getLogger().trace(\"Stop NL \");\n          break;\n        case 9:\n          yy.getLogger().trace(\"Stop EOF \");\n          break;\n        case 11:\n          yy.getLogger().trace(\"Stop NL2 \");\n          break;\n        case 12:\n          yy.getLogger().trace(\"Stop EOF2 \");\n          break;\n        case 15:\n          yy.getLogger().info(\"Node: \", $$[$0].id);\n          yy.addNode($$[$0 - 1].length, $$[$0].id, $$[$0].descr, $$[$0].type);\n          break;\n        case 16:\n          yy.getLogger().trace(\"Icon: \", $$[$0]);\n          yy.decorateNode({\n            icon: $$[$0]\n          });\n          break;\n        case 17:\n        case 21:\n          yy.decorateNode({\n            class: $$[$0]\n          });\n          break;\n        case 18:\n          yy.getLogger().trace(\"SPACELIST\");\n          break;\n        case 19:\n          yy.getLogger().trace(\"Node: \", $$[$0].id);\n          yy.addNode(0, $$[$0].id, $$[$0].descr, $$[$0].type);\n          break;\n        case 20:\n          yy.decorateNode({\n            icon: $$[$0]\n          });\n          break;\n        case 25:\n          yy.getLogger().trace(\"node found ..\", $$[$0 - 2]);\n          this.$ = {\n            id: $$[$0 - 1],\n            descr: $$[$0 - 1],\n            type: yy.getType($$[$0 - 2], $$[$0])\n          };\n          break;\n        case 26:\n          this.$ = {\n            id: $$[$0],\n            descr: $$[$0],\n            type: yy.nodeType.DEFAULT\n          };\n          break;\n        case 27:\n          yy.getLogger().trace(\"node found ..\", $$[$0 - 3]);\n          this.$ = {\n            id: $$[$0 - 3],\n            descr: $$[$0 - 1],\n            type: yy.getType($$[$0 - 2], $$[$0])\n          };\n          break;\n      }\n    },\n    table: [{\n      3: 1,\n      4: 2,\n      5: 3,\n      6: [1, 5],\n      8: $V0\n    }, {\n      1: [3]\n    }, {\n      1: [2, 1]\n    }, {\n      4: 6,\n      6: [1, 7],\n      7: [1, 8],\n      8: $V0\n    }, {\n      6: $V1,\n      7: [1, 10],\n      9: 9,\n      12: 11,\n      13: $V2,\n      14: 14,\n      15: $V3,\n      16: $V4,\n      17: 17,\n      18: 18,\n      19: $V5,\n      22: $V6\n    }, o($V7, [2, 3]), {\n      1: [2, 2]\n    }, o($V7, [2, 4]), o($V7, [2, 5]), {\n      1: [2, 6],\n      6: $V1,\n      12: 21,\n      13: $V2,\n      14: 14,\n      15: $V3,\n      16: $V4,\n      17: 17,\n      18: 18,\n      19: $V5,\n      22: $V6\n    }, {\n      6: $V1,\n      9: 22,\n      12: 11,\n      13: $V2,\n      14: 14,\n      15: $V3,\n      16: $V4,\n      17: 17,\n      18: 18,\n      19: $V5,\n      22: $V6\n    }, {\n      6: $V8,\n      7: $V9,\n      10: 23,\n      11: $Va\n    }, o($Vb, [2, 22], {\n      17: 17,\n      18: 18,\n      14: 27,\n      15: [1, 28],\n      16: [1, 29],\n      19: $V5,\n      22: $V6\n    }), o($Vb, [2, 18]), o($Vb, [2, 19]), o($Vb, [2, 20]), o($Vb, [2, 21]), o($Vb, [2, 23]), o($Vb, [2, 24]), o($Vb, [2, 26], {\n      19: [1, 30]\n    }), {\n      20: [1, 31]\n    }, {\n      6: $V8,\n      7: $V9,\n      10: 32,\n      11: $Va\n    }, {\n      1: [2, 7],\n      6: $V1,\n      12: 21,\n      13: $V2,\n      14: 14,\n      15: $V3,\n      16: $V4,\n      17: 17,\n      18: 18,\n      19: $V5,\n      22: $V6\n    }, o($Vc, [2, 14], {\n      7: $Vd,\n      11: $Ve\n    }), o($Vf, [2, 8]), o($Vf, [2, 9]), o($Vf, [2, 10]), o($Vb, [2, 15]), o($Vb, [2, 16]), o($Vb, [2, 17]), {\n      20: [1, 35]\n    }, {\n      21: [1, 36]\n    }, o($Vc, [2, 13], {\n      7: $Vd,\n      11: $Ve\n    }), o($Vf, [2, 11]), o($Vf, [2, 12]), {\n      21: [1, 37]\n    }, o($Vb, [2, 25]), o($Vb, [2, 27])],\n    defaultActions: {\n      2: [2, 1],\n      6: [2, 2]\n    },\n    parseError: function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    },\n    parse: function parse(input) {\n      var self = this,\n        stack = [0],\n        tstack = [],\n        vstack = [null],\n        lstack = [],\n        table = this.table,\n        yytext = \"\",\n        yylineno = 0,\n        yyleng = 0,\n        TERROR = 2,\n        EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer2 = Object.create(this.lexer);\n      var sharedState = {\n        yy: {}\n      };\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n      lexer2.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer2;\n      sharedState.yy.parser = this;\n      if (typeof lexer2.yylloc == \"undefined\") {\n        lexer2.yylloc = {};\n      }\n      var yyloc = lexer2.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer2.options && lexer2.options.ranges;\n      if (typeof sharedState.yy.parseError === \"function\") {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n      function lex() {\n        var token;\n        token = tstack.pop() || lexer2.lex() || EOF;\n        if (typeof token !== \"number\") {\n          if (token instanceof Array) {\n            tstack = token;\n            token = tstack.pop();\n          }\n          token = self.symbols_[token] || token;\n        }\n        return token;\n      }\n      var symbol,\n        state,\n        action,\n        r,\n        yyval = {},\n        p,\n        len,\n        newState,\n        expected;\n      while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == \"undefined\") {\n            symbol = lex();\n          }\n          action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n          var errStr = \"\";\n          expected = [];\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\n            }\n          }\n          if (lexer2.showPosition) {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n          } else {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n          }\n          this.parseError(errStr, {\n            text: lexer2.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer2.yylineno,\n            loc: yyloc,\n            expected\n          });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer2.yytext);\n            lstack.push(lexer2.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            {\n              yyleng = lexer2.yyleng;\n              yytext = lexer2.yytext;\n              yylineno = lexer2.yylineno;\n              yyloc = lexer2.yylloc;\n            }\n            break;\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n              yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n            }\n            r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n            if (typeof r !== \"undefined\") {\n              return r;\n            }\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n          case 3:\n            return true;\n        }\n      }\n      return true;\n    }\n  };\n  var lexer = function () {\n    var lexer2 = {\n      EOF: 1,\n      parseError: function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      },\n      // resets the lexer, sets new input\n      setInput: function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = \"\";\n        this.conditionStack = [\"INITIAL\"];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n        this.offset = 0;\n        return this;\n      },\n      // consumes and returns one char from the input\n      input: function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n        this._input = this._input.slice(1);\n        return ch;\n      },\n      // unshifts one char (or a string) into the input\n      unput: function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n      },\n      // When called from action, caches matched text and appends it on next action\n      more: function () {\n        this._more = true;\n        return this;\n      },\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: function () {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n        return this;\n      },\n      // retain first n characters of the match\n      less: function (n) {\n        this.unput(this.match.slice(n));\n      },\n      // displays already matched input, i.e. for error messages\n      pastInput: function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n      },\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: function () {\n        var next = this.match;\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n      },\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      },\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: function (match, indexed_rule) {\n        var token, lines, backup;\n        if (this.options.backtrack_lexer) {\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n          this.done = false;\n        }\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n          return false;\n        }\n        return false;\n      },\n      // return next match in input\n      next: function () {\n        if (this.done) {\n          return this.EOF;\n        }\n        if (!this._input) {\n          this.done = true;\n        }\n        var token, match, tempMatch, index;\n        if (!this._more) {\n          this.yytext = \"\";\n          this.match = \"\";\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue;\n              } else {\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n        if (match) {\n          token = this.test_match(match, rules[index]);\n          if (token !== false) {\n            return token;\n          }\n          return false;\n        }\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      },\n      // return next match that has a token\n      lex: function lex() {\n        var r = this.next();\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      },\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: function begin(condition) {\n        this.conditionStack.push(condition);\n      },\n      // pop the previously active lexer condition state off the condition stack\n      popState: function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      },\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      },\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      },\n      // alias for begin(condition)\n      pushState: function pushState(condition) {\n        this.begin(condition);\n      },\n      // return the number of states currently on the stack\n      stateStackSize: function stateStackSize() {\n        return this.conditionStack.length;\n      },\n      options: {\n        \"case-insensitive\": true\n      },\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        switch ($avoiding_name_collisions) {\n          case 0:\n            yy.getLogger().trace(\"Found comment\", yy_.yytext);\n            return 6;\n          case 1:\n            return 8;\n          case 2:\n            this.begin(\"CLASS\");\n            break;\n          case 3:\n            this.popState();\n            return 16;\n          case 4:\n            this.popState();\n            break;\n          case 5:\n            yy.getLogger().trace(\"Begin icon\");\n            this.begin(\"ICON\");\n            break;\n          case 6:\n            yy.getLogger().trace(\"SPACELINE\");\n            return 6;\n          case 7:\n            return 7;\n          case 8:\n            return 15;\n          case 9:\n            yy.getLogger().trace(\"end icon\");\n            this.popState();\n            break;\n          case 10:\n            yy.getLogger().trace(\"Exploding node\");\n            this.begin(\"NODE\");\n            return 19;\n          case 11:\n            yy.getLogger().trace(\"Cloud\");\n            this.begin(\"NODE\");\n            return 19;\n          case 12:\n            yy.getLogger().trace(\"Explosion Bang\");\n            this.begin(\"NODE\");\n            return 19;\n          case 13:\n            yy.getLogger().trace(\"Cloud Bang\");\n            this.begin(\"NODE\");\n            return 19;\n          case 14:\n            this.begin(\"NODE\");\n            return 19;\n          case 15:\n            this.begin(\"NODE\");\n            return 19;\n          case 16:\n            this.begin(\"NODE\");\n            return 19;\n          case 17:\n            this.begin(\"NODE\");\n            return 19;\n          case 18:\n            return 13;\n          case 19:\n            return 22;\n          case 20:\n            return 11;\n          case 21:\n            this.begin(\"NSTR2\");\n            break;\n          case 22:\n            return \"NODE_DESCR\";\n          case 23:\n            this.popState();\n            break;\n          case 24:\n            yy.getLogger().trace(\"Starting NSTR\");\n            this.begin(\"NSTR\");\n            break;\n          case 25:\n            yy.getLogger().trace(\"description:\", yy_.yytext);\n            return \"NODE_DESCR\";\n          case 26:\n            this.popState();\n            break;\n          case 27:\n            this.popState();\n            yy.getLogger().trace(\"node end ))\");\n            return \"NODE_DEND\";\n          case 28:\n            this.popState();\n            yy.getLogger().trace(\"node end )\");\n            return \"NODE_DEND\";\n          case 29:\n            this.popState();\n            yy.getLogger().trace(\"node end ...\", yy_.yytext);\n            return \"NODE_DEND\";\n          case 30:\n            this.popState();\n            yy.getLogger().trace(\"node end ((\");\n            return \"NODE_DEND\";\n          case 31:\n            this.popState();\n            yy.getLogger().trace(\"node end (-\");\n            return \"NODE_DEND\";\n          case 32:\n            this.popState();\n            yy.getLogger().trace(\"node end (-\");\n            return \"NODE_DEND\";\n          case 33:\n            this.popState();\n            yy.getLogger().trace(\"node end ((\");\n            return \"NODE_DEND\";\n          case 34:\n            this.popState();\n            yy.getLogger().trace(\"node end ((\");\n            return \"NODE_DEND\";\n          case 35:\n            yy.getLogger().trace(\"Long description:\", yy_.yytext);\n            return 20;\n          case 36:\n            yy.getLogger().trace(\"Long description:\", yy_.yytext);\n            return 20;\n        }\n      },\n      rules: [/^(?:\\s*%%.*)/i, /^(?:mindmap\\b)/i, /^(?::::)/i, /^(?:.+)/i, /^(?:\\n)/i, /^(?:::icon\\()/i, /^(?:[\\s]+[\\n])/i, /^(?:[\\n]+)/i, /^(?:[^\\)]+)/i, /^(?:\\))/i, /^(?:-\\))/i, /^(?:\\(-)/i, /^(?:\\)\\))/i, /^(?:\\))/i, /^(?:\\(\\()/i, /^(?:\\{\\{)/i, /^(?:\\()/i, /^(?:\\[)/i, /^(?:[\\s]+)/i, /^(?:[^\\(\\[\\n\\)\\{\\}]+)/i, /^(?:$)/i, /^(?:[\"][`])/i, /^(?:[^`\"]+)/i, /^(?:[`][\"])/i, /^(?:[\"])/i, /^(?:[^\"]+)/i, /^(?:[\"])/i, /^(?:[\\)]\\))/i, /^(?:[\\)])/i, /^(?:[\\]])/i, /^(?:\\}\\})/i, /^(?:\\(-)/i, /^(?:-\\))/i, /^(?:\\(\\()/i, /^(?:\\()/i, /^(?:[^\\)\\]\\(\\}]+)/i, /^(?:.+(?!\\(\\())/i],\n      conditions: {\n        \"CLASS\": {\n          \"rules\": [3, 4],\n          \"inclusive\": false\n        },\n        \"ICON\": {\n          \"rules\": [8, 9],\n          \"inclusive\": false\n        },\n        \"NSTR2\": {\n          \"rules\": [22, 23],\n          \"inclusive\": false\n        },\n        \"NSTR\": {\n          \"rules\": [25, 26],\n          \"inclusive\": false\n        },\n        \"NODE\": {\n          \"rules\": [21, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36],\n          \"inclusive\": false\n        },\n        \"INITIAL\": {\n          \"rules\": [0, 1, 2, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],\n          \"inclusive\": true\n        }\n      }\n    };\n    return lexer2;\n  }();\n  parser2.lexer = lexer;\n  function Parser() {\n    this.yy = {};\n  }\n  Parser.prototype = parser2;\n  parser2.Parser = Parser;\n  return new Parser();\n}();\nparser.parser = parser;\nconst parser$1 = parser;\nlet nodes = [];\nlet cnt = 0;\nlet elements = {};\nconst clear = () => {\n  nodes = [];\n  cnt = 0;\n  elements = {};\n};\nconst getParent = function (level) {\n  for (let i = nodes.length - 1; i >= 0; i--) {\n    if (nodes[i].level < level) {\n      return nodes[i];\n    }\n  }\n  return null;\n};\nconst getMindmap = () => {\n  return nodes.length > 0 ? nodes[0] : null;\n};\nconst addNode = (level, id, descr, type) => {\n  var _a, _b;\n  log.info(\"addNode\", level, id, descr, type);\n  const conf = getConfig();\n  let padding = ((_a = conf.mindmap) == null ? void 0 : _a.padding) ?? defaultConfig.mindmap.padding;\n  switch (type) {\n    case nodeType.ROUNDED_RECT:\n    case nodeType.RECT:\n    case nodeType.HEXAGON:\n      padding *= 2;\n  }\n  const node = {\n    id: cnt++,\n    nodeId: sanitizeText(id, conf),\n    level,\n    descr: sanitizeText(descr, conf),\n    type,\n    children: [],\n    width: ((_b = conf.mindmap) == null ? void 0 : _b.maxNodeWidth) ?? defaultConfig.mindmap.maxNodeWidth,\n    padding\n  };\n  const parent = getParent(level);\n  if (parent) {\n    parent.children.push(node);\n    nodes.push(node);\n  } else {\n    if (nodes.length === 0) {\n      nodes.push(node);\n    } else {\n      throw new Error('There can be only one root. No parent could be found for (\"' + node.descr + '\")');\n    }\n  }\n};\nconst nodeType = {\n  DEFAULT: 0,\n  NO_BORDER: 0,\n  ROUNDED_RECT: 1,\n  RECT: 2,\n  CIRCLE: 3,\n  CLOUD: 4,\n  BANG: 5,\n  HEXAGON: 6\n};\nconst getType = (startStr, endStr) => {\n  log.debug(\"In get type\", startStr, endStr);\n  switch (startStr) {\n    case \"[\":\n      return nodeType.RECT;\n    case \"(\":\n      return endStr === \")\" ? nodeType.ROUNDED_RECT : nodeType.CLOUD;\n    case \"((\":\n      return nodeType.CIRCLE;\n    case \")\":\n      return nodeType.CLOUD;\n    case \"))\":\n      return nodeType.BANG;\n    case \"{{\":\n      return nodeType.HEXAGON;\n    default:\n      return nodeType.DEFAULT;\n  }\n};\nconst setElementForId = (id, element) => {\n  elements[id] = element;\n};\nconst decorateNode = decoration => {\n  if (!decoration) {\n    return;\n  }\n  const config = getConfig();\n  const node = nodes[nodes.length - 1];\n  if (decoration.icon) {\n    node.icon = sanitizeText(decoration.icon, config);\n  }\n  if (decoration.class) {\n    node.class = sanitizeText(decoration.class, config);\n  }\n};\nconst type2Str = type => {\n  switch (type) {\n    case nodeType.DEFAULT:\n      return \"no-border\";\n    case nodeType.RECT:\n      return \"rect\";\n    case nodeType.ROUNDED_RECT:\n      return \"rounded-rect\";\n    case nodeType.CIRCLE:\n      return \"circle\";\n    case nodeType.CLOUD:\n      return \"cloud\";\n    case nodeType.BANG:\n      return \"bang\";\n    case nodeType.HEXAGON:\n      return \"hexgon\";\n    default:\n      return \"no-border\";\n  }\n};\nconst getLogger = () => log;\nconst getElementById = id => elements[id];\nconst db = {\n  clear,\n  addNode,\n  getMindmap,\n  nodeType,\n  getType,\n  setElementForId,\n  decorateNode,\n  type2Str,\n  getLogger,\n  getElementById\n};\nconst db$1 = db;\nconst MAX_SECTIONS = 12;\nconst defaultBkg = function (db2, elem, node, section) {\n  const rd = 5;\n  elem.append(\"path\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + db2.type2Str(node.type)).attr(\"d\", `M0 ${node.height - rd} v${-node.height + 2 * rd} q0,-5 5,-5 h${node.width - 2 * rd} q5,0 5,5 v${node.height - rd} H0 Z`);\n  elem.append(\"line\").attr(\"class\", \"node-line-\" + section).attr(\"x1\", 0).attr(\"y1\", node.height).attr(\"x2\", node.width).attr(\"y2\", node.height);\n};\nconst rectBkg = function (db2, elem, node) {\n  elem.append(\"rect\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + db2.type2Str(node.type)).attr(\"height\", node.height).attr(\"width\", node.width);\n};\nconst cloudBkg = function (db2, elem, node) {\n  const w = node.width;\n  const h = node.height;\n  const r1 = 0.15 * w;\n  const r2 = 0.25 * w;\n  const r3 = 0.35 * w;\n  const r4 = 0.2 * w;\n  elem.append(\"path\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + db2.type2Str(node.type)).attr(\"d\", `M0 0 a${r1},${r1} 0 0,1 ${w * 0.25},${-1 * w * 0.1}\n      a${r3},${r3} 1 0,1 ${w * 0.4},${-1 * w * 0.1}\n      a${r2},${r2} 1 0,1 ${w * 0.35},${1 * w * 0.2}\n\n      a${r1},${r1} 1 0,1 ${w * 0.15},${1 * h * 0.35}\n      a${r4},${r4} 1 0,1 ${-1 * w * 0.15},${1 * h * 0.65}\n\n      a${r2},${r1} 1 0,1 ${-1 * w * 0.25},${w * 0.15}\n      a${r3},${r3} 1 0,1 ${-1 * w * 0.5},${0}\n      a${r1},${r1} 1 0,1 ${-1 * w * 0.25},${-1 * w * 0.15}\n\n      a${r1},${r1} 1 0,1 ${-1 * w * 0.1},${-1 * h * 0.35}\n      a${r4},${r4} 1 0,1 ${w * 0.1},${-1 * h * 0.65}\n\n    H0 V0 Z`);\n};\nconst bangBkg = function (db2, elem, node) {\n  const w = node.width;\n  const h = node.height;\n  const r = 0.15 * w;\n  elem.append(\"path\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + db2.type2Str(node.type)).attr(\"d\", `M0 0 a${r},${r} 1 0,0 ${w * 0.25},${-1 * h * 0.1}\n      a${r},${r} 1 0,0 ${w * 0.25},${0}\n      a${r},${r} 1 0,0 ${w * 0.25},${0}\n      a${r},${r} 1 0,0 ${w * 0.25},${1 * h * 0.1}\n\n      a${r},${r} 1 0,0 ${w * 0.15},${1 * h * 0.33}\n      a${r * 0.8},${r * 0.8} 1 0,0 ${0},${1 * h * 0.34}\n      a${r},${r} 1 0,0 ${-1 * w * 0.15},${1 * h * 0.33}\n\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${h * 0.15}\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${0}\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${0}\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${-1 * h * 0.15}\n\n      a${r},${r} 1 0,0 ${-1 * w * 0.1},${-1 * h * 0.33}\n      a${r * 0.8},${r * 0.8} 1 0,0 ${0},${-1 * h * 0.34}\n      a${r},${r} 1 0,0 ${w * 0.1},${-1 * h * 0.33}\n\n    H0 V0 Z`);\n};\nconst circleBkg = function (db2, elem, node) {\n  elem.append(\"circle\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + db2.type2Str(node.type)).attr(\"r\", node.width / 2);\n};\nfunction insertPolygonShape(parent, w, h, points, node) {\n  return parent.insert(\"polygon\", \":first-child\").attr(\"points\", points.map(function (d) {\n    return d.x + \",\" + d.y;\n  }).join(\" \")).attr(\"transform\", \"translate(\" + (node.width - w) / 2 + \", \" + h + \")\");\n}\nconst hexagonBkg = function (_db, elem, node) {\n  const h = node.height;\n  const f = 4;\n  const m = h / f;\n  const w = node.width - node.padding + 2 * m;\n  const points = [{\n    x: m,\n    y: 0\n  }, {\n    x: w - m,\n    y: 0\n  }, {\n    x: w,\n    y: -h / 2\n  }, {\n    x: w - m,\n    y: -h\n  }, {\n    x: m,\n    y: -h\n  }, {\n    x: 0,\n    y: -h / 2\n  }];\n  insertPolygonShape(elem, w, h, points, node);\n};\nconst roundedRectBkg = function (db2, elem, node) {\n  elem.append(\"rect\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + db2.type2Str(node.type)).attr(\"height\", node.height).attr(\"rx\", node.padding).attr(\"ry\", node.padding).attr(\"width\", node.width);\n};\nconst drawNode = function (db2, elem, node, fullSection, conf) {\n  const htmlLabels = conf.htmlLabels;\n  const section = fullSection % (MAX_SECTIONS - 1);\n  const nodeElem = elem.append(\"g\");\n  node.section = section;\n  let sectionClass = \"section-\" + section;\n  if (section < 0) {\n    sectionClass += \" section-root\";\n  }\n  nodeElem.attr(\"class\", (node.class ? node.class + \" \" : \"\") + \"mindmap-node \" + sectionClass);\n  const bkgElem = nodeElem.append(\"g\");\n  const textElem = nodeElem.append(\"g\");\n  const description = node.descr.replace(/(<br\\/*>)/g, \"\\n\");\n  createText(textElem, description, {\n    useHtmlLabels: htmlLabels,\n    width: node.width,\n    classes: \"mindmap-node-label\"\n  });\n  if (!htmlLabels) {\n    textElem.attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\");\n  }\n  const bbox = textElem.node().getBBox();\n  const [fontSize] = parseFontSize(conf.fontSize);\n  node.height = bbox.height + fontSize * 1.1 * 0.5 + node.padding;\n  node.width = bbox.width + 2 * node.padding;\n  if (node.icon) {\n    if (node.type === db2.nodeType.CIRCLE) {\n      node.height += 50;\n      node.width += 50;\n      const icon = nodeElem.append(\"foreignObject\").attr(\"height\", \"50px\").attr(\"width\", node.width).attr(\"style\", \"text-align: center;\");\n      icon.append(\"div\").attr(\"class\", \"icon-container\").append(\"i\").attr(\"class\", \"node-icon-\" + section + \" \" + node.icon);\n      textElem.attr(\"transform\", \"translate(\" + node.width / 2 + \", \" + (node.height / 2 - 1.5 * node.padding) + \")\");\n    } else {\n      node.width += 50;\n      const orgHeight = node.height;\n      node.height = Math.max(orgHeight, 60);\n      const heightDiff = Math.abs(node.height - orgHeight);\n      const icon = nodeElem.append(\"foreignObject\").attr(\"width\", \"60px\").attr(\"height\", node.height).attr(\"style\", \"text-align: center;margin-top:\" + heightDiff / 2 + \"px;\");\n      icon.append(\"div\").attr(\"class\", \"icon-container\").append(\"i\").attr(\"class\", \"node-icon-\" + section + \" \" + node.icon);\n      textElem.attr(\"transform\", \"translate(\" + (25 + node.width / 2) + \", \" + (heightDiff / 2 + node.padding / 2) + \")\");\n    }\n  } else {\n    if (!htmlLabels) {\n      const dx = node.width / 2;\n      const dy = node.padding / 2;\n      textElem.attr(\"transform\", \"translate(\" + dx + \", \" + dy + \")\");\n    } else {\n      const dx = (node.width - bbox.width) / 2;\n      const dy = (node.height - bbox.height) / 2;\n      textElem.attr(\"transform\", \"translate(\" + dx + \", \" + dy + \")\");\n    }\n  }\n  switch (node.type) {\n    case db2.nodeType.DEFAULT:\n      defaultBkg(db2, bkgElem, node, section);\n      break;\n    case db2.nodeType.ROUNDED_RECT:\n      roundedRectBkg(db2, bkgElem, node);\n      break;\n    case db2.nodeType.RECT:\n      rectBkg(db2, bkgElem, node);\n      break;\n    case db2.nodeType.CIRCLE:\n      bkgElem.attr(\"transform\", \"translate(\" + node.width / 2 + \", \" + +node.height / 2 + \")\");\n      circleBkg(db2, bkgElem, node);\n      break;\n    case db2.nodeType.CLOUD:\n      cloudBkg(db2, bkgElem, node);\n      break;\n    case db2.nodeType.BANG:\n      bangBkg(db2, bkgElem, node);\n      break;\n    case db2.nodeType.HEXAGON:\n      hexagonBkg(db2, bkgElem, node);\n      break;\n  }\n  db2.setElementForId(node.id, nodeElem);\n  return node.height;\n};\nconst positionNode = function (db2, node) {\n  const nodeElem = db2.getElementById(node.id);\n  const x = node.x || 0;\n  const y = node.y || 0;\n  nodeElem.attr(\"transform\", \"translate(\" + x + \",\" + y + \")\");\n};\ncytoscape.use(coseBilkent);\nfunction drawNodes(db2, svg, mindmap, section, conf) {\n  drawNode(db2, svg, mindmap, section, conf);\n  if (mindmap.children) {\n    mindmap.children.forEach((child, index) => {\n      drawNodes(db2, svg, child, section < 0 ? index : section, conf);\n    });\n  }\n}\nfunction drawEdges(edgesEl, cy) {\n  cy.edges().map((edge, id) => {\n    const data = edge.data();\n    if (edge[0]._private.bodyBounds) {\n      const bounds = edge[0]._private.rscratch;\n      log.trace(\"Edge: \", id, data);\n      edgesEl.insert(\"path\").attr(\"d\", `M ${bounds.startX},${bounds.startY} L ${bounds.midX},${bounds.midY} L${bounds.endX},${bounds.endY} `).attr(\"class\", \"edge section-edge-\" + data.section + \" edge-depth-\" + data.depth);\n    }\n  });\n}\nfunction addNodes(mindmap, cy, conf, level) {\n  cy.add({\n    group: \"nodes\",\n    data: {\n      id: mindmap.id.toString(),\n      labelText: mindmap.descr,\n      height: mindmap.height,\n      width: mindmap.width,\n      level,\n      nodeId: mindmap.id,\n      padding: mindmap.padding,\n      type: mindmap.type\n    },\n    position: {\n      x: mindmap.x,\n      y: mindmap.y\n    }\n  });\n  if (mindmap.children) {\n    mindmap.children.forEach(child => {\n      addNodes(child, cy, conf, level + 1);\n      cy.add({\n        group: \"edges\",\n        data: {\n          id: `${mindmap.id}_${child.id}`,\n          source: mindmap.id,\n          target: child.id,\n          depth: level,\n          section: child.section\n        }\n      });\n    });\n  }\n}\nfunction layoutMindmap(node, conf) {\n  return new Promise(resolve => {\n    const renderEl = select(\"body\").append(\"div\").attr(\"id\", \"cy\").attr(\"style\", \"display:none\");\n    const cy = cytoscape({\n      container: document.getElementById(\"cy\"),\n      // container to render in\n      style: [{\n        selector: \"edge\",\n        style: {\n          \"curve-style\": \"bezier\"\n        }\n      }]\n    });\n    renderEl.remove();\n    addNodes(node, cy, conf, 0);\n    cy.nodes().forEach(function (n) {\n      n.layoutDimensions = () => {\n        const data = n.data();\n        return {\n          w: data.width,\n          h: data.height\n        };\n      };\n    });\n    cy.layout({\n      name: \"cose-bilkent\",\n      // @ts-ignore Types for cose-bilkent are not correct?\n      quality: \"proof\",\n      styleEnabled: false,\n      animate: false\n    }).run();\n    cy.ready(e => {\n      log.info(\"Ready\", e);\n      resolve(cy);\n    });\n  });\n}\nfunction positionNodes(db2, cy) {\n  cy.nodes().map((node, id) => {\n    const data = node.data();\n    data.x = node.position().x;\n    data.y = node.position().y;\n    positionNode(db2, data);\n    const el = db2.getElementById(data.nodeId);\n    log.info(\"Id:\", id, \"Position: (\", node.position().x, \", \", node.position().y, \")\", data);\n    el.attr(\"transform\", `translate(${node.position().x - data.width / 2}, ${node.position().y - data.height / 2})`);\n    el.attr(\"attr\", `apa-${id})`);\n  });\n}\nconst draw = async (text, id, _version, diagObj) => {\n  var _a, _b;\n  log.debug(\"Rendering mindmap diagram\\n\" + text);\n  const db2 = diagObj.db;\n  const mm = db2.getMindmap();\n  if (!mm) {\n    return;\n  }\n  const conf = getConfig();\n  conf.htmlLabels = false;\n  const svg = selectSvgElement(id);\n  const edgesElem = svg.append(\"g\");\n  edgesElem.attr(\"class\", \"mindmap-edges\");\n  const nodesElem = svg.append(\"g\");\n  nodesElem.attr(\"class\", \"mindmap-nodes\");\n  drawNodes(db2, nodesElem, mm, -1, conf);\n  const cy = await layoutMindmap(mm, conf);\n  drawEdges(edgesElem, cy);\n  positionNodes(db2, cy);\n  setupGraphViewbox(void 0, svg, ((_a = conf.mindmap) == null ? void 0 : _a.padding) ?? defaultConfig.mindmap.padding, ((_b = conf.mindmap) == null ? void 0 : _b.useMaxWidth) ?? defaultConfig.mindmap.useMaxWidth);\n};\nconst renderer = {\n  draw\n};\nconst genSections = options => {\n  let sections = \"\";\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    options[\"lineColor\" + i] = options[\"lineColor\" + i] || options[\"cScaleInv\" + i];\n    if (isDark(options[\"lineColor\" + i])) {\n      options[\"lineColor\" + i] = lighten(options[\"lineColor\" + i], 20);\n    } else {\n      options[\"lineColor\" + i] = darken(options[\"lineColor\" + i], 20);\n    }\n  }\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    const sw = \"\" + (17 - 3 * i);\n    sections += `\n    .section-${i - 1} rect, .section-${i - 1} path, .section-${i - 1} circle, .section-${i - 1} polygon, .section-${i - 1} path  {\n      fill: ${options[\"cScale\" + i]};\n    }\n    .section-${i - 1} text {\n     fill: ${options[\"cScaleLabel\" + i]};\n    }\n    .node-icon-${i - 1} {\n      font-size: 40px;\n      color: ${options[\"cScaleLabel\" + i]};\n    }\n    .section-edge-${i - 1}{\n      stroke: ${options[\"cScale\" + i]};\n    }\n    .edge-depth-${i - 1}{\n      stroke-width: ${sw};\n    }\n    .section-${i - 1} line {\n      stroke: ${options[\"cScaleInv\" + i]} ;\n      stroke-width: 3;\n    }\n\n    .disabled, .disabled circle, .disabled text {\n      fill: lightgray;\n    }\n    .disabled text {\n      fill: #efefef;\n    }\n    `;\n  }\n  return sections;\n};\nconst getStyles = options => `\n  .edge {\n    stroke-width: 3;\n  }\n  ${genSections(options)}\n  .section-root rect, .section-root path, .section-root circle, .section-root polygon  {\n    fill: ${options.git0};\n  }\n  .section-root text {\n    fill: ${options.gitBranchLabel0};\n  }\n  .icon-container {\n    height:100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .edge {\n    fill: none;\n  }\n  .mindmap-node-label {\n    dy: 1em;\n    alignment-baseline: middle;\n    text-anchor: middle;\n    dominant-baseline: middle;\n    text-align: center;\n  }\n`;\nconst styles = getStyles;\nconst diagram = {\n  db: db$1,\n  renderer,\n  parser: parser$1,\n  styles\n};\nexport { diagram };","map":{"version":3,"names":["l","log","c","getConfig","B","defaultConfig","d","sanitizeText","D","parseFontSize","A","selectSvgElement","o","setupGraphViewbox","cytoscape","coseBilkent","select","a","createText","isDark","lighten","darken","parser","k","v","o2","length","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","parser2","trace","yy","symbols_","terminals_","productions_","performAction","anonymous","yytext","yyleng","yylineno","yystate","$$","_$","$0","getLogger","info","id","addNode","descr","type","decorateNode","icon","class","$","getType","nodeType","DEFAULT","table","defaultActions","parseError","str","hash","recoverable","error","Error","parse","input","self","stack","tstack","vstack","lstack","TERROR","EOF","args","slice","call","arguments","lexer2","Object","create","lexer","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","push","ranges","options","getPrototypeOf","lex","token","pop","Array","symbol","state","action","r","yyval","p","len","newState","expected","errStr","showPosition","join","text","match","line","loc","first_line","last_line","first_column","last_column","range","apply","concat","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","lines","unput","split","substr","oldLines","more","reject","backtrack_lexer","less","n","pastInput","past","replace","upcomingInput","next","pre","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","condition","popState","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","parser$1","nodes","cnt","elements","clear","getParent","level","getMindmap","_a","_b","conf","padding","mindmap","ROUNDED_RECT","RECT","HEXAGON","node","nodeId","children","width","maxNodeWidth","parent","NO_BORDER","CIRCLE","CLOUD","BANG","startStr","endStr","debug","setElementForId","element","decoration","config","type2Str","getElementById","db","db$1","MAX_SECTIONS","defaultBkg","db2","elem","section","rd","append","attr","height","rectBkg","cloudBkg","w","h","r1","r2","r3","r4","bangBkg","circleBkg","insertPolygonShape","points","insert","map","x","y","hexagonBkg","_db","f","m","roundedRectBkg","drawNode","fullSection","htmlLabels","nodeElem","sectionClass","bkgElem","textElem","description","useHtmlLabels","classes","bbox","getBBox","fontSize","orgHeight","max","heightDiff","dx","dy","positionNode","use","drawNodes","svg","forEach","child","drawEdges","edgesEl","cy","edges","edge","data","_private","bodyBounds","bounds","rscratch","startX","startY","midX","midY","endX","endY","depth","addNodes","add","group","toString","labelText","position","source","target","layoutMindmap","Promise","resolve","renderEl","container","document","style","selector","remove","layoutDimensions","layout","name","quality","styleEnabled","animate","run","ready","e","positionNodes","el","draw","_version","diagObj","mm","edgesElem","nodesElem","useMaxWidth","renderer","genSections","sections","THEME_COLOR_LIMIT","sw","getStyles","git0","gitBranchLabel0","styles","diagram"],"sources":["/Users/anasshaik/Desktop/Projects/CareerPath.AI/frontend/node_modules/mermaid/dist/mindmap-definition-fc14e90a.js"],"sourcesContent":["import { l as log, c as getConfig, B as defaultConfig, d as sanitizeText, D as parseFontSize, A as selectSvgElement, o as setupGraphViewbox } from \"./mermaid-b5860b54.js\";\nimport cytoscape from \"cytoscape\";\nimport coseBilkent from \"cytoscape-cose-bilkent\";\nimport { select } from \"d3\";\nimport { a as createText } from \"./createText-2e5e7dd3.js\";\nimport { isDark, lighten, darken } from \"khroma\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nimport \"mdast-util-from-markdown\";\nvar parser = function() {\n  var o = function(k, v, o2, l) {\n    for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v)\n      ;\n    return o2;\n  }, $V0 = [1, 4], $V1 = [1, 13], $V2 = [1, 12], $V3 = [1, 15], $V4 = [1, 16], $V5 = [1, 20], $V6 = [1, 19], $V7 = [6, 7, 8], $V8 = [1, 26], $V9 = [1, 24], $Va = [1, 25], $Vb = [6, 7, 11], $Vc = [1, 6, 13, 15, 16, 19, 22], $Vd = [1, 33], $Ve = [1, 34], $Vf = [1, 6, 7, 11, 13, 15, 16, 19, 22];\n  var parser2 = {\n    trace: function trace() {\n    },\n    yy: {},\n    symbols_: { \"error\": 2, \"start\": 3, \"mindMap\": 4, \"spaceLines\": 5, \"SPACELINE\": 6, \"NL\": 7, \"MINDMAP\": 8, \"document\": 9, \"stop\": 10, \"EOF\": 11, \"statement\": 12, \"SPACELIST\": 13, \"node\": 14, \"ICON\": 15, \"CLASS\": 16, \"nodeWithId\": 17, \"nodeWithoutId\": 18, \"NODE_DSTART\": 19, \"NODE_DESCR\": 20, \"NODE_DEND\": 21, \"NODE_ID\": 22, \"$accept\": 0, \"$end\": 1 },\n    terminals_: { 2: \"error\", 6: \"SPACELINE\", 7: \"NL\", 8: \"MINDMAP\", 11: \"EOF\", 13: \"SPACELIST\", 15: \"ICON\", 16: \"CLASS\", 19: \"NODE_DSTART\", 20: \"NODE_DESCR\", 21: \"NODE_DEND\", 22: \"NODE_ID\" },\n    productions_: [0, [3, 1], [3, 2], [5, 1], [5, 2], [5, 2], [4, 2], [4, 3], [10, 1], [10, 1], [10, 1], [10, 2], [10, 2], [9, 3], [9, 2], [12, 2], [12, 2], [12, 2], [12, 1], [12, 1], [12, 1], [12, 1], [12, 1], [14, 1], [14, 1], [18, 3], [17, 1], [17, 4]],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n      var $0 = $$.length - 1;\n      switch (yystate) {\n        case 6:\n        case 7:\n          return yy;\n        case 8:\n          yy.getLogger().trace(\"Stop NL \");\n          break;\n        case 9:\n          yy.getLogger().trace(\"Stop EOF \");\n          break;\n        case 11:\n          yy.getLogger().trace(\"Stop NL2 \");\n          break;\n        case 12:\n          yy.getLogger().trace(\"Stop EOF2 \");\n          break;\n        case 15:\n          yy.getLogger().info(\"Node: \", $$[$0].id);\n          yy.addNode($$[$0 - 1].length, $$[$0].id, $$[$0].descr, $$[$0].type);\n          break;\n        case 16:\n          yy.getLogger().trace(\"Icon: \", $$[$0]);\n          yy.decorateNode({ icon: $$[$0] });\n          break;\n        case 17:\n        case 21:\n          yy.decorateNode({ class: $$[$0] });\n          break;\n        case 18:\n          yy.getLogger().trace(\"SPACELIST\");\n          break;\n        case 19:\n          yy.getLogger().trace(\"Node: \", $$[$0].id);\n          yy.addNode(0, $$[$0].id, $$[$0].descr, $$[$0].type);\n          break;\n        case 20:\n          yy.decorateNode({ icon: $$[$0] });\n          break;\n        case 25:\n          yy.getLogger().trace(\"node found ..\", $$[$0 - 2]);\n          this.$ = { id: $$[$0 - 1], descr: $$[$0 - 1], type: yy.getType($$[$0 - 2], $$[$0]) };\n          break;\n        case 26:\n          this.$ = { id: $$[$0], descr: $$[$0], type: yy.nodeType.DEFAULT };\n          break;\n        case 27:\n          yy.getLogger().trace(\"node found ..\", $$[$0 - 3]);\n          this.$ = { id: $$[$0 - 3], descr: $$[$0 - 1], type: yy.getType($$[$0 - 2], $$[$0]) };\n          break;\n      }\n    },\n    table: [{ 3: 1, 4: 2, 5: 3, 6: [1, 5], 8: $V0 }, { 1: [3] }, { 1: [2, 1] }, { 4: 6, 6: [1, 7], 7: [1, 8], 8: $V0 }, { 6: $V1, 7: [1, 10], 9: 9, 12: 11, 13: $V2, 14: 14, 15: $V3, 16: $V4, 17: 17, 18: 18, 19: $V5, 22: $V6 }, o($V7, [2, 3]), { 1: [2, 2] }, o($V7, [2, 4]), o($V7, [2, 5]), { 1: [2, 6], 6: $V1, 12: 21, 13: $V2, 14: 14, 15: $V3, 16: $V4, 17: 17, 18: 18, 19: $V5, 22: $V6 }, { 6: $V1, 9: 22, 12: 11, 13: $V2, 14: 14, 15: $V3, 16: $V4, 17: 17, 18: 18, 19: $V5, 22: $V6 }, { 6: $V8, 7: $V9, 10: 23, 11: $Va }, o($Vb, [2, 22], { 17: 17, 18: 18, 14: 27, 15: [1, 28], 16: [1, 29], 19: $V5, 22: $V6 }), o($Vb, [2, 18]), o($Vb, [2, 19]), o($Vb, [2, 20]), o($Vb, [2, 21]), o($Vb, [2, 23]), o($Vb, [2, 24]), o($Vb, [2, 26], { 19: [1, 30] }), { 20: [1, 31] }, { 6: $V8, 7: $V9, 10: 32, 11: $Va }, { 1: [2, 7], 6: $V1, 12: 21, 13: $V2, 14: 14, 15: $V3, 16: $V4, 17: 17, 18: 18, 19: $V5, 22: $V6 }, o($Vc, [2, 14], { 7: $Vd, 11: $Ve }), o($Vf, [2, 8]), o($Vf, [2, 9]), o($Vf, [2, 10]), o($Vb, [2, 15]), o($Vb, [2, 16]), o($Vb, [2, 17]), { 20: [1, 35] }, { 21: [1, 36] }, o($Vc, [2, 13], { 7: $Vd, 11: $Ve }), o($Vf, [2, 11]), o($Vf, [2, 12]), { 21: [1, 37] }, o($Vb, [2, 25]), o($Vb, [2, 27])],\n    defaultActions: { 2: [2, 1], 6: [2, 2] },\n    parseError: function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    },\n    parse: function parse(input) {\n      var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, TERROR = 2, EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer2 = Object.create(this.lexer);\n      var sharedState = { yy: {} };\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n      lexer2.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer2;\n      sharedState.yy.parser = this;\n      if (typeof lexer2.yylloc == \"undefined\") {\n        lexer2.yylloc = {};\n      }\n      var yyloc = lexer2.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer2.options && lexer2.options.ranges;\n      if (typeof sharedState.yy.parseError === \"function\") {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n      function lex() {\n        var token;\n        token = tstack.pop() || lexer2.lex() || EOF;\n        if (typeof token !== \"number\") {\n          if (token instanceof Array) {\n            tstack = token;\n            token = tstack.pop();\n          }\n          token = self.symbols_[token] || token;\n        }\n        return token;\n      }\n      var symbol, state, action, r, yyval = {}, p, len, newState, expected;\n      while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == \"undefined\") {\n            symbol = lex();\n          }\n          action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n          var errStr = \"\";\n          expected = [];\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\n            }\n          }\n          if (lexer2.showPosition) {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n          } else {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n          }\n          this.parseError(errStr, {\n            text: lexer2.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer2.yylineno,\n            loc: yyloc,\n            expected\n          });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer2.yytext);\n            lstack.push(lexer2.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            {\n              yyleng = lexer2.yyleng;\n              yytext = lexer2.yytext;\n              yylineno = lexer2.yylineno;\n              yyloc = lexer2.yylloc;\n            }\n            break;\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n              yyval._$.range = [\n                lstack[lstack.length - (len || 1)].range[0],\n                lstack[lstack.length - 1].range[1]\n              ];\n            }\n            r = this.performAction.apply(yyval, [\n              yytext,\n              yyleng,\n              yylineno,\n              sharedState.yy,\n              action[1],\n              vstack,\n              lstack\n            ].concat(args));\n            if (typeof r !== \"undefined\") {\n              return r;\n            }\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n          case 3:\n            return true;\n        }\n      }\n      return true;\n    }\n  };\n  var lexer = function() {\n    var lexer2 = {\n      EOF: 1,\n      parseError: function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      },\n      // resets the lexer, sets new input\n      setInput: function(input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = \"\";\n        this.conditionStack = [\"INITIAL\"];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n        this.offset = 0;\n        return this;\n      },\n      // consumes and returns one char from the input\n      input: function() {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n        this._input = this._input.slice(1);\n        return ch;\n      },\n      // unshifts one char (or a string) into the input\n      unput: function(ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n      },\n      // When called from action, caches matched text and appends it on next action\n      more: function() {\n        this._more = true;\n        return this;\n      },\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: function() {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n        return this;\n      },\n      // retain first n characters of the match\n      less: function(n) {\n        this.unput(this.match.slice(n));\n      },\n      // displays already matched input, i.e. for error messages\n      pastInput: function() {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n      },\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: function() {\n        var next = this.match;\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n      },\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: function() {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      },\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: function(match, indexed_rule) {\n        var token, lines, backup;\n        if (this.options.backtrack_lexer) {\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n          this.done = false;\n        }\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n          return false;\n        }\n        return false;\n      },\n      // return next match in input\n      next: function() {\n        if (this.done) {\n          return this.EOF;\n        }\n        if (!this._input) {\n          this.done = true;\n        }\n        var token, match, tempMatch, index;\n        if (!this._more) {\n          this.yytext = \"\";\n          this.match = \"\";\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue;\n              } else {\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n        if (match) {\n          token = this.test_match(match, rules[index]);\n          if (token !== false) {\n            return token;\n          }\n          return false;\n        }\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      },\n      // return next match that has a token\n      lex: function lex() {\n        var r = this.next();\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      },\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: function begin(condition) {\n        this.conditionStack.push(condition);\n      },\n      // pop the previously active lexer condition state off the condition stack\n      popState: function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      },\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      },\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      },\n      // alias for begin(condition)\n      pushState: function pushState(condition) {\n        this.begin(condition);\n      },\n      // return the number of states currently on the stack\n      stateStackSize: function stateStackSize() {\n        return this.conditionStack.length;\n      },\n      options: { \"case-insensitive\": true },\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        switch ($avoiding_name_collisions) {\n          case 0:\n            yy.getLogger().trace(\"Found comment\", yy_.yytext);\n            return 6;\n          case 1:\n            return 8;\n          case 2:\n            this.begin(\"CLASS\");\n            break;\n          case 3:\n            this.popState();\n            return 16;\n          case 4:\n            this.popState();\n            break;\n          case 5:\n            yy.getLogger().trace(\"Begin icon\");\n            this.begin(\"ICON\");\n            break;\n          case 6:\n            yy.getLogger().trace(\"SPACELINE\");\n            return 6;\n          case 7:\n            return 7;\n          case 8:\n            return 15;\n          case 9:\n            yy.getLogger().trace(\"end icon\");\n            this.popState();\n            break;\n          case 10:\n            yy.getLogger().trace(\"Exploding node\");\n            this.begin(\"NODE\");\n            return 19;\n          case 11:\n            yy.getLogger().trace(\"Cloud\");\n            this.begin(\"NODE\");\n            return 19;\n          case 12:\n            yy.getLogger().trace(\"Explosion Bang\");\n            this.begin(\"NODE\");\n            return 19;\n          case 13:\n            yy.getLogger().trace(\"Cloud Bang\");\n            this.begin(\"NODE\");\n            return 19;\n          case 14:\n            this.begin(\"NODE\");\n            return 19;\n          case 15:\n            this.begin(\"NODE\");\n            return 19;\n          case 16:\n            this.begin(\"NODE\");\n            return 19;\n          case 17:\n            this.begin(\"NODE\");\n            return 19;\n          case 18:\n            return 13;\n          case 19:\n            return 22;\n          case 20:\n            return 11;\n          case 21:\n            this.begin(\"NSTR2\");\n            break;\n          case 22:\n            return \"NODE_DESCR\";\n          case 23:\n            this.popState();\n            break;\n          case 24:\n            yy.getLogger().trace(\"Starting NSTR\");\n            this.begin(\"NSTR\");\n            break;\n          case 25:\n            yy.getLogger().trace(\"description:\", yy_.yytext);\n            return \"NODE_DESCR\";\n          case 26:\n            this.popState();\n            break;\n          case 27:\n            this.popState();\n            yy.getLogger().trace(\"node end ))\");\n            return \"NODE_DEND\";\n          case 28:\n            this.popState();\n            yy.getLogger().trace(\"node end )\");\n            return \"NODE_DEND\";\n          case 29:\n            this.popState();\n            yy.getLogger().trace(\"node end ...\", yy_.yytext);\n            return \"NODE_DEND\";\n          case 30:\n            this.popState();\n            yy.getLogger().trace(\"node end ((\");\n            return \"NODE_DEND\";\n          case 31:\n            this.popState();\n            yy.getLogger().trace(\"node end (-\");\n            return \"NODE_DEND\";\n          case 32:\n            this.popState();\n            yy.getLogger().trace(\"node end (-\");\n            return \"NODE_DEND\";\n          case 33:\n            this.popState();\n            yy.getLogger().trace(\"node end ((\");\n            return \"NODE_DEND\";\n          case 34:\n            this.popState();\n            yy.getLogger().trace(\"node end ((\");\n            return \"NODE_DEND\";\n          case 35:\n            yy.getLogger().trace(\"Long description:\", yy_.yytext);\n            return 20;\n          case 36:\n            yy.getLogger().trace(\"Long description:\", yy_.yytext);\n            return 20;\n        }\n      },\n      rules: [/^(?:\\s*%%.*)/i, /^(?:mindmap\\b)/i, /^(?::::)/i, /^(?:.+)/i, /^(?:\\n)/i, /^(?:::icon\\()/i, /^(?:[\\s]+[\\n])/i, /^(?:[\\n]+)/i, /^(?:[^\\)]+)/i, /^(?:\\))/i, /^(?:-\\))/i, /^(?:\\(-)/i, /^(?:\\)\\))/i, /^(?:\\))/i, /^(?:\\(\\()/i, /^(?:\\{\\{)/i, /^(?:\\()/i, /^(?:\\[)/i, /^(?:[\\s]+)/i, /^(?:[^\\(\\[\\n\\)\\{\\}]+)/i, /^(?:$)/i, /^(?:[\"][`])/i, /^(?:[^`\"]+)/i, /^(?:[`][\"])/i, /^(?:[\"])/i, /^(?:[^\"]+)/i, /^(?:[\"])/i, /^(?:[\\)]\\))/i, /^(?:[\\)])/i, /^(?:[\\]])/i, /^(?:\\}\\})/i, /^(?:\\(-)/i, /^(?:-\\))/i, /^(?:\\(\\()/i, /^(?:\\()/i, /^(?:[^\\)\\]\\(\\}]+)/i, /^(?:.+(?!\\(\\())/i],\n      conditions: { \"CLASS\": { \"rules\": [3, 4], \"inclusive\": false }, \"ICON\": { \"rules\": [8, 9], \"inclusive\": false }, \"NSTR2\": { \"rules\": [22, 23], \"inclusive\": false }, \"NSTR\": { \"rules\": [25, 26], \"inclusive\": false }, \"NODE\": { \"rules\": [21, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 2, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], \"inclusive\": true } }\n    };\n    return lexer2;\n  }();\n  parser2.lexer = lexer;\n  function Parser() {\n    this.yy = {};\n  }\n  Parser.prototype = parser2;\n  parser2.Parser = Parser;\n  return new Parser();\n}();\nparser.parser = parser;\nconst parser$1 = parser;\nlet nodes = [];\nlet cnt = 0;\nlet elements = {};\nconst clear = () => {\n  nodes = [];\n  cnt = 0;\n  elements = {};\n};\nconst getParent = function(level) {\n  for (let i = nodes.length - 1; i >= 0; i--) {\n    if (nodes[i].level < level) {\n      return nodes[i];\n    }\n  }\n  return null;\n};\nconst getMindmap = () => {\n  return nodes.length > 0 ? nodes[0] : null;\n};\nconst addNode = (level, id, descr, type) => {\n  var _a, _b;\n  log.info(\"addNode\", level, id, descr, type);\n  const conf = getConfig();\n  let padding = ((_a = conf.mindmap) == null ? void 0 : _a.padding) ?? defaultConfig.mindmap.padding;\n  switch (type) {\n    case nodeType.ROUNDED_RECT:\n    case nodeType.RECT:\n    case nodeType.HEXAGON:\n      padding *= 2;\n  }\n  const node = {\n    id: cnt++,\n    nodeId: sanitizeText(id, conf),\n    level,\n    descr: sanitizeText(descr, conf),\n    type,\n    children: [],\n    width: ((_b = conf.mindmap) == null ? void 0 : _b.maxNodeWidth) ?? defaultConfig.mindmap.maxNodeWidth,\n    padding\n  };\n  const parent = getParent(level);\n  if (parent) {\n    parent.children.push(node);\n    nodes.push(node);\n  } else {\n    if (nodes.length === 0) {\n      nodes.push(node);\n    } else {\n      throw new Error(\n        'There can be only one root. No parent could be found for (\"' + node.descr + '\")'\n      );\n    }\n  }\n};\nconst nodeType = {\n  DEFAULT: 0,\n  NO_BORDER: 0,\n  ROUNDED_RECT: 1,\n  RECT: 2,\n  CIRCLE: 3,\n  CLOUD: 4,\n  BANG: 5,\n  HEXAGON: 6\n};\nconst getType = (startStr, endStr) => {\n  log.debug(\"In get type\", startStr, endStr);\n  switch (startStr) {\n    case \"[\":\n      return nodeType.RECT;\n    case \"(\":\n      return endStr === \")\" ? nodeType.ROUNDED_RECT : nodeType.CLOUD;\n    case \"((\":\n      return nodeType.CIRCLE;\n    case \")\":\n      return nodeType.CLOUD;\n    case \"))\":\n      return nodeType.BANG;\n    case \"{{\":\n      return nodeType.HEXAGON;\n    default:\n      return nodeType.DEFAULT;\n  }\n};\nconst setElementForId = (id, element) => {\n  elements[id] = element;\n};\nconst decorateNode = (decoration) => {\n  if (!decoration) {\n    return;\n  }\n  const config = getConfig();\n  const node = nodes[nodes.length - 1];\n  if (decoration.icon) {\n    node.icon = sanitizeText(decoration.icon, config);\n  }\n  if (decoration.class) {\n    node.class = sanitizeText(decoration.class, config);\n  }\n};\nconst type2Str = (type) => {\n  switch (type) {\n    case nodeType.DEFAULT:\n      return \"no-border\";\n    case nodeType.RECT:\n      return \"rect\";\n    case nodeType.ROUNDED_RECT:\n      return \"rounded-rect\";\n    case nodeType.CIRCLE:\n      return \"circle\";\n    case nodeType.CLOUD:\n      return \"cloud\";\n    case nodeType.BANG:\n      return \"bang\";\n    case nodeType.HEXAGON:\n      return \"hexgon\";\n    default:\n      return \"no-border\";\n  }\n};\nconst getLogger = () => log;\nconst getElementById = (id) => elements[id];\nconst db = {\n  clear,\n  addNode,\n  getMindmap,\n  nodeType,\n  getType,\n  setElementForId,\n  decorateNode,\n  type2Str,\n  getLogger,\n  getElementById\n};\nconst db$1 = db;\nconst MAX_SECTIONS = 12;\nconst defaultBkg = function(db2, elem, node, section) {\n  const rd = 5;\n  elem.append(\"path\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + db2.type2Str(node.type)).attr(\n    \"d\",\n    `M0 ${node.height - rd} v${-node.height + 2 * rd} q0,-5 5,-5 h${node.width - 2 * rd} q5,0 5,5 v${node.height - rd} H0 Z`\n  );\n  elem.append(\"line\").attr(\"class\", \"node-line-\" + section).attr(\"x1\", 0).attr(\"y1\", node.height).attr(\"x2\", node.width).attr(\"y2\", node.height);\n};\nconst rectBkg = function(db2, elem, node) {\n  elem.append(\"rect\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + db2.type2Str(node.type)).attr(\"height\", node.height).attr(\"width\", node.width);\n};\nconst cloudBkg = function(db2, elem, node) {\n  const w = node.width;\n  const h = node.height;\n  const r1 = 0.15 * w;\n  const r2 = 0.25 * w;\n  const r3 = 0.35 * w;\n  const r4 = 0.2 * w;\n  elem.append(\"path\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + db2.type2Str(node.type)).attr(\n    \"d\",\n    `M0 0 a${r1},${r1} 0 0,1 ${w * 0.25},${-1 * w * 0.1}\n      a${r3},${r3} 1 0,1 ${w * 0.4},${-1 * w * 0.1}\n      a${r2},${r2} 1 0,1 ${w * 0.35},${1 * w * 0.2}\n\n      a${r1},${r1} 1 0,1 ${w * 0.15},${1 * h * 0.35}\n      a${r4},${r4} 1 0,1 ${-1 * w * 0.15},${1 * h * 0.65}\n\n      a${r2},${r1} 1 0,1 ${-1 * w * 0.25},${w * 0.15}\n      a${r3},${r3} 1 0,1 ${-1 * w * 0.5},${0}\n      a${r1},${r1} 1 0,1 ${-1 * w * 0.25},${-1 * w * 0.15}\n\n      a${r1},${r1} 1 0,1 ${-1 * w * 0.1},${-1 * h * 0.35}\n      a${r4},${r4} 1 0,1 ${w * 0.1},${-1 * h * 0.65}\n\n    H0 V0 Z`\n  );\n};\nconst bangBkg = function(db2, elem, node) {\n  const w = node.width;\n  const h = node.height;\n  const r = 0.15 * w;\n  elem.append(\"path\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + db2.type2Str(node.type)).attr(\n    \"d\",\n    `M0 0 a${r},${r} 1 0,0 ${w * 0.25},${-1 * h * 0.1}\n      a${r},${r} 1 0,0 ${w * 0.25},${0}\n      a${r},${r} 1 0,0 ${w * 0.25},${0}\n      a${r},${r} 1 0,0 ${w * 0.25},${1 * h * 0.1}\n\n      a${r},${r} 1 0,0 ${w * 0.15},${1 * h * 0.33}\n      a${r * 0.8},${r * 0.8} 1 0,0 ${0},${1 * h * 0.34}\n      a${r},${r} 1 0,0 ${-1 * w * 0.15},${1 * h * 0.33}\n\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${h * 0.15}\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${0}\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${0}\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${-1 * h * 0.15}\n\n      a${r},${r} 1 0,0 ${-1 * w * 0.1},${-1 * h * 0.33}\n      a${r * 0.8},${r * 0.8} 1 0,0 ${0},${-1 * h * 0.34}\n      a${r},${r} 1 0,0 ${w * 0.1},${-1 * h * 0.33}\n\n    H0 V0 Z`\n  );\n};\nconst circleBkg = function(db2, elem, node) {\n  elem.append(\"circle\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + db2.type2Str(node.type)).attr(\"r\", node.width / 2);\n};\nfunction insertPolygonShape(parent, w, h, points, node) {\n  return parent.insert(\"polygon\", \":first-child\").attr(\n    \"points\",\n    points.map(function(d) {\n      return d.x + \",\" + d.y;\n    }).join(\" \")\n  ).attr(\"transform\", \"translate(\" + (node.width - w) / 2 + \", \" + h + \")\");\n}\nconst hexagonBkg = function(_db, elem, node) {\n  const h = node.height;\n  const f = 4;\n  const m = h / f;\n  const w = node.width - node.padding + 2 * m;\n  const points = [\n    { x: m, y: 0 },\n    { x: w - m, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w - m, y: -h },\n    { x: m, y: -h },\n    { x: 0, y: -h / 2 }\n  ];\n  insertPolygonShape(elem, w, h, points, node);\n};\nconst roundedRectBkg = function(db2, elem, node) {\n  elem.append(\"rect\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + db2.type2Str(node.type)).attr(\"height\", node.height).attr(\"rx\", node.padding).attr(\"ry\", node.padding).attr(\"width\", node.width);\n};\nconst drawNode = function(db2, elem, node, fullSection, conf) {\n  const htmlLabels = conf.htmlLabels;\n  const section = fullSection % (MAX_SECTIONS - 1);\n  const nodeElem = elem.append(\"g\");\n  node.section = section;\n  let sectionClass = \"section-\" + section;\n  if (section < 0) {\n    sectionClass += \" section-root\";\n  }\n  nodeElem.attr(\"class\", (node.class ? node.class + \" \" : \"\") + \"mindmap-node \" + sectionClass);\n  const bkgElem = nodeElem.append(\"g\");\n  const textElem = nodeElem.append(\"g\");\n  const description = node.descr.replace(/(<br\\/*>)/g, \"\\n\");\n  createText(textElem, description, {\n    useHtmlLabels: htmlLabels,\n    width: node.width,\n    classes: \"mindmap-node-label\"\n  });\n  if (!htmlLabels) {\n    textElem.attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\");\n  }\n  const bbox = textElem.node().getBBox();\n  const [fontSize] = parseFontSize(conf.fontSize);\n  node.height = bbox.height + fontSize * 1.1 * 0.5 + node.padding;\n  node.width = bbox.width + 2 * node.padding;\n  if (node.icon) {\n    if (node.type === db2.nodeType.CIRCLE) {\n      node.height += 50;\n      node.width += 50;\n      const icon = nodeElem.append(\"foreignObject\").attr(\"height\", \"50px\").attr(\"width\", node.width).attr(\"style\", \"text-align: center;\");\n      icon.append(\"div\").attr(\"class\", \"icon-container\").append(\"i\").attr(\"class\", \"node-icon-\" + section + \" \" + node.icon);\n      textElem.attr(\n        \"transform\",\n        \"translate(\" + node.width / 2 + \", \" + (node.height / 2 - 1.5 * node.padding) + \")\"\n      );\n    } else {\n      node.width += 50;\n      const orgHeight = node.height;\n      node.height = Math.max(orgHeight, 60);\n      const heightDiff = Math.abs(node.height - orgHeight);\n      const icon = nodeElem.append(\"foreignObject\").attr(\"width\", \"60px\").attr(\"height\", node.height).attr(\"style\", \"text-align: center;margin-top:\" + heightDiff / 2 + \"px;\");\n      icon.append(\"div\").attr(\"class\", \"icon-container\").append(\"i\").attr(\"class\", \"node-icon-\" + section + \" \" + node.icon);\n      textElem.attr(\n        \"transform\",\n        \"translate(\" + (25 + node.width / 2) + \", \" + (heightDiff / 2 + node.padding / 2) + \")\"\n      );\n    }\n  } else {\n    if (!htmlLabels) {\n      const dx = node.width / 2;\n      const dy = node.padding / 2;\n      textElem.attr(\"transform\", \"translate(\" + dx + \", \" + dy + \")\");\n    } else {\n      const dx = (node.width - bbox.width) / 2;\n      const dy = (node.height - bbox.height) / 2;\n      textElem.attr(\"transform\", \"translate(\" + dx + \", \" + dy + \")\");\n    }\n  }\n  switch (node.type) {\n    case db2.nodeType.DEFAULT:\n      defaultBkg(db2, bkgElem, node, section);\n      break;\n    case db2.nodeType.ROUNDED_RECT:\n      roundedRectBkg(db2, bkgElem, node);\n      break;\n    case db2.nodeType.RECT:\n      rectBkg(db2, bkgElem, node);\n      break;\n    case db2.nodeType.CIRCLE:\n      bkgElem.attr(\"transform\", \"translate(\" + node.width / 2 + \", \" + +node.height / 2 + \")\");\n      circleBkg(db2, bkgElem, node);\n      break;\n    case db2.nodeType.CLOUD:\n      cloudBkg(db2, bkgElem, node);\n      break;\n    case db2.nodeType.BANG:\n      bangBkg(db2, bkgElem, node);\n      break;\n    case db2.nodeType.HEXAGON:\n      hexagonBkg(db2, bkgElem, node);\n      break;\n  }\n  db2.setElementForId(node.id, nodeElem);\n  return node.height;\n};\nconst positionNode = function(db2, node) {\n  const nodeElem = db2.getElementById(node.id);\n  const x = node.x || 0;\n  const y = node.y || 0;\n  nodeElem.attr(\"transform\", \"translate(\" + x + \",\" + y + \")\");\n};\ncytoscape.use(coseBilkent);\nfunction drawNodes(db2, svg, mindmap, section, conf) {\n  drawNode(db2, svg, mindmap, section, conf);\n  if (mindmap.children) {\n    mindmap.children.forEach((child, index) => {\n      drawNodes(db2, svg, child, section < 0 ? index : section, conf);\n    });\n  }\n}\nfunction drawEdges(edgesEl, cy) {\n  cy.edges().map((edge, id) => {\n    const data = edge.data();\n    if (edge[0]._private.bodyBounds) {\n      const bounds = edge[0]._private.rscratch;\n      log.trace(\"Edge: \", id, data);\n      edgesEl.insert(\"path\").attr(\n        \"d\",\n        `M ${bounds.startX},${bounds.startY} L ${bounds.midX},${bounds.midY} L${bounds.endX},${bounds.endY} `\n      ).attr(\"class\", \"edge section-edge-\" + data.section + \" edge-depth-\" + data.depth);\n    }\n  });\n}\nfunction addNodes(mindmap, cy, conf, level) {\n  cy.add({\n    group: \"nodes\",\n    data: {\n      id: mindmap.id.toString(),\n      labelText: mindmap.descr,\n      height: mindmap.height,\n      width: mindmap.width,\n      level,\n      nodeId: mindmap.id,\n      padding: mindmap.padding,\n      type: mindmap.type\n    },\n    position: {\n      x: mindmap.x,\n      y: mindmap.y\n    }\n  });\n  if (mindmap.children) {\n    mindmap.children.forEach((child) => {\n      addNodes(child, cy, conf, level + 1);\n      cy.add({\n        group: \"edges\",\n        data: {\n          id: `${mindmap.id}_${child.id}`,\n          source: mindmap.id,\n          target: child.id,\n          depth: level,\n          section: child.section\n        }\n      });\n    });\n  }\n}\nfunction layoutMindmap(node, conf) {\n  return new Promise((resolve) => {\n    const renderEl = select(\"body\").append(\"div\").attr(\"id\", \"cy\").attr(\"style\", \"display:none\");\n    const cy = cytoscape({\n      container: document.getElementById(\"cy\"),\n      // container to render in\n      style: [\n        {\n          selector: \"edge\",\n          style: {\n            \"curve-style\": \"bezier\"\n          }\n        }\n      ]\n    });\n    renderEl.remove();\n    addNodes(node, cy, conf, 0);\n    cy.nodes().forEach(function(n) {\n      n.layoutDimensions = () => {\n        const data = n.data();\n        return { w: data.width, h: data.height };\n      };\n    });\n    cy.layout({\n      name: \"cose-bilkent\",\n      // @ts-ignore Types for cose-bilkent are not correct?\n      quality: \"proof\",\n      styleEnabled: false,\n      animate: false\n    }).run();\n    cy.ready((e) => {\n      log.info(\"Ready\", e);\n      resolve(cy);\n    });\n  });\n}\nfunction positionNodes(db2, cy) {\n  cy.nodes().map((node, id) => {\n    const data = node.data();\n    data.x = node.position().x;\n    data.y = node.position().y;\n    positionNode(db2, data);\n    const el = db2.getElementById(data.nodeId);\n    log.info(\"Id:\", id, \"Position: (\", node.position().x, \", \", node.position().y, \")\", data);\n    el.attr(\n      \"transform\",\n      `translate(${node.position().x - data.width / 2}, ${node.position().y - data.height / 2})`\n    );\n    el.attr(\"attr\", `apa-${id})`);\n  });\n}\nconst draw = async (text, id, _version, diagObj) => {\n  var _a, _b;\n  log.debug(\"Rendering mindmap diagram\\n\" + text);\n  const db2 = diagObj.db;\n  const mm = db2.getMindmap();\n  if (!mm) {\n    return;\n  }\n  const conf = getConfig();\n  conf.htmlLabels = false;\n  const svg = selectSvgElement(id);\n  const edgesElem = svg.append(\"g\");\n  edgesElem.attr(\"class\", \"mindmap-edges\");\n  const nodesElem = svg.append(\"g\");\n  nodesElem.attr(\"class\", \"mindmap-nodes\");\n  drawNodes(db2, nodesElem, mm, -1, conf);\n  const cy = await layoutMindmap(mm, conf);\n  drawEdges(edgesElem, cy);\n  positionNodes(db2, cy);\n  setupGraphViewbox(\n    void 0,\n    svg,\n    ((_a = conf.mindmap) == null ? void 0 : _a.padding) ?? defaultConfig.mindmap.padding,\n    ((_b = conf.mindmap) == null ? void 0 : _b.useMaxWidth) ?? defaultConfig.mindmap.useMaxWidth\n  );\n};\nconst renderer = {\n  draw\n};\nconst genSections = (options) => {\n  let sections = \"\";\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    options[\"lineColor\" + i] = options[\"lineColor\" + i] || options[\"cScaleInv\" + i];\n    if (isDark(options[\"lineColor\" + i])) {\n      options[\"lineColor\" + i] = lighten(options[\"lineColor\" + i], 20);\n    } else {\n      options[\"lineColor\" + i] = darken(options[\"lineColor\" + i], 20);\n    }\n  }\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    const sw = \"\" + (17 - 3 * i);\n    sections += `\n    .section-${i - 1} rect, .section-${i - 1} path, .section-${i - 1} circle, .section-${i - 1} polygon, .section-${i - 1} path  {\n      fill: ${options[\"cScale\" + i]};\n    }\n    .section-${i - 1} text {\n     fill: ${options[\"cScaleLabel\" + i]};\n    }\n    .node-icon-${i - 1} {\n      font-size: 40px;\n      color: ${options[\"cScaleLabel\" + i]};\n    }\n    .section-edge-${i - 1}{\n      stroke: ${options[\"cScale\" + i]};\n    }\n    .edge-depth-${i - 1}{\n      stroke-width: ${sw};\n    }\n    .section-${i - 1} line {\n      stroke: ${options[\"cScaleInv\" + i]} ;\n      stroke-width: 3;\n    }\n\n    .disabled, .disabled circle, .disabled text {\n      fill: lightgray;\n    }\n    .disabled text {\n      fill: #efefef;\n    }\n    `;\n  }\n  return sections;\n};\nconst getStyles = (options) => `\n  .edge {\n    stroke-width: 3;\n  }\n  ${genSections(options)}\n  .section-root rect, .section-root path, .section-root circle, .section-root polygon  {\n    fill: ${options.git0};\n  }\n  .section-root text {\n    fill: ${options.gitBranchLabel0};\n  }\n  .icon-container {\n    height:100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .edge {\n    fill: none;\n  }\n  .mindmap-node-label {\n    dy: 1em;\n    alignment-baseline: middle;\n    text-anchor: middle;\n    dominant-baseline: middle;\n    text-align: center;\n  }\n`;\nconst styles = getStyles;\nconst diagram = {\n  db: db$1,\n  renderer,\n  parser: parser$1,\n  styles\n};\nexport {\n  diagram\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}