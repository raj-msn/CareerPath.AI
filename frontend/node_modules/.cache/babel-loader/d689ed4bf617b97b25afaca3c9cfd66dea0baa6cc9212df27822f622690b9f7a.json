{"ast":null,"code":"var _jsxFileName = \"/Users/anasshaik/Desktop/Projects/CareerPath.AI/frontend/src/components/CareerRoadmapFlow.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { ReactFlow, MiniMap, Controls, Background, useNodesState, useEdgesState, addEdge, Position, MarkerType } from 'reactflow';\nimport 'reactflow/dist/style.css';\n\n// Custom node types for different phases\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhaseNode = ({\n  data,\n  selected\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `px-4 py-3 shadow-lg rounded-lg border-2 transition-all duration-200 min-w-48 max-w-64 ${selected ? 'border-primary-500 shadow-primary-200' : 'border-gray-300 hover:border-primary-300'} ${data.type === 'start' ? 'bg-green-50 border-green-300' : data.type === 'end' ? 'bg-blue-50 border-blue-300' : 'bg-white'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center space-x-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-lg\",\n        children: data.emoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-semibold text-sm text-gray-800\",\n          children: data.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), data.duration && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-500\",\n          children: data.duration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), data.description && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 pt-2 border-t border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-600\",\n        children: data.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), data.skills && data.skills.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 pt-2 border-t border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-600\",\n        children: [data.skills.slice(0, 3).map((skill, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"inline-block bg-gray-100 px-2 py-1 rounded mr-1 mb-1 text-xs\",\n          children: skill\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)), data.skills.length > 3 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-400 text-xs\",\n          children: [\"+\", data.skills.length - 3, \" more\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom edge with progress indicator\n_c = PhaseNode;\nconst nodeTypes = {\n  phaseNode: PhaseNode\n};\nconst CareerRoadmapFlow = ({\n  learningPath,\n  className = ''\n}) => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [selectedNode, setSelectedNode] = useState(null);\n\n  // Remove defaultEdgeOptions to avoid conflicts\n\n  // Convert learning path data to React Flow nodes and edges\n  useEffect(() => {\n    if (!learningPath || !learningPath.learning_phases) {\n      // Default roadmap when no data\n      const defaultNodes = [{\n        id: 'start',\n        type: 'phaseNode',\n        position: {\n          x: 50,\n          y: 50\n        },\n        data: {\n          label: 'Start Your Journey',\n          emoji: '🚀',\n          type: 'start'\n        }\n      }, {\n        id: 'end',\n        type: 'phaseNode',\n        position: {\n          x: 50,\n          y: 200\n        },\n        data: {\n          label: 'Achieve Your Goal',\n          emoji: '🎯',\n          type: 'end'\n        }\n      }];\n      const defaultEdges = [{\n        id: 'start-end',\n        source: 'start',\n        target: 'end',\n        animated: true,\n        style: {\n          stroke: '#3b82f6',\n          strokeWidth: 2\n        },\n        markerEnd: {\n          type: MarkerType.ArrowClosed,\n          width: 25,\n          height: 25,\n          color: '#3b82f6'\n        }\n      }];\n      setNodes(defaultNodes);\n      setEdges(defaultEdges);\n      return;\n    }\n\n    // Generate nodes from learning phases\n    const phaseNodes = [];\n    const phaseEdges = [];\n    const phases = learningPath.learning_phases;\n    console.log('🎨 REACT FLOW: Generating nodes from learning path:', {\n      phases_count: phases.length,\n      timeline: learningPath.timeline,\n      has_changes: !!learningPath.changes_made\n    });\n\n    // Start node\n    phaseNodes.push({\n      id: 'start',\n      type: 'phaseNode',\n      position: {\n        x: 50,\n        y: 50\n      },\n      data: {\n        label: 'Current Role',\n        emoji: '👨‍💻',\n        type: 'start'\n      }\n    });\n\n    // Phase nodes - with improved positioning\n    const nodeSpacing = 140; // Increased spacing for better readability\n    phases.forEach((phase, index) => {\n      phaseNodes.push({\n        id: `phase-${index}`,\n        type: 'phaseNode',\n        position: {\n          x: 50,\n          y: 150 + index * nodeSpacing\n        },\n        data: {\n          label: phase.phase || `Phase ${index + 1}`,\n          duration: phase.duration,\n          skills: phase.skills || [],\n          description: phase.description,\n          emoji: ['📚', '🎓', '🏆', '⭐', '🚀', '💡'][index % 6]\n        }\n      });\n\n      // Edge from previous node - Blue arrows show learning progression\n      const sourceId = index === 0 ? 'start' : `phase-${index - 1}`;\n      phaseEdges.push({\n        id: `edge-${index}`,\n        source: sourceId,\n        target: `phase-${index}`,\n        animated: true,\n        style: {\n          stroke: '#3b82f6',\n          strokeWidth: 2\n        },\n        markerEnd: {\n          type: MarkerType.ArrowClosed,\n          width: 20,\n          height: 20,\n          color: '#3b82f6'\n        }\n      });\n    });\n\n    // End node\n    phaseNodes.push({\n      id: 'end',\n      type: 'phaseNode',\n      position: {\n        x: 50,\n        y: 150 + phases.length * nodeSpacing\n      },\n      data: {\n        label: 'Target Role',\n        emoji: '🎯',\n        type: 'end'\n      }\n    });\n\n    // Final edge - Green arrow shows goal achievement\n    phaseEdges.push({\n      id: `edge-final`,\n      source: phases.length > 0 ? `phase-${phases.length - 1}` : 'start',\n      target: 'end',\n      animated: true,\n      style: {\n        stroke: '#10b981',\n        strokeWidth: 3\n      },\n      markerEnd: {\n        type: MarkerType.ArrowClosed,\n        width: 25,\n        height: 25,\n        color: '#10b981'\n      }\n    });\n\n    // Update with smooth transitions\n    setNodes(prevNodes => {\n      // If this is an update and we have previous nodes, try to preserve positions\n      if (prevNodes.length > 2) {\n        // More than just start/end\n        const nodeMap = new Map(prevNodes.map(node => [node.id, node]));\n        return phaseNodes.map(newNode => {\n          const existingNode = nodeMap.get(newNode.id);\n          if (existingNode) {\n            // Preserve position and any user interactions\n            return {\n              ...newNode,\n              position: existingNode.position\n            };\n          }\n          return newNode;\n        });\n      }\n      return phaseNodes;\n    });\n    setEdges(phaseEdges);\n\n    // Log the update for debugging\n    console.log('🎨 REACT FLOW: Updated with', phaseNodes.length, 'nodes and', phaseEdges.length, 'edges');\n  }, [learningPath]);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  const onNodeClick = useCallback((event, node) => {\n    setSelectedNode(node);\n  }, []);\n  if (!learningPath) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex items-center justify-center p-8 text-gray-500 ${className}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-4xl mb-2\",\n          children: \"\\uD83D\\uDDFA\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg font-medium\",\n          children: \"Interactive Career Roadmap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm\",\n          children: \"Start a conversation to generate your personalized path!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `w-full h-full ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      onNodeClick: onNodeClick,\n      nodeTypes: nodeTypes,\n      defaultEdgeOptions: defaultEdgeOptions,\n      fitView: true,\n      fitViewOptions: {\n        padding: 0.2\n      },\n      attributionPosition: \"bottom-left\",\n      children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {\n        nodeStrokeColor: n => n.type === 'input' ? '#10b981' : '#3b82f6',\n        nodeColor: n => n.data.type === 'start' ? '#dcfce7' : n.data.type === 'end' ? '#dbeafe' : '#f9fafb',\n        nodeBorderRadius: 8,\n        className: \"!bg-gray-50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        variant: \"dots\",\n        gap: 12,\n        size: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 right-4 w-64 bg-white rounded-lg shadow-lg border p-4 z-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-start mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold text-gray-800\",\n          children: selectedNode.data.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedNode(null),\n          className: \"text-gray-400 hover:text-gray-600\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), selectedNode.data.duration && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Duration:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }, this), \" \", selectedNode.data.duration]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 13\n      }, this), selectedNode.data.skills && selectedNode.data.skills.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm font-medium text-gray-700 mb-2\",\n          children: \"Skills to develop:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-1\",\n          children: selectedNode.data.skills.map((skill, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inline-block bg-primary-100 text-primary-800 px-2 py-1 rounded text-xs mr-1\",\n            children: skill\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n};\n_s(CareerRoadmapFlow, \"UFIIiIZTel7Vgnd4zrLdJ9SGkG0=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c2 = CareerRoadmapFlow;\nexport default CareerRoadmapFlow;\nvar _c, _c2;\n$RefreshReg$(_c, \"PhaseNode\");\n$RefreshReg$(_c2, \"CareerRoadmapFlow\");","map":{"version":3,"names":["React","useCallback","useState","useEffect","ReactFlow","MiniMap","Controls","Background","useNodesState","useEdgesState","addEdge","Position","MarkerType","jsxDEV","_jsxDEV","PhaseNode","data","selected","className","type","children","emoji","fileName","_jsxFileName","lineNumber","columnNumber","label","duration","description","skills","length","slice","map","skill","idx","_c","nodeTypes","phaseNode","CareerRoadmapFlow","learningPath","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","selectedNode","setSelectedNode","learning_phases","defaultNodes","id","position","x","y","defaultEdges","source","target","animated","style","stroke","strokeWidth","markerEnd","ArrowClosed","width","height","color","phaseNodes","phaseEdges","phases","console","log","phases_count","timeline","has_changes","changes_made","push","nodeSpacing","forEach","phase","index","sourceId","prevNodes","nodeMap","Map","node","newNode","existingNode","get","onConnect","params","eds","onNodeClick","event","defaultEdgeOptions","fitView","fitViewOptions","padding","attributionPosition","nodeStrokeColor","n","nodeColor","nodeBorderRadius","variant","gap","size","onClick","_c2","$RefreshReg$"],"sources":["/Users/anasshaik/Desktop/Projects/CareerPath.AI/frontend/src/components/CareerRoadmapFlow.js"],"sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\nimport {\n  ReactFlow,\n  MiniMap,\n  Controls,\n  Background,\n  useNodesState,\n  useEdgesState,\n  addEdge,\n  Position,\n  MarkerType,\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\n\n// Custom node types for different phases\nconst PhaseNode = ({ data, selected }) => {\n  return (\n    <div className={`px-4 py-3 shadow-lg rounded-lg border-2 transition-all duration-200 min-w-48 max-w-64 ${\n      selected \n        ? 'border-primary-500 shadow-primary-200' \n        : 'border-gray-300 hover:border-primary-300'\n    } ${data.type === 'start' ? 'bg-green-50 border-green-300' : \n         data.type === 'end' ? 'bg-blue-50 border-blue-300' : \n         'bg-white'}`}>\n      \n      <div className=\"flex items-center space-x-2\">\n        <div className=\"text-lg\">{data.emoji}</div>\n        <div className=\"flex-1\">\n          <div className=\"font-semibold text-sm text-gray-800\">{data.label}</div>\n          {data.duration && (\n            <div className=\"text-xs text-gray-500\">{data.duration}</div>\n          )}\n        </div>\n      </div>\n      \n      {data.description && (\n        <div className=\"mt-2 pt-2 border-t border-gray-200\">\n          <div className=\"text-xs text-gray-600\">{data.description}</div>\n        </div>\n      )}\n      \n      {data.skills && data.skills.length > 0 && (\n        <div className=\"mt-2 pt-2 border-t border-gray-200\">\n          <div className=\"text-xs text-gray-600\">\n            {data.skills.slice(0, 3).map((skill, idx) => (\n              <span key={idx} className=\"inline-block bg-gray-100 px-2 py-1 rounded mr-1 mb-1 text-xs\">\n                {skill}\n              </span>\n            ))}\n            {data.skills.length > 3 && (\n              <span className=\"text-gray-400 text-xs\">+{data.skills.length - 3} more</span>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Custom edge with progress indicator\nconst nodeTypes = {\n  phaseNode: PhaseNode,\n};\n\nconst CareerRoadmapFlow = ({ learningPath, className = '' }) => {\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [selectedNode, setSelectedNode] = useState(null);\n\n  // Remove defaultEdgeOptions to avoid conflicts\n\n  // Convert learning path data to React Flow nodes and edges\n  useEffect(() => {\n    if (!learningPath || !learningPath.learning_phases) {\n      // Default roadmap when no data\n      const defaultNodes = [\n        {\n          id: 'start',\n          type: 'phaseNode',\n          position: { x: 50, y: 50 },\n          data: { \n            label: 'Start Your Journey', \n            emoji: '🚀',\n            type: 'start'\n          },\n        },\n        {\n          id: 'end',\n          type: 'phaseNode', \n          position: { x: 50, y: 200 },\n          data: { \n            label: 'Achieve Your Goal', \n            emoji: '🎯',\n            type: 'end'\n          },\n        },\n      ];\n\n      const defaultEdges = [\n        {\n          id: 'start-end',\n          source: 'start',\n          target: 'end',\n          animated: true,\n          style: { stroke: '#3b82f6', strokeWidth: 2 },\n          markerEnd: {\n            type: MarkerType.ArrowClosed,\n            width: 25,\n            height: 25,\n            color: '#3b82f6',\n          },\n        },\n      ];\n\n      setNodes(defaultNodes);\n      setEdges(defaultEdges);\n      return;\n    }\n\n    // Generate nodes from learning phases\n    const phaseNodes = [];\n    const phaseEdges = [];\n    const phases = learningPath.learning_phases;\n    \n    console.log('🎨 REACT FLOW: Generating nodes from learning path:', {\n      phases_count: phases.length,\n      timeline: learningPath.timeline,\n      has_changes: !!learningPath.changes_made\n    });\n    \n    // Start node\n    phaseNodes.push({\n      id: 'start',\n      type: 'phaseNode',\n      position: { x: 50, y: 50 },\n      data: { \n        label: 'Current Role', \n        emoji: '👨‍💻',\n        type: 'start'\n      },\n    });\n\n    // Phase nodes - with improved positioning\n    const nodeSpacing = 140; // Increased spacing for better readability\n    phases.forEach((phase, index) => {\n      phaseNodes.push({\n        id: `phase-${index}`,\n        type: 'phaseNode',\n        position: { x: 50, y: 150 + (index * nodeSpacing) },\n        data: {\n          label: phase.phase || `Phase ${index + 1}`,\n          duration: phase.duration,\n          skills: phase.skills || [],\n          description: phase.description,\n          emoji: ['📚', '🎓', '🏆', '⭐', '🚀', '💡'][index % 6],\n        },\n      });\n\n      // Edge from previous node - Blue arrows show learning progression\n      const sourceId = index === 0 ? 'start' : `phase-${index - 1}`;\n      phaseEdges.push({\n        id: `edge-${index}`,\n        source: sourceId,\n        target: `phase-${index}`,\n        animated: true,\n        style: { stroke: '#3b82f6', strokeWidth: 2 },\n        markerEnd: {\n          type: MarkerType.ArrowClosed,\n          width: 20,\n          height: 20,\n          color: '#3b82f6',\n        },\n      });\n    });\n\n    // End node\n    phaseNodes.push({\n      id: 'end',\n      type: 'phaseNode',\n      position: { x: 50, y: 150 + (phases.length * nodeSpacing) },\n      data: { \n        label: 'Target Role', \n        emoji: '🎯',\n        type: 'end'\n      },\n    });\n\n    // Final edge - Green arrow shows goal achievement\n    phaseEdges.push({\n      id: `edge-final`,\n      source: phases.length > 0 ? `phase-${phases.length - 1}` : 'start',\n      target: 'end',\n      animated: true,\n      style: { stroke: '#10b981', strokeWidth: 3 },\n      markerEnd: {\n        type: MarkerType.ArrowClosed,\n        width: 25,\n        height: 25,\n        color: '#10b981',\n      },\n    });\n\n    // Update with smooth transitions\n    setNodes((prevNodes) => {\n      // If this is an update and we have previous nodes, try to preserve positions\n      if (prevNodes.length > 2) { // More than just start/end\n        const nodeMap = new Map(prevNodes.map(node => [node.id, node]));\n        return phaseNodes.map(newNode => {\n          const existingNode = nodeMap.get(newNode.id);\n          if (existingNode) {\n            // Preserve position and any user interactions\n            return {\n              ...newNode,\n              position: existingNode.position,\n            };\n          }\n          return newNode;\n        });\n      }\n      return phaseNodes;\n    });\n    \n    setEdges(phaseEdges);\n    \n    // Log the update for debugging\n    console.log('🎨 REACT FLOW: Updated with', phaseNodes.length, 'nodes and', phaseEdges.length, 'edges');\n    \n  }, [learningPath]);\n\n  const onConnect = useCallback(\n    (params) => setEdges((eds) => addEdge(params, eds)),\n    [setEdges]\n  );\n\n  const onNodeClick = useCallback((event, node) => {\n    setSelectedNode(node);\n  }, []);\n\n  if (!learningPath) {\n    return (\n      <div className={`flex items-center justify-center p-8 text-gray-500 ${className}`}>\n        <div className=\"text-center\">\n          <div className=\"text-4xl mb-2\">🗺️</div>\n          <p className=\"text-lg font-medium\">Interactive Career Roadmap</p>\n          <p className=\"text-sm\">Start a conversation to generate your personalized path!</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`w-full h-full ${className}`}>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        onNodeClick={onNodeClick}\n        nodeTypes={nodeTypes}\n        defaultEdgeOptions={defaultEdgeOptions}\n        fitView\n        fitViewOptions={{ padding: 0.2 }}\n        attributionPosition=\"bottom-left\"\n      >\n        <Controls />\n        <MiniMap \n          nodeStrokeColor={(n) => n.type === 'input' ? '#10b981' : '#3b82f6'}\n          nodeColor={(n) => n.data.type === 'start' ? '#dcfce7' : \n                           n.data.type === 'end' ? '#dbeafe' : '#f9fafb'}\n          nodeBorderRadius={8}\n          className=\"!bg-gray-50\"\n        />\n        <Background variant=\"dots\" gap={12} size={1} />\n      </ReactFlow>\n\n      {/* Side panel for selected node details */}\n      {selectedNode && (\n        <div className=\"absolute top-4 right-4 w-64 bg-white rounded-lg shadow-lg border p-4 z-10\">\n          <div className=\"flex justify-between items-start mb-3\">\n            <h3 className=\"font-semibold text-gray-800\">{selectedNode.data.label}</h3>\n            <button \n              onClick={() => setSelectedNode(null)}\n              className=\"text-gray-400 hover:text-gray-600\"\n            >\n              ×\n            </button>\n          </div>\n          \n          {selectedNode.data.duration && (\n            <p className=\"text-sm text-gray-600 mb-2\">\n              <strong>Duration:</strong> {selectedNode.data.duration}\n            </p>\n          )}\n          \n          {selectedNode.data.skills && selectedNode.data.skills.length > 0 && (\n            <div>\n              <p className=\"text-sm font-medium text-gray-700 mb-2\">Skills to develop:</p>\n              <div className=\"space-y-1\">\n                {selectedNode.data.skills.map((skill, idx) => (\n                  <span key={idx} className=\"inline-block bg-primary-100 text-primary-800 px-2 py-1 rounded text-xs mr-1\">\n                    {skill}\n                  </span>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CareerRoadmapFlow; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}