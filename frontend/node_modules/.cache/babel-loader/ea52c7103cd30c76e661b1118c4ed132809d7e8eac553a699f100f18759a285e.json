{"ast":null,"code":"import * as util from '../util.js';\nexport { addTextLabel };\n\n/*\n * Attaches a text label to the specified root. Handles escape sequences.\n */\nfunction addTextLabel(root, node) {\n  var domNode = root.append('text');\n  var lines = processEscapeSequences(node.label).split('\\n');\n  for (var i = 0; i < lines.length; i++) {\n    domNode.append('tspan').attr('xml:space', 'preserve').attr('dy', '1em').attr('x', '1').text(lines[i]);\n  }\n  util.applyStyle(domNode, node.labelStyle);\n  return domNode;\n}\nfunction processEscapeSequences(text) {\n  var newText = '';\n  var escaped = false;\n  var ch;\n  for (var i = 0; i < text.length; ++i) {\n    ch = text[i];\n    if (escaped) {\n      switch (ch) {\n        case 'n':\n          newText += '\\n';\n          break;\n        default:\n          newText += ch;\n      }\n      escaped = false;\n    } else if (ch === '\\\\') {\n      escaped = true;\n    } else {\n      newText += ch;\n    }\n  }\n  return newText;\n}","map":{"version":3,"names":["util","addTextLabel","root","node","domNode","append","lines","processEscapeSequences","label","split","i","length","attr","text","applyStyle","labelStyle","newText","escaped","ch"],"sources":["/Users/anasshaik/Desktop/Projects/CareerPath.AI/frontend/node_modules/dagre-d3-es/src/dagre-js/label/add-text-label.js"],"sourcesContent":["import * as util from '../util.js';\n\nexport { addTextLabel };\n\n/*\n * Attaches a text label to the specified root. Handles escape sequences.\n */\nfunction addTextLabel(root, node) {\n  var domNode = root.append('text');\n\n  var lines = processEscapeSequences(node.label).split('\\n');\n  for (var i = 0; i < lines.length; i++) {\n    domNode\n      .append('tspan')\n      .attr('xml:space', 'preserve')\n      .attr('dy', '1em')\n      .attr('x', '1')\n      .text(lines[i]);\n  }\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\nfunction processEscapeSequences(text) {\n  var newText = '';\n  var escaped = false;\n  var ch;\n  for (var i = 0; i < text.length; ++i) {\n    ch = text[i];\n    if (escaped) {\n      switch (ch) {\n        case 'n':\n          newText += '\\n';\n          break;\n        default:\n          newText += ch;\n      }\n      escaped = false;\n    } else if (ch === '\\\\') {\n      escaped = true;\n    } else {\n      newText += ch;\n    }\n  }\n  return newText;\n}\n"],"mappings":"AAAA,OAAO,KAAKA,IAAI,MAAM,YAAY;AAElC,SAASC,YAAY;;AAErB;AACA;AACA;AACA,SAASA,YAAYA,CAACC,IAAI,EAAEC,IAAI,EAAE;EAChC,IAAIC,OAAO,GAAGF,IAAI,CAACG,MAAM,CAAC,MAAM,CAAC;EAEjC,IAAIC,KAAK,GAAGC,sBAAsB,CAACJ,IAAI,CAACK,KAAK,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC;EAC1D,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,KAAK,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACrCN,OAAO,CACJC,MAAM,CAAC,OAAO,CAAC,CACfO,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,CAC7BA,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CACjBA,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CACdC,IAAI,CAACP,KAAK,CAACI,CAAC,CAAC,CAAC;EACnB;EAEAV,IAAI,CAACc,UAAU,CAACV,OAAO,EAAED,IAAI,CAACY,UAAU,CAAC;EAEzC,OAAOX,OAAO;AAChB;AAEA,SAASG,sBAAsBA,CAACM,IAAI,EAAE;EACpC,IAAIG,OAAO,GAAG,EAAE;EAChB,IAAIC,OAAO,GAAG,KAAK;EACnB,IAAIC,EAAE;EACN,KAAK,IAAIR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,IAAI,CAACF,MAAM,EAAE,EAAED,CAAC,EAAE;IACpCQ,EAAE,GAAGL,IAAI,CAACH,CAAC,CAAC;IACZ,IAAIO,OAAO,EAAE;MACX,QAAQC,EAAE;QACR,KAAK,GAAG;UACNF,OAAO,IAAI,IAAI;UACf;QACF;UACEA,OAAO,IAAIE,EAAE;MACjB;MACAD,OAAO,GAAG,KAAK;IACjB,CAAC,MAAM,IAAIC,EAAE,KAAK,IAAI,EAAE;MACtBD,OAAO,GAAG,IAAI;IAChB,CAAC,MAAM;MACLD,OAAO,IAAIE,EAAE;IACf;EACF;EACA,OAAOF,OAAO;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}