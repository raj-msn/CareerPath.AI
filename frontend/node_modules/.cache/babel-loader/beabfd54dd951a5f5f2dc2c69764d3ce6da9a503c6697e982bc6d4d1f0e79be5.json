{"ast":null,"code":"import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\nimport { addBorderSegments } from './add-border-segments.js';\nimport * as coordinateSystem from './coordinate-system.js';\nimport * as acyclic from './acyclic.js';\nimport * as normalize from './normalize.js';\nimport { rank } from './rank/index.js';\nimport * as nestingGraph from './nesting-graph.js';\nimport { order } from './order/index.js';\nimport { parentDummyChains } from './parent-dummy-chains.js';\nimport { position } from './position/index.js';\nimport * as util from './util.js';\nexport { layout };\nfunction layout(g, opts) {\n  var time = opts && opts.debugTiming ? util.time : util.notime;\n  time('layout', function () {\n    var layoutGraph = time('  buildLayoutGraph', function () {\n      return buildLayoutGraph(g);\n    });\n    time('  runLayout', function () {\n      runLayout(layoutGraph, time);\n    });\n    time('  updateInputGraph', function () {\n      updateInputGraph(g, layoutGraph);\n    });\n  });\n}\nfunction runLayout(g, time) {\n  time('    makeSpaceForEdgeLabels', function () {\n    makeSpaceForEdgeLabels(g);\n  });\n  time('    removeSelfEdges', function () {\n    removeSelfEdges(g);\n  });\n  time('    acyclic', function () {\n    acyclic.run(g);\n  });\n  time('    nestingGraph.run', function () {\n    nestingGraph.run(g);\n  });\n  time('    rank', function () {\n    rank(util.asNonCompoundGraph(g));\n  });\n  time('    injectEdgeLabelProxies', function () {\n    injectEdgeLabelProxies(g);\n  });\n  time('    removeEmptyRanks', function () {\n    util.removeEmptyRanks(g);\n  });\n  time('    nestingGraph.cleanup', function () {\n    nestingGraph.cleanup(g);\n  });\n  time('    normalizeRanks', function () {\n    util.normalizeRanks(g);\n  });\n  time('    assignRankMinMax', function () {\n    assignRankMinMax(g);\n  });\n  time('    removeEdgeLabelProxies', function () {\n    removeEdgeLabelProxies(g);\n  });\n  time('    normalize.run', function () {\n    normalize.run(g);\n  });\n  time('    parentDummyChains', function () {\n    parentDummyChains(g);\n  });\n  time('    addBorderSegments', function () {\n    addBorderSegments(g);\n  });\n  time('    order', function () {\n    order(g);\n  });\n  time('    insertSelfEdges', function () {\n    insertSelfEdges(g);\n  });\n  time('    adjustCoordinateSystem', function () {\n    coordinateSystem.adjust(g);\n  });\n  time('    position', function () {\n    position(g);\n  });\n  time('    positionSelfEdges', function () {\n    positionSelfEdges(g);\n  });\n  time('    removeBorderNodes', function () {\n    removeBorderNodes(g);\n  });\n  time('    normalize.undo', function () {\n    normalize.undo(g);\n  });\n  time('    fixupEdgeLabelCoords', function () {\n    fixupEdgeLabelCoords(g);\n  });\n  time('    undoCoordinateSystem', function () {\n    coordinateSystem.undo(g);\n  });\n  time('    translateGraph', function () {\n    translateGraph(g);\n  });\n  time('    assignNodeIntersects', function () {\n    assignNodeIntersects(g);\n  });\n  time('    reversePoints', function () {\n    reversePointsForReversedEdges(g);\n  });\n  time('    acyclic.undo', function () {\n    acyclic.undo(g);\n  });\n}\n\n/*\n * Copies final layout information from the layout graph back to the input\n * graph. This process only copies whitelisted attributes from the layout graph\n * to the input graph, so it serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction updateInputGraph(inputGraph, layoutGraph) {\n  _.forEach(inputGraph.nodes(), function (v) {\n    var inputLabel = inputGraph.node(v);\n    var layoutLabel = layoutGraph.node(v);\n    if (inputLabel) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n      if (layoutGraph.children(v).length) {\n        inputLabel.width = layoutLabel.width;\n        inputLabel.height = layoutLabel.height;\n      }\n    }\n  });\n  _.forEach(inputGraph.edges(), function (e) {\n    var inputLabel = inputGraph.edge(e);\n    var layoutLabel = layoutGraph.edge(e);\n    inputLabel.points = layoutLabel.points;\n    if (_.has(layoutLabel, 'x')) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n    }\n  });\n  inputGraph.graph().width = layoutGraph.graph().width;\n  inputGraph.graph().height = layoutGraph.graph().height;\n}\nvar graphNumAttrs = ['nodesep', 'edgesep', 'ranksep', 'marginx', 'marginy'];\nvar graphDefaults = {\n  ranksep: 50,\n  edgesep: 20,\n  nodesep: 50,\n  rankdir: 'tb'\n};\nvar graphAttrs = ['acyclicer', 'ranker', 'rankdir', 'align'];\nvar nodeNumAttrs = ['width', 'height'];\nvar nodeDefaults = {\n  width: 0,\n  height: 0\n};\nvar edgeNumAttrs = ['minlen', 'weight', 'width', 'height', 'labeloffset'];\nvar edgeDefaults = {\n  minlen: 1,\n  weight: 1,\n  width: 0,\n  height: 0,\n  labeloffset: 10,\n  labelpos: 'r'\n};\nvar edgeAttrs = ['labelpos'];\n\n/*\n * Constructs a new graph from the input graph, which can be used for layout.\n * This process copies only whitelisted attributes from the input graph to the\n * layout graph. Thus this function serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction buildLayoutGraph(inputGraph) {\n  var g = new Graph({\n    multigraph: true,\n    compound: true\n  });\n  var graph = canonicalize(inputGraph.graph());\n  g.setGraph(_.merge({}, graphDefaults, selectNumberAttrs(graph, graphNumAttrs), _.pick(graph, graphAttrs)));\n  _.forEach(inputGraph.nodes(), function (v) {\n    var node = canonicalize(inputGraph.node(v));\n    g.setNode(v, _.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n    g.setParent(v, inputGraph.parent(v));\n  });\n  _.forEach(inputGraph.edges(), function (e) {\n    var edge = canonicalize(inputGraph.edge(e));\n    g.setEdge(e, _.merge({}, edgeDefaults, selectNumberAttrs(edge, edgeNumAttrs), _.pick(edge, edgeAttrs)));\n  });\n  return g;\n}\n\n/*\n * This idea comes from the Gansner paper: to account for edge labels in our\n * layout we split each rank in half by doubling minlen and halving ranksep.\n * Then we can place labels at these mid-points between nodes.\n *\n * We also add some minimal padding to the width to push the label for the edge\n * away from the edge itself a bit.\n */\nfunction makeSpaceForEdgeLabels(g) {\n  var graph = g.graph();\n  graph.ranksep /= 2;\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    edge.minlen *= 2;\n    if (edge.labelpos.toLowerCase() !== 'c') {\n      if (graph.rankdir === 'TB' || graph.rankdir === 'BT') {\n        edge.width += edge.labeloffset;\n      } else {\n        edge.height += edge.labeloffset;\n      }\n    }\n  });\n}\n\n/*\n * Creates temporary dummy nodes that capture the rank in which each edge's\n * label is going to, if it has one of non-zero width and height. We do this\n * so that we can safely remove empty ranks while preserving balance for the\n * label's position.\n */\nfunction injectEdgeLabelProxies(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.width && edge.height) {\n      var v = g.node(e.v);\n      var w = g.node(e.w);\n      var label = {\n        rank: (w.rank - v.rank) / 2 + v.rank,\n        e: e\n      };\n      util.addDummyNode(g, 'edge-proxy', label, '_ep');\n    }\n  });\n}\nfunction assignRankMinMax(g) {\n  var maxRank = 0;\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.borderTop) {\n      node.minRank = g.node(node.borderTop).rank;\n      node.maxRank = g.node(node.borderBottom).rank;\n      // @ts-expect-error\n      maxRank = _.max(maxRank, node.maxRank);\n    }\n  });\n  g.graph().maxRank = maxRank;\n}\nfunction removeEdgeLabelProxies(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'edge-proxy') {\n      g.edge(node.e).labelRank = node.rank;\n      g.removeNode(v);\n    }\n  });\n}\nfunction translateGraph(g) {\n  var minX = Number.POSITIVE_INFINITY;\n  var maxX = 0;\n  var minY = Number.POSITIVE_INFINITY;\n  var maxY = 0;\n  var graphLabel = g.graph();\n  var marginX = graphLabel.marginx || 0;\n  var marginY = graphLabel.marginy || 0;\n  function getExtremes(attrs) {\n    var x = attrs.x;\n    var y = attrs.y;\n    var w = attrs.width;\n    var h = attrs.height;\n    minX = Math.min(minX, x - w / 2);\n    maxX = Math.max(maxX, x + w / 2);\n    minY = Math.min(minY, y - h / 2);\n    maxY = Math.max(maxY, y + h / 2);\n  }\n  _.forEach(g.nodes(), function (v) {\n    getExtremes(g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (_.has(edge, 'x')) {\n      getExtremes(edge);\n    }\n  });\n  minX -= marginX;\n  minY -= marginY;\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    node.x -= minX;\n    node.y -= minY;\n  });\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, function (p) {\n      p.x -= minX;\n      p.y -= minY;\n    });\n    if (_.has(edge, 'x')) {\n      edge.x -= minX;\n    }\n    if (_.has(edge, 'y')) {\n      edge.y -= minY;\n    }\n  });\n  graphLabel.width = maxX - minX + marginX;\n  graphLabel.height = maxY - minY + marginY;\n}\nfunction assignNodeIntersects(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    var nodeV = g.node(e.v);\n    var nodeW = g.node(e.w);\n    var p1, p2;\n    if (!edge.points) {\n      edge.points = [];\n      p1 = nodeW;\n      p2 = nodeV;\n    } else {\n      p1 = edge.points[0];\n      p2 = edge.points[edge.points.length - 1];\n    }\n    edge.points.unshift(util.intersectRect(nodeV, p1));\n    edge.points.push(util.intersectRect(nodeW, p2));\n  });\n}\nfunction fixupEdgeLabelCoords(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (_.has(edge, 'x')) {\n      if (edge.labelpos === 'l' || edge.labelpos === 'r') {\n        edge.width -= edge.labeloffset;\n      }\n      switch (edge.labelpos) {\n        case 'l':\n          edge.x -= edge.width / 2 + edge.labeloffset;\n          break;\n        case 'r':\n          edge.x += edge.width / 2 + edge.labeloffset;\n          break;\n      }\n    }\n  });\n}\nfunction reversePointsForReversedEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.reversed) {\n      edge.points.reverse();\n    }\n  });\n}\nfunction removeBorderNodes(g) {\n  _.forEach(g.nodes(), function (v) {\n    if (g.children(v).length) {\n      var node = g.node(v);\n      var t = g.node(node.borderTop);\n      var b = g.node(node.borderBottom);\n      var l = g.node(_.last(node.borderLeft));\n      var r = g.node(_.last(node.borderRight));\n      node.width = Math.abs(r.x - l.x);\n      node.height = Math.abs(b.y - t.y);\n      node.x = l.x + node.width / 2;\n      node.y = t.y + node.height / 2;\n    }\n  });\n  _.forEach(g.nodes(), function (v) {\n    if (g.node(v).dummy === 'border') {\n      g.removeNode(v);\n    }\n  });\n}\nfunction removeSelfEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    if (e.v === e.w) {\n      var node = g.node(e.v);\n      if (!node.selfEdges) {\n        node.selfEdges = [];\n      }\n      node.selfEdges.push({\n        e: e,\n        label: g.edge(e)\n      });\n      g.removeEdge(e);\n    }\n  });\n}\nfunction insertSelfEdges(g) {\n  var layers = util.buildLayerMatrix(g);\n  _.forEach(layers, function (layer) {\n    var orderShift = 0;\n    _.forEach(layer, function (v, i) {\n      var node = g.node(v);\n      node.order = i + orderShift;\n      _.forEach(node.selfEdges, function (selfEdge) {\n        util.addDummyNode(g, 'selfedge', {\n          width: selfEdge.label.width,\n          height: selfEdge.label.height,\n          rank: node.rank,\n          order: i + ++orderShift,\n          e: selfEdge.e,\n          label: selfEdge.label\n        }, '_se');\n      });\n      delete node.selfEdges;\n    });\n  });\n}\nfunction positionSelfEdges(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'selfedge') {\n      var selfNode = g.node(node.e.v);\n      var x = selfNode.x + selfNode.width / 2;\n      var y = selfNode.y;\n      var dx = node.x - x;\n      var dy = selfNode.height / 2;\n      g.setEdge(node.e, node.label);\n      g.removeNode(v);\n      node.label.points = [{\n        x: x + 2 * dx / 3,\n        y: y - dy\n      }, {\n        x: x + 5 * dx / 6,\n        y: y - dy\n      }, {\n        x: x + dx,\n        y: y\n      }, {\n        x: x + 5 * dx / 6,\n        y: y + dy\n      }, {\n        x: x + 2 * dx / 3,\n        y: y + dy\n      }];\n      node.label.x = node.x;\n      node.label.y = node.y;\n    }\n  });\n}\nfunction selectNumberAttrs(obj, attrs) {\n  return _.mapValues(_.pick(obj, attrs), Number);\n}\nfunction canonicalize(attrs) {\n  var newAttrs = {};\n  _.forEach(attrs, function (v, k) {\n    newAttrs[k.toLowerCase()] = v;\n  });\n  return newAttrs;\n}","map":{"version":3,"names":["_","Graph","addBorderSegments","coordinateSystem","acyclic","normalize","rank","nestingGraph","order","parentDummyChains","position","util","layout","g","opts","time","debugTiming","notime","layoutGraph","buildLayoutGraph","runLayout","updateInputGraph","makeSpaceForEdgeLabels","removeSelfEdges","run","asNonCompoundGraph","injectEdgeLabelProxies","removeEmptyRanks","cleanup","normalizeRanks","assignRankMinMax","removeEdgeLabelProxies","insertSelfEdges","adjust","positionSelfEdges","removeBorderNodes","undo","fixupEdgeLabelCoords","translateGraph","assignNodeIntersects","reversePointsForReversedEdges","inputGraph","forEach","nodes","v","inputLabel","node","layoutLabel","x","y","children","length","width","height","edges","e","edge","points","has","graph","graphNumAttrs","graphDefaults","ranksep","edgesep","nodesep","rankdir","graphAttrs","nodeNumAttrs","nodeDefaults","edgeNumAttrs","edgeDefaults","minlen","weight","labeloffset","labelpos","edgeAttrs","multigraph","compound","canonicalize","setGraph","merge","selectNumberAttrs","pick","setNode","defaults","setParent","parent","setEdge","toLowerCase","w","label","addDummyNode","maxRank","borderTop","minRank","borderBottom","max","dummy","labelRank","removeNode","minX","Number","POSITIVE_INFINITY","maxX","minY","maxY","graphLabel","marginX","marginx","marginY","marginy","getExtremes","attrs","h","Math","min","p","nodeV","nodeW","p1","p2","unshift","intersectRect","push","reversed","reverse","t","b","l","last","borderLeft","r","borderRight","abs","selfEdges","removeEdge","layers","buildLayerMatrix","layer","orderShift","i","selfEdge","selfNode","dx","dy","obj","mapValues","newAttrs","k"],"sources":["/Users/anasshaik/Desktop/Projects/CareerPath.AI/frontend/node_modules/dagre-d3-es/src/dagre/layout.js"],"sourcesContent":["import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\nimport { addBorderSegments } from './add-border-segments.js';\nimport * as coordinateSystem from './coordinate-system.js';\nimport * as acyclic from './acyclic.js';\nimport * as normalize from './normalize.js';\nimport { rank } from './rank/index.js';\nimport * as nestingGraph from './nesting-graph.js';\nimport { order } from './order/index.js';\nimport { parentDummyChains } from './parent-dummy-chains.js';\nimport { position } from './position/index.js';\nimport * as util from './util.js';\n\nexport { layout };\n\nfunction layout(g, opts) {\n  var time = opts && opts.debugTiming ? util.time : util.notime;\n  time('layout', function () {\n    var layoutGraph = time('  buildLayoutGraph', function () {\n      return buildLayoutGraph(g);\n    });\n    time('  runLayout', function () {\n      runLayout(layoutGraph, time);\n    });\n    time('  updateInputGraph', function () {\n      updateInputGraph(g, layoutGraph);\n    });\n  });\n}\n\nfunction runLayout(g, time) {\n  time('    makeSpaceForEdgeLabels', function () {\n    makeSpaceForEdgeLabels(g);\n  });\n  time('    removeSelfEdges', function () {\n    removeSelfEdges(g);\n  });\n  time('    acyclic', function () {\n    acyclic.run(g);\n  });\n  time('    nestingGraph.run', function () {\n    nestingGraph.run(g);\n  });\n  time('    rank', function () {\n    rank(util.asNonCompoundGraph(g));\n  });\n  time('    injectEdgeLabelProxies', function () {\n    injectEdgeLabelProxies(g);\n  });\n  time('    removeEmptyRanks', function () {\n    util.removeEmptyRanks(g);\n  });\n  time('    nestingGraph.cleanup', function () {\n    nestingGraph.cleanup(g);\n  });\n  time('    normalizeRanks', function () {\n    util.normalizeRanks(g);\n  });\n  time('    assignRankMinMax', function () {\n    assignRankMinMax(g);\n  });\n  time('    removeEdgeLabelProxies', function () {\n    removeEdgeLabelProxies(g);\n  });\n  time('    normalize.run', function () {\n    normalize.run(g);\n  });\n  time('    parentDummyChains', function () {\n    parentDummyChains(g);\n  });\n  time('    addBorderSegments', function () {\n    addBorderSegments(g);\n  });\n  time('    order', function () {\n    order(g);\n  });\n  time('    insertSelfEdges', function () {\n    insertSelfEdges(g);\n  });\n  time('    adjustCoordinateSystem', function () {\n    coordinateSystem.adjust(g);\n  });\n  time('    position', function () {\n    position(g);\n  });\n  time('    positionSelfEdges', function () {\n    positionSelfEdges(g);\n  });\n  time('    removeBorderNodes', function () {\n    removeBorderNodes(g);\n  });\n  time('    normalize.undo', function () {\n    normalize.undo(g);\n  });\n  time('    fixupEdgeLabelCoords', function () {\n    fixupEdgeLabelCoords(g);\n  });\n  time('    undoCoordinateSystem', function () {\n    coordinateSystem.undo(g);\n  });\n  time('    translateGraph', function () {\n    translateGraph(g);\n  });\n  time('    assignNodeIntersects', function () {\n    assignNodeIntersects(g);\n  });\n  time('    reversePoints', function () {\n    reversePointsForReversedEdges(g);\n  });\n  time('    acyclic.undo', function () {\n    acyclic.undo(g);\n  });\n}\n\n/*\n * Copies final layout information from the layout graph back to the input\n * graph. This process only copies whitelisted attributes from the layout graph\n * to the input graph, so it serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction updateInputGraph(inputGraph, layoutGraph) {\n  _.forEach(inputGraph.nodes(), function (v) {\n    var inputLabel = inputGraph.node(v);\n    var layoutLabel = layoutGraph.node(v);\n\n    if (inputLabel) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n\n      if (layoutGraph.children(v).length) {\n        inputLabel.width = layoutLabel.width;\n        inputLabel.height = layoutLabel.height;\n      }\n    }\n  });\n\n  _.forEach(inputGraph.edges(), function (e) {\n    var inputLabel = inputGraph.edge(e);\n    var layoutLabel = layoutGraph.edge(e);\n\n    inputLabel.points = layoutLabel.points;\n    if (_.has(layoutLabel, 'x')) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n    }\n  });\n\n  inputGraph.graph().width = layoutGraph.graph().width;\n  inputGraph.graph().height = layoutGraph.graph().height;\n}\n\nvar graphNumAttrs = ['nodesep', 'edgesep', 'ranksep', 'marginx', 'marginy'];\nvar graphDefaults = { ranksep: 50, edgesep: 20, nodesep: 50, rankdir: 'tb' };\nvar graphAttrs = ['acyclicer', 'ranker', 'rankdir', 'align'];\nvar nodeNumAttrs = ['width', 'height'];\nvar nodeDefaults = { width: 0, height: 0 };\nvar edgeNumAttrs = ['minlen', 'weight', 'width', 'height', 'labeloffset'];\nvar edgeDefaults = {\n  minlen: 1,\n  weight: 1,\n  width: 0,\n  height: 0,\n  labeloffset: 10,\n  labelpos: 'r',\n};\nvar edgeAttrs = ['labelpos'];\n\n/*\n * Constructs a new graph from the input graph, which can be used for layout.\n * This process copies only whitelisted attributes from the input graph to the\n * layout graph. Thus this function serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction buildLayoutGraph(inputGraph) {\n  var g = new Graph({ multigraph: true, compound: true });\n  var graph = canonicalize(inputGraph.graph());\n\n  g.setGraph(\n    _.merge({}, graphDefaults, selectNumberAttrs(graph, graphNumAttrs), _.pick(graph, graphAttrs))\n  );\n\n  _.forEach(inputGraph.nodes(), function (v) {\n    var node = canonicalize(inputGraph.node(v));\n    g.setNode(v, _.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n    g.setParent(v, inputGraph.parent(v));\n  });\n\n  _.forEach(inputGraph.edges(), function (e) {\n    var edge = canonicalize(inputGraph.edge(e));\n    g.setEdge(\n      e,\n      _.merge({}, edgeDefaults, selectNumberAttrs(edge, edgeNumAttrs), _.pick(edge, edgeAttrs))\n    );\n  });\n\n  return g;\n}\n\n/*\n * This idea comes from the Gansner paper: to account for edge labels in our\n * layout we split each rank in half by doubling minlen and halving ranksep.\n * Then we can place labels at these mid-points between nodes.\n *\n * We also add some minimal padding to the width to push the label for the edge\n * away from the edge itself a bit.\n */\nfunction makeSpaceForEdgeLabels(g) {\n  var graph = g.graph();\n  graph.ranksep /= 2;\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    edge.minlen *= 2;\n    if (edge.labelpos.toLowerCase() !== 'c') {\n      if (graph.rankdir === 'TB' || graph.rankdir === 'BT') {\n        edge.width += edge.labeloffset;\n      } else {\n        edge.height += edge.labeloffset;\n      }\n    }\n  });\n}\n\n/*\n * Creates temporary dummy nodes that capture the rank in which each edge's\n * label is going to, if it has one of non-zero width and height. We do this\n * so that we can safely remove empty ranks while preserving balance for the\n * label's position.\n */\nfunction injectEdgeLabelProxies(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.width && edge.height) {\n      var v = g.node(e.v);\n      var w = g.node(e.w);\n      var label = { rank: (w.rank - v.rank) / 2 + v.rank, e: e };\n      util.addDummyNode(g, 'edge-proxy', label, '_ep');\n    }\n  });\n}\n\nfunction assignRankMinMax(g) {\n  var maxRank = 0;\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.borderTop) {\n      node.minRank = g.node(node.borderTop).rank;\n      node.maxRank = g.node(node.borderBottom).rank;\n      // @ts-expect-error\n      maxRank = _.max(maxRank, node.maxRank);\n    }\n  });\n  g.graph().maxRank = maxRank;\n}\n\nfunction removeEdgeLabelProxies(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'edge-proxy') {\n      g.edge(node.e).labelRank = node.rank;\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction translateGraph(g) {\n  var minX = Number.POSITIVE_INFINITY;\n  var maxX = 0;\n  var minY = Number.POSITIVE_INFINITY;\n  var maxY = 0;\n  var graphLabel = g.graph();\n  var marginX = graphLabel.marginx || 0;\n  var marginY = graphLabel.marginy || 0;\n\n  function getExtremes(attrs) {\n    var x = attrs.x;\n    var y = attrs.y;\n    var w = attrs.width;\n    var h = attrs.height;\n    minX = Math.min(minX, x - w / 2);\n    maxX = Math.max(maxX, x + w / 2);\n    minY = Math.min(minY, y - h / 2);\n    maxY = Math.max(maxY, y + h / 2);\n  }\n\n  _.forEach(g.nodes(), function (v) {\n    getExtremes(g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (_.has(edge, 'x')) {\n      getExtremes(edge);\n    }\n  });\n\n  minX -= marginX;\n  minY -= marginY;\n\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    node.x -= minX;\n    node.y -= minY;\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, function (p) {\n      p.x -= minX;\n      p.y -= minY;\n    });\n    if (_.has(edge, 'x')) {\n      edge.x -= minX;\n    }\n    if (_.has(edge, 'y')) {\n      edge.y -= minY;\n    }\n  });\n\n  graphLabel.width = maxX - minX + marginX;\n  graphLabel.height = maxY - minY + marginY;\n}\n\nfunction assignNodeIntersects(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    var nodeV = g.node(e.v);\n    var nodeW = g.node(e.w);\n    var p1, p2;\n    if (!edge.points) {\n      edge.points = [];\n      p1 = nodeW;\n      p2 = nodeV;\n    } else {\n      p1 = edge.points[0];\n      p2 = edge.points[edge.points.length - 1];\n    }\n    edge.points.unshift(util.intersectRect(nodeV, p1));\n    edge.points.push(util.intersectRect(nodeW, p2));\n  });\n}\n\nfunction fixupEdgeLabelCoords(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (_.has(edge, 'x')) {\n      if (edge.labelpos === 'l' || edge.labelpos === 'r') {\n        edge.width -= edge.labeloffset;\n      }\n      switch (edge.labelpos) {\n        case 'l':\n          edge.x -= edge.width / 2 + edge.labeloffset;\n          break;\n        case 'r':\n          edge.x += edge.width / 2 + edge.labeloffset;\n          break;\n      }\n    }\n  });\n}\n\nfunction reversePointsForReversedEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.reversed) {\n      edge.points.reverse();\n    }\n  });\n}\n\nfunction removeBorderNodes(g) {\n  _.forEach(g.nodes(), function (v) {\n    if (g.children(v).length) {\n      var node = g.node(v);\n      var t = g.node(node.borderTop);\n      var b = g.node(node.borderBottom);\n      var l = g.node(_.last(node.borderLeft));\n      var r = g.node(_.last(node.borderRight));\n\n      node.width = Math.abs(r.x - l.x);\n      node.height = Math.abs(b.y - t.y);\n      node.x = l.x + node.width / 2;\n      node.y = t.y + node.height / 2;\n    }\n  });\n\n  _.forEach(g.nodes(), function (v) {\n    if (g.node(v).dummy === 'border') {\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction removeSelfEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    if (e.v === e.w) {\n      var node = g.node(e.v);\n      if (!node.selfEdges) {\n        node.selfEdges = [];\n      }\n      node.selfEdges.push({ e: e, label: g.edge(e) });\n      g.removeEdge(e);\n    }\n  });\n}\n\nfunction insertSelfEdges(g) {\n  var layers = util.buildLayerMatrix(g);\n  _.forEach(layers, function (layer) {\n    var orderShift = 0;\n    _.forEach(layer, function (v, i) {\n      var node = g.node(v);\n      node.order = i + orderShift;\n      _.forEach(node.selfEdges, function (selfEdge) {\n        util.addDummyNode(\n          g,\n          'selfedge',\n          {\n            width: selfEdge.label.width,\n            height: selfEdge.label.height,\n            rank: node.rank,\n            order: i + ++orderShift,\n            e: selfEdge.e,\n            label: selfEdge.label,\n          },\n          '_se'\n        );\n      });\n      delete node.selfEdges;\n    });\n  });\n}\n\nfunction positionSelfEdges(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'selfedge') {\n      var selfNode = g.node(node.e.v);\n      var x = selfNode.x + selfNode.width / 2;\n      var y = selfNode.y;\n      var dx = node.x - x;\n      var dy = selfNode.height / 2;\n      g.setEdge(node.e, node.label);\n      g.removeNode(v);\n      node.label.points = [\n        { x: x + (2 * dx) / 3, y: y - dy },\n        { x: x + (5 * dx) / 6, y: y - dy },\n        { x: x + dx, y: y },\n        { x: x + (5 * dx) / 6, y: y + dy },\n        { x: x + (2 * dx) / 3, y: y + dy },\n      ];\n      node.label.x = node.x;\n      node.label.y = node.y;\n    }\n  });\n}\n\nfunction selectNumberAttrs(obj, attrs) {\n  return _.mapValues(_.pick(obj, attrs), Number);\n}\n\nfunction canonicalize(attrs) {\n  var newAttrs = {};\n  _.forEach(attrs, function (v, k) {\n    newAttrs[k.toLowerCase()] = v;\n  });\n  return newAttrs;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}